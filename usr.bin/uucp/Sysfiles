#ident  "@(#)Sysfiles 1.1 92/07/30"	/* from SVR3.2 uucp:Sysfiles 1.2 */
#
#	Sysfiles provides a means of specifying different Systems,
#	Devices and Dialers files for uucico and cu.  This is useful
#	for certain networks where, for example, requests for login
#	service might be accepted on a different address than requests
#	for uucico service (hence different Systems files), or where
#	there are different chat scripts to request each service 
#	(hence different Dialers files).
#
#	Another use of Sysfiles is to split large Systems files into
#	smaller, more manageable files (e.g., local and global Systems 
#	files).
#
#	FORMAT:
#
#	service=<service name>	systems=<systems file list> \
#				devices=<devices file list> \
#				dialers=<dialers file list>
#
#	Where service name is "uucico" or "cu".  Each file list is a list
#	of colon-separated file names.  File names are relative to 
#	/usr/lib/uucp unless a full path name is given.  Files are searched
#	in the order that they appear in the file list.
#
#	The defaults are the usual uucp files: /usr/lib/uucp/Systems,
#	/usr/lib/uucp/Devices and /usr/lib/uucp/Dialers.
#
#	EXAMPLE 1:  
#	This example uses different systems and dialers files to separate
#	the uucico- and cu-specific info, with information that they
#	use in common still in the "usual" Systems and Dialers files.
#
#	service=uucico	systems=Systems.cico:Systems \
#			dialers=Dialers.cico:Dialers
#	service=cu	systems=Systems.cu:Systems \
#			dialers=Dialers.cu:Dialers
#
#	EXAMPLE 2:  
#	This example uses the same systems files for uucico and cu,
#	but has split the Systems file into local, company-wide,
#	and global files.
#
#	service=uucico	systems=Systems.local:Systems.company:Systems
#	service=cu	systems=Systems.local:Systems.company:Systems
