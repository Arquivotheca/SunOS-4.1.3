/*	@(#)llib-lpixrect	1.1	92/07/30	SMI	*/

/*
 * Copyright (c) 1985 by Sun Microsystems, Inc.
 */
/* LINTLIBRARY */
/* For libpixrect.a */
/* The varargs conmments are to get around duplicate calling methods where
 * the args are either cast as a structure or individually specified.
 * This prevents lint from doing a very good job. */
#include <pixrect/pixrect_hs.h>
#include <stdio.h>

struct  pixrectops mem_ops;
/*VARARGS*/
struct      pixrect * mem_create(w, h, depth) int w, h, depth;
	{ return ((struct pixrect *)0); }
PIXFONT * pf_open(fontname) char *fontname; { return ((PIXFONT *)0); }
pf_close(pf) PIXFONT *pf; { ; }
PIXFONT * pf_default() { return ((PIXFONT *)0); }
/*VARARGS*/
pf_text(prpos, op, pf, str) { ; }
/*VARARGS*/
/*VARARGS*/
pf_ttext(prpos, op, pf, str) { ; }
/*VARARGS*/
struct	pr_size pf_textbatch(dst, lenp, pf, str)
	{ struct pr_size prs; return(prs); }
pf_textbound(bound, len, pf, str)
        struct pr_subregion *bound; int len; PIXFONT *pf; u_char *str; { ; }
struct	pr_size pf_textwidth(len, pf, str)
        int len; PIXFONT *pf; u_char *str;
	{ struct pr_size prs; return(prs); }
/*VARARGS*/
pr_clip(dstp, srcp) { ; }
/*VARARGS*/
pr_replrop(dpr, dx, dy, dw, dh, op, spr, sx, sy) struct pixrect *dpr, *spr;
	{ return (0); }
char    pr_reversedst[16];
char    pr_reversesrc[16];
pr_blackonwhite(pr, min, max)
	struct pixrect *pr; int min, max; { ; }
pr_whiteonblack(pr, min, max)
	struct pixrect *pr; int min, max; { ; }
pr_reversevideo(pr, min, max)
	struct pixrect *pr; int min, max; { ; }
struct pixrect * pr_open(fbname) char *fbname;
	{ return ((struct pixrect *)0); }

struct pixrect *
pr_dump_init(input_pr, rh, colormap, type, copy_flag)
	struct pixrect		*input_pr;
	struct rasterfile	*rh;
	colormap_t		*colormap;
	int			 type, copy_flag;
{	return((struct pixrect *)0);	}
int
pr_dump(input_pr, output, colormap, type, copy_flag)
	struct pixrect	*input_pr;
	FILE		*output;
	colormap_t	*colormap;
	int		type, copy_flag;
{	return(0);	}
int
pr_dump_header(output, rh, colormap)
	FILE			*output;
	struct rasterfile	*rh;
	colormap_t		*colormap;
{	return(0);	}
int
pr_dump_image(pr, output, rh)
	struct pixrect		*pr;
	FILE			*output;
	struct rasterfile	*rh;
{	return(0);	}
struct pixrect *
pr_load(input, colormap)
	FILE		*input;
	colormap_t	*colormap;
{       return((struct pixrect *)0);      }
int
pr_load_colormap(input, rh, colormap)
	FILE			*input;
	struct rasterfile	*rh;
	colormap_t		*colormap;
{	return(0);	}
int
pr_load_header(input, rh)
	FILE			*input;
	struct rasterfile	*rh;
{	return(0);	}
struct pixrect *
pr_load_image(input, rh, colormap)
	FILE			*input;
	struct rasterfile	*rh;
	colormap_t		*colormap;
{       return((struct pixrect *)0);      }
struct pixrect *
pr_load_std_image(input, rh)
	FILE			*input;
	struct rasterfile	*rh;
{       return((struct pixrect *)0);      }
