/*	@(#)llib-lm 1.1 92/07/30 SMI; from S5R2 2.4	*/
/*LINTLIBRARY*/
#include <math.h>

/* BESSEL(3M) */
double	j0(x) double x; { return (x); }
double	j1(x) double x; { return (x); }
double	jn(n, x) double x; { return (x); }
double	y0(x) double x; { return (x); }
double	y1(x) double x; { return (x); }
double	yn(n, x) double x; { return (x); }
/* ERF(3M) */
double	erf(x) double x; { return (x); }
double	erfc(x) double x; { return (x); }
/* EXP(3M) */
double	exp(x) double x; { return (x); }
double	log(x) double x; { return (x); }
double	log10(x) double x; { return (x); }
double	pow(x, y) double x, y; { return (x); }
double	sqrt(x) double x; { return (x); }
/* FLOOR(3M) */
double	floor(x) double x; { return (x); }
double	ceil(x) double x; { return (x); }
double	fmod(x, y) double x, y; { return (x); }
double	fabs(x) double x; { return (x); }
/* GAMMA(3M) */
double	gamma(x) double x; { return (x); }
int	signgam;
/* HYPOT(3M) */
double	hypot(x, y) double x, y; { return (x); }
double	cabs(z) struct {double x, y;} z; { return (z.x); }
/* MATHERR(3M) */
int	matherr(p) struct exception *p; { return (0); }
/* SINH(3M) */
double	sinh(x) double x; { return (x); }
double	cosh(x) double x; { return (x); }
double	tanh(x) double x; { return (x); }
/* TRIG(3M) */
double	sin(x) double x; { return (x); }
double	cos(x) double x; { return (x); }
double	tan(x) double x; { return (x); }
double	asin(x) double x; { return (x); }
double	acos(x) double x; { return (x); }
double	atan(x) double x; { return (x); }
double	atan2(x, y) double x, y; { return (x); }
