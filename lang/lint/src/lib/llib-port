/*	@(#)llib-port 1.1 92/07/30 SMI; from S5R2 2.9	*/
/*LINTLIBRARY*/
#include <stdio.h>

/* EXIT(2) */
void	exit(s) {}
void	_exit(s) {}
/* SIGNAL(2) */
int (*	signal(s, a))() int (*a)(); { return (a); }
/* TIME(2) */
long	time(t) long *t; { return (0L); }
/* UNLINK(2) */
int	unlink(s) char *s; { return (0); }

/* ABORT(3C) */
	/*VARARGS0*/
int	abort() { return (0); }
/* ABS(3C) */
int	abs(i) { return (i); }
/* ASSERT(3X) */
void	_assert(a, f, n) char *a, *f; {}
/* CLOCK(3C) */
long	clock() { return (0L); }
/* CONV(3C) */
#undef _toupper
#undef _tolower
#undef toascii
int	toupper(i) { return (i); }
int	tolower(i) { return (i); }
int	_toupper(i) { return (i); }
int	_tolower(i) { return (i); }
int	toascii(i) { return (i); }
/* CRYPT(3C) */
char *	crypt(k, s) char *k, *s; { return (k); }
void	setkey(k) char *k; {}
void	encrypt(b, e) char *b; {}
/* CTERMID(3S) */
char *	ctermid(s) char *s; { return (s); }
/* CTIME(3C) */
char *	ctime(t) long *t; { return (""); }
#include <time.h>
struct tm *	localtime(c) long *c; { static struct tm x; return (&x); }
struct tm *	gmtime(c) long *c; { static struct tm x; return (&x); }
char *	asctime(t) struct tm *t; { return (""); }
void	tzset() {}
long	timezone;
int	daylight;
char *	tzname[2];
/* CTYPE(3C) */
#undef isalpha
#undef isupper
#undef islower
#undef isdigit
#undef isxdigit
#undef isalnum
#undef isspace
#undef ispunct
#undef isprint
#undef isgraph
#undef iscntrl
#undef isascii
int	isalpha(c) { return (c); }
int	isupper(c) { return (c); }
int	islower(c) { return (c); }
int	isdigit(c) { return (c); }
int	isxdigit(c) { return (c); }
int	isalnum(c) { return (c); }
int	isspace(c) { return (c); }
int	ispunct(c) { return (c); }
int	isprint(c) { return (c); }
int	isgraph(c) { return (c); }
int	iscntrl(c) { return (c); }
int	isascii(c) { return (c); }
char	_ctype[129];
/* CUSERID(3S) */
char *	cuserid(s) char *s; { return (s); }
/* DRAND48(3C) */
double	drand48() { return (0.0); }
double	erand48(x) unsigned short x[3]; { return (0.0); }
long	lrand48() { return (0L); }
long	nrand48(x) unsigned short x[3]; { return (0L); }
long	mrand48() { return (0L); }
long	jrand48(x) unsigned short x[3]; { return (0L); }
void	srand48(s) long s; {}
unsigned short *	seed48(s) unsigned short s[3]; { return s; }
void	lcong48(p) unsigned short p[7]; {}
/* FCLOSE(3S) */
int	fclose(f) FILE *f; { return (0); }
int	fflush(f) FILE *f; { return (0); }
/* FERROR(3S) */
#undef feof
#undef ferror
#undef clearerr
#undef fileno
int	feof(f) FILE *f; { return (0); }
int	ferror(f) FILE *f; { return (0); }
void	clearerr(f) FILE *f; {}
int	fileno(f) FILE *f; { return (0); }
/* FOPEN(3S) */
FILE *	fopen(f, t) char *f, *t; { return (stdin); }
FILE *	freopen(f, t, s) char *f, *t; FILE *s; { return (s); }
/* FREAD(3S) */
int	fread(b, s, n, f) char *b; FILE *f; { return (n); }
int	fwrite(b, s, n, f) char *b; FILE *f; { return (n); }
/* FREXP(3C) */
double	frexp(x, e) double x; int *e; { return (x); }
double	ldexp(v, e) double v; { return (v); }
double	modf(v, i) double v, *i; { return (v); }
/* FSEEK(3S) */
int	fseek(f, o, p) FILE *f; long o; { return (p); }
long	ftell(f) FILE *f; { return (0L); }
void	rewind(f) FILE *f; {}
/* GETC(3S) */
#undef getc
#undef getchar
int	getc(f) FILE *f; { return (0); }
int	getchar() { return (0); }
int	fgetc(f) FILE *f; { return (0); }
int	getw(f) FILE *f; { return (0); }
/* GETOPT(3C) */
int	getopt(c, v, o) char **v, *o; { return (c); }
char *	optarg;
int	optind;
int	opterr, optopt; /* undocumented */
/* GETS(3S) */
char *	gets(s) char *s; { return (s); }
char *	fgets(s, n, f) char *s; FILE *f; { return (s); }
/* MALLOC(3C) */
char *	malloc(s) unsigned s; { return (""); }
void	free(s) char *s; {}
char *	realloc(s, n) char *s; unsigned n; { return (s); }
char *	calloc(n, e) unsigned n, e; { return (""); }
/* MEMORY(3C) */
char *	memccpy(a, b, c, n) char *a, *b; { return (a); }
char *	memchr(s, c, n) char *s; { return (s); }
int	memcmp(a, b, n) char *a, *b; { return (n); }
char *	memcpy(a, b, n) char *a, *b; { return (a); }
char *	memset(s, c, n) char *s; { return (s); }
/* POPEN(3S) */
FILE *	popen(c, t) char *c, *t; { return (stdin); }
int	pclose(f) FILE *f; { return (0); }
/* PRINTF(3S) */
	/*VARARGS1 PRINTFLIKE1*/
int	printf(s) char *s; { return (0); }
	/*VARARGS2 PRINTFLIKE2*/
int	fprintf(f, s) FILE *f; char *s; { return (0); }
	/*VARARGS2 PRINTFLIKE2*/
char *	sprintf(p, s) char *p, *s; { return (0); }
/* PUTC(3S) */
#undef putc
#undef putchar
int	putc(c, f) FILE *f; { return (c); }
int	putchar(c) { return (c); }
int	fputc(c, f) FILE *f; { return (c); }
int	putw(w, f) FILE *f; { return (w); }
/* PUTS(3S) */
int	puts(s) char *s; { return (0); }
int	fputs(s, f) char *s; FILE *f; { return (0); }
/* QSORT(3C) */
void	qsort(b, n, w, c) char *b; unsigned n, w; int (*c)(); {}
/* RAND(3C) */
void	srand(s) unsigned s; {}
int	rand() { return (0); }
/* SCANF(3S) */
	/*VARARGS1 SCANFLIKE1*/
int	scanf(s) char *s; { return (0); }
	/*VARARGS2 SCANFLIKE2*/
int	fscanf(f, s) FILE *f; char *s; { return (0); }
	/*VARARGS2 SCANFLIKE2*/
int	sscanf(p, s) char *p, *s; { return (0); }
/* SETBUF(3S) */
void	setbuf(f, b) FILE *f; char *b; {}
/* SETJMP(3C) */
#include <setjmp.h>
int	setjmp(e) jmp_buf e; { return (0); }
void	longjmp(e, v) jmp_buf e; {}
/* SLEEP(3C) */
unsigned	sleep(n) unsigned n; { return (n); }
/* SSIGNAL(3C) */
int (*	ssignal(s, a))() int (*a)(); { return (a); }
int	gsignal(s) { return (s); }
/* STDIO(3S) */
FILE	_iob[];
/* STRING(3C) */
char *	strcat(a, b) char *a, *b; { return (a); }
char *	strncat(a, b, n) char *a, *b; { return (a); }
int	strcmp(a, b) char *a, *b; { return (0); }
int	strncmp(a, b, n) char *a, *b; { return (n); }
char *	strcpy(a, b) char *a, *b; { return (a); }
char *	strncpy(a, b, n) char *a, *b; { return (a); }
int	strlen(s) char *s; { return (0); }
char *	strchr(a, b) char *a, b; { return (a); }
char *	strrchr(a, b) char *a, b; { return (a); }
char *	strpbrk(a, b) char *a, *b; { return (a); }
int	strspn(a, b) char *a, *b; { return (0); }
int	strcspn(a, b) char *a, *b; { return (0); }
char *	strtok(a, b) char *a, *b; { return (a); }
/* STRTOD(3C) */
double	strtod(s, t) char *s, **t; { return (0.0); }
double	atof(s) char *s; { return (0.0); }
/* STRTOL(3C) */
long	strtol(s, t, b) char *s, **t; { return (0L); }
long	atol(s) char *s; { return (0L); }
int	atoi(s) char *s; { return (0); }
/* SYSTEM(3S) */
int	system(s) char *s; { return (0); }
/* TMPNAM(3S) */
char *	tmpnam(s) char *s; { return (s); }
/* TTYNAME(3C) */
char *	ttyname(f) { return (""); }
int	isatty(f) { return (f); }
/* UNGETC(3S) */
int	ungetc(c, f) FILE *f; { return (c); }

/* UNDOCUMENTED -- declared in UNIX stdio.h, not really in the port lib */
FILE *	fdopen(f, t) char *t; { return (stdin); }
char *	tempnam(d, s) char *d, *s; { return (d); }
FILE *	tmpfile() { return (stdin); }

