/*	@(#)llib-lansic 1.1 92/07/30 SMI */
/*LINTLIBRARY*/
/*
 * lint lib based on ANSI C Draft of Dec 1988
 */
#define	_POSIX_SOURCE
#include <assert.h>
#include <ctype.h>
#include <locale.h>
#include <math.h>
#include <setjmp.h>
#include <signal.h>
/*#include <stdarg.h>  -> varargs.h */
#include <varargs.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#undef	assert
#undef	isalnum
#undef	isalpha
#undef	isascii
#undef	iscntrl
#undef	isdigit
#undef	isgraph
#undef	islower
#undef	isprint
#undef	ispunct
#undef	isspace
#undef	isupper
#undef	isxdigit
#undef	clearerr
#undef	feof
#undef	ferror
#undef	getc
#undef	getchar
#undef	putc
#undef	putchar
#undef	mblen
#undef	va_start
#undef	va_end

/*
 * global variables that .h files use have to be declared here
 */
char		_ctype_[];
char		*environ[];
int		errno;
FILE		_iob[];
char		*tzname[];
int		daylight, timezone;

/*
 * These 3 are here because they are unsupported in SunOS 4.1.
 */
typedef		long fpos_t;
typedef		struct { int a, b; } div_t;
typedef		struct { long int a, b; } ldiv_t;

void		abort() { }
int		abs(i) { return (i); }
double		acos(x) double x; { return (x); }
char*		asctime(t) struct tm *t; { static char *x; return (x); }
double		asin(x) double x; { return (x); }
void		assert(p) {}
double		atan(x) double x; { return (x); }
double		atan2(x) double x; { return (x); }
int		atexit(f) void (*f) (); { static int x; return (x); }
double		atof(s) char *s; { return (0.0); }
int		atoi(s) char *s; { return (0); }
long		atol(s) char *s; { return (0L); }
void*		bsearch(k, b, n, w, c) void *k, *b; size_t n, w; int (*c) (); { return (k); }
void*		calloc(n, e) size_t n, e; { static void *x; return (x); }
double		ceil(x) double x; { return (x); }
void		clearerr(f) FILE *f; { }
clock_t		clock() { return (0L); }
double		cos(x) double x; { return (x); }
double		cosh(x) double x; { return (x); }
char*		ctime(t) struct tm *t; { return(""); }
double		difftime(t1, t2) time_t t1, t2; { return (0.0); }
div_t		div(numer, denom) long numer, denom; { div_t d; return (d); }
void		exit(s) { }
double		exp(x) double x; { return (x); }
double		fabs(x) double x; { return (x); }
int		fclose(f) FILE *f; { return (0); }
int		feof(f) FILE *f; { return (0); }
int		ferror(f) FILE *f; { return (0); }
int		fflush(f) FILE *f; { return (0); }
int		fgetc(f) FILE *f; { return (0); }
int		fgetpos(f, off, p) FILE *f; long off; fpos_t p; { return (0); }
char*		fgets(s, n, f) char *s; FILE *f; { return (s); }
double		floor(x) double x; { return (x); }
double		fmod(x, y) double x, y; { return (x); }
FILE*		fopen(f, t) char *f, *t; { return (stdin); }
		/*VARARGS2 PRINTFLIKE2*/
int		fprintf(f, s) FILE *f; char *s; { return (0); }
int		fputc(c, f) FILE *f; { return (c); }
int		fputs(s, f) char *s; FILE *f; { return (0); }
size_t		fread(b, s, n, f) void *b; size_t s, n; FILE *f; { return (n); }
void		free(s) void *s; { }
FILE*		freopen(f, t, s) char *f, *t; FILE *s; { return (s); }
double		frexp(x, e) double x; int *e; { return (x); }
		/*VARARGS2 SCANFLIKE2*/
int		fscanf(f, s) FILE *f; char *s; { return (0); }
int		fseek(f, o, p) FILE *f; long o; { return (0); }
int		fsetpos(f, pos) FILE *f; fpos_t *pos; { static int x; return (x); }
long		ftell(f) FILE *f; { static long p; return (p); }
size_t		fwrite(b, s, n, f) char *b; size_t s, n; FILE *f; { return (n); }
int		getc(f) FILE *f; { return (0); }
int		getchar() { return (0); }
char*		getenv(n) char *n; { return (n); }
char*		gets(s) char *s; { return (s); }
struct tm	*gmtime(t) struct tm *t; { return(t); }
int		isalnum(c) { return (c); }
int		isalpha(c) { return (c); }
int		iscntrl(c) { return (c); }
int		isdigit(c) { return (c); }
int		isgraph(c) { return (c); }
int		islower(c) { return (c); }
int		isprint(c) { return (c); }
int		ispunct(c) { return (c); }
int		isspace(c) { return (c); }
int		isupper(c) { return (c); }
int		isxdigit(c) { return (c); }
long		labs(j) long j; { return (j); }
struct		lconv *localeconv() { return ((struct lconv*)0); }
double		ldexp(v, e) double v; { return (v); }
ldiv_t		ldiv(numer, denom) long numer, denom; { ldiv_t d; return (d); }
struct tm	*localtime(t) struct tm *t; { return(t); }
double		log(x) double x; { return (x); }
double		log10(x) double x; { return (x); }
void		longjmp(e, v) jmp_buf e; { }
void*		malloc(s) size_t s; { static void *x; return (x); }
int		mblen(s, n) char *s; size_t n; { return (0); }
size_t		mbstowcs(pwc, s, n) wchar_t *pwc; char *s; size_t n; { return ((size_t) 0); }
int		mbtowc(pwc, s, n) wchar_t *pwc; char *s; size_t n; { return (0); }
void*		memchr(s, c, n) void *s; size_t n; { return (s); }
int		memcmp(a, b, n) void *a, *b; size_t n; { return (n); }
void*		memcpy(a, b, n) void *a, *b; size_t n; { }
void*		memmove(a, b, n) void *a, *b; size_t n; { }
void*		memset(s, c, n) void *s; size_t n; { return (s); }
time_t		mktime(t) struct tm *t; { static time_t x; return (x); }
double		modf(v, i) double v, *i; { return (v); }
void		perror(s) char *s; { }
double		pow(x, y) double x, y; { return (x); }
		/*VARARGS1 PRINTFLIKE1*/
int		printf(s) char *s; { return (0); }
int		putc(c, f) FILE *f; { return (c); }
int		putchar(c) { return (c); }
int		puts(s) char *s; { return (0); }
void		qsort(b, n, w, c) void *b; size_t n, w; int (*c) (); { }
int		raise(sig) { return (sig); }
int		rand() { return (0); }
void*		realloc(s, n) void *s; size_t n; { return (s); }
int		remove(f) char *f; { return (0); }
int		rename(f, t) char *f, *t; { return (0); }
void		rewind(f) FILE *f; { }
		/*VARARGS1 SCANFLIKE1*/
int		scanf(s) char *s; { return (0); }
void		setbuf(f, b) FILE *f; char *b; { }
int		setjmp(e) jmp_buf e; { return (0); }
char*		setlocale(category, locale) char *locale; {return(locale);}
int		setvbuf(f, b, t, s) FILE *f; char *b; { return (t); }
void		siglongjmp(e, v) sigjmp_buf e; {}
void		(*signal(s, a)) () void (*a) (); { return (a); }
int		sigsetjmp(e, s) sigjmp_buf e; { return (0); }
double		sin(x) double x; { return (x); }
double		sinh(x) double x; { return (x); }
		/*VARARGS2 PRINTFLIKE2*/
int		sprintf(p, s) char *p, *s; { return (0); }
double		sqrt(x) double x; { return (x); }
void		srand(s) unsigned s; { }
		/*VARARGS2 SCANFLIKE2*/
int		sscanf(p, s) char *p, *s; { return (0); }
char*		strcat(a, b) char *a, *b; { return (a); }
char*		strchr(a, b) char *a; { return (a); }
int		strcmp(a, b) char *a, *b; { return (0); }
int		strcoll(a, b) char *a, *b; { return (0); }
char*		strcpy(a, b) char *a, *b; { return (a); }
size_t		strcspn(a, b) char *a, *b; { return ((size_t) 0); }
char*		strerror(err)	{ static char *s; return (s); }
size_t		strftime(s, m, f, t) char *s, *f; size_t m; struct tm *t; { return(m); }
size_t		strlen(s) char *s; { return (0); }
char*		strncat(a, b, n) char *a, *b; size_t n; { return (a); }
int		strncmp(a, b, n) char *a, *b; size_t n; { return (0); }
char*		strncpy(a, b, n) char *a, *b; size_t n; { return (a); }
char*		strpbrk(a, b) char *a, *b; { return (a); }
char*		strrchr(a, b) char *a; { return (a); }
size_t		strspn(a, b) char *a, *b; { return (0); }
char*		strstr(a, b) char *a, *b; { return (a); }
double		strtod(s, t) char *s, **t; { return (0.0); }
char*		strtok(a, b) char *a, *b; { return (a); }
long		strtol(s, t, b) char *s, **t; { return (0L); }
int		strxfrm(a, b, n) char *a, *b; size_t n; { return (0); }
int		system(s) char *s; { return (0); }
double		tan(x) double x; { return (x); }
double		tanh(x) double x; { return (x); }
time_t		time(t) time_t *t; { return (*t); }
FILE*		tmpfile() { return (stdin); }
char*		tmpnam(s) char *s; { return (s); }
int		tolower(i) { return (i); }
int		toupper(i) { return (i); }
int		ungetc(c, f) FILE *f; { return (c); }
/*
int		va_arg(ap, x) va_list ap; { return (x); }
void		va_end(ap) va_list ap; { }
void		va_start(ap, param) va_list ap; { }
*/
int		vfprintf(f, s, v) FILE *f; char *s; va_list v; { return (0); }
int		vprintf(s, v) char *s; va_list v; { return (0); }
int		vsprintf(p, s, v) char *p, *s; va_list v; { return (0); }
size_t		wcstombs(s, wc, n) char *s; wchar_t wc; size_t n; { return (n); }
int		wctomb(s, wc) char *s; wchar_t wc; { return (0); }
