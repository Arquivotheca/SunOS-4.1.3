.\" @(#)a64l.3 1.1 92/07/30 SMI; from S5
.TH A64L 3 "6 October 1987"
.SH NAME
a64l, l64a \- convert between long integer and base-64 ASCII string
.SH SYNOPSIS
.nf
.B long a64l(s)
.B char \(**s;
.LP
.B char \(**l64a(l)
.B long l;
.fi
.SH DESCRIPTION
.IX  "a64l()"  ""  "\fLa64l()\fP \(em convert long integer to base-64 ASCII"
.IX  "l64a()"  ""  "\fLl64a()\fP \(em convert base-64 ASCII to long integer"
.IX  "convert long integer to base-64 ASCII \(em \fLl64a\fP"
.IX  "convert base-64 ASCII to long integer \(em \fLl64a\fP"
These functions are used to maintain numbers stored in
.I base-64
.SM ASCII
characters.
This is a notation by which
long integers can be represented by up to six characters; each character
represents a ``digit'' in a radix-64 notation.
.LP
The characters used to represent ``digits''
are
.RB ` . '
for 0,
.RB ` / '
for 1,
.B 0
through
.B 9
for 2\-11,
.B A
through
.B Z
for 12\-37, and
.B a
through
.B z
for 38\-63.
.LP
.B a64l(\|)
takes a pointer to a
null-terminated
base-64 representation and returns
a corresponding
.B long
value.  If the string pointed to by
.I s
contains more than six characters,
.B a64l(\|)
will use the first six.
.LP
.B l64a(\|)
takes a
.B long
argument and returns a pointer to the corresponding base-64 representation.
If the argument is 0,
.B l64a(\|)
returns a pointer to a
null
string.
.SH BUGS
The value returned by
.B l64a(\|)
is a pointer into a static buffer, the contents of which are
overwritten by each call.
