.\" @(#)kvm_open.3k 1.1 92/07/30 SMI;
.TH KVM_OPEN 3K "21 January 1990"
.SH NAME
kvm_open, kvm_close \- specify a kernel to examine
.SH SYNOPSIS
.nf
.ft B
#include <kvm.h>
#include <fcntl.h>
.ft
.fi
.LP
.nf
.ft B
kvm_t *kvm_open(namelist, corefile, swapfile, flag, errstr)
char *namelist, *corefile, *swapfile;
int flag;
char *errstr;
.ft
.fi
.LP
.nf
.ft B
int kvm_close(kd)
kvm_t *kd;
.ft R
.fi
.SH DESCRIPTION
.IX "kvm_open()" "" "\fLkvm_open()\fP function"
.IX "kvm_close()" "" "\fLkvm_close()\fP function"
.LP
.B kvm_open(\|)
initializes a set of file descriptors to be used in subsequent
calls to kernel
.SM VM
routines.  It returns a
pointer to a kernel identifier that must be used as the
.I kd
argument in subsequent kernel
.SM VM
function calls.
.LP
The
.I namelist
argument specifies an unstripped executable file whose symbol table
will be used to locate various offsets in
.IR corefile .
If
.I namelist
is
.SM NULL\s0,
the symbol table of the currently running kernel
is used to determine offsets in the core image.  In this case,
it is up to the implementation to select an appropriate way to
resolve symbolic references (for instance, using
.B /vmunix
as a default
.I namelist
file).
.LP
.I corefile
specifies a file that contains an image of physical memory,
for instance, a kernel crash dump file (see
.BR savecore (8))
or the special device
.BR /dev/mem .
If
.I corefile
is
.SM NULL\s0,
the currently running kernel is accessed (using
.BR /dev/mem
and
.BR /dev/kmem ).
.LP
.I swapfile
specifies a file that represents the swap device.
If both
.I corefile
and
.I swapfile
are
.SM NULL\s0,
the swap device of the ``currently running kernel''
is accessed.  Otherwise, if
.I swapfile
is
.SM NULL\s0,
.B kvm_open(\|)
may succeed but subsequent
.BR kvm_getu (3K)
function calls may fail if the desired information is swapped out.
.LP
.I flag
is used to specify read or write access for
.I corefile
and may have one of the following values:
.RS
.TP 20
.SB O_RDONLY
open for reading
.TP
.SB O_RDWR
open for reading and writing
.RE
.LP
.I errstr
is used to control error reporting.  If it is a
.SM NULL
pointer, no error messages will be printed.
If it is non-\s-1NULL\s0, it is assumed to be the
address of a string that will be
used to prefix error messages generated by
.BR kvm_open .
Errors are printed to
.BR stderr .
A useful value to supply for
.I errstr
would be
.BR argv [0].
This has the effect of printing the process name in front of any error
messages.
.LP
.B kvm_close(\|)
closes all file descriptors that were associated with
.IR kd .
These files are also closed on
.BR exit (2v)
and
.BR execve (2V).
.B kvm_close(\|)
also resets the
.B proc
pointer associated with
.BR kvm_nextproc (3K)
and flushes any cached kernel data.
.SH RETURN VALUES
.LP
.B kmv_open(\|)
returns a
non-\s-1NULL\s0
value suitable for use with subsequent
kernel
.SM VM
function calls.
On failure,
it returns
.SM NULL
and no files are opened.
.LP
.B kvm_close(\|)
returns:
.TP
0
on success.
.TP
\-1
on failure.
.br
.ne 6
.SH FILES
.PD 0
.TP 20
.B /vmunix
.TP
.B /dev/kmem
.TP
.B /dev/mem
.TP
.B /dev/drum
.PD
.SH "SEE ALSO"
.BR execve (2V),
.BR exit (2v),
.BR kvm_getu (3K),
.BR kvm_nextproc (3K),
.BR kvm_nlist (3K),
.BR kvm_read (3K),
.BR savecore (8)
