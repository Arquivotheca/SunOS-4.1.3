.\" @(#)puts.3s 1.1 92/07/30 SMI; from UCB 4.3 BSD and S5
.TH PUTS 3S  "6 October 1987"
.SH NAME
puts, fputs \- put a string on a stream
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.LP
.B puts(s)
.B char *s;
.LP
.B fputs(s, stream)
.B char *s;
.B \s-1FILE\s0 *stream;
.fi
.IX  "puts()"  ""  "\fLputs()\fP \(em put string to stdout"
.IX  "put string to stdout"  ""  "put string to stdout \(em \fLputs()\fP"
.IX  "put string to stream"  ""  "put string to stream \(em \fLfputs()\fP"
.IX  stream  "put string to stdout"  stream  "put string to \(em \fLputs()\fP"
.IX  stream  "put string to stream"  stream  "put string to \(em \fLfputs()\fP"
.IX  "fputs() function"  ""  "\fLfputs()\fP \(em put string to stream"
.IX  "string operations"  "put to stdout"  ""  "put to stdout \(em \fLputs()\fP"
.IX  "string operations"  "put to stream"  ""  "put to stream \(em \fLfputs()\fP"
.SH DESCRIPTION
.LP
.B puts(\|)
writes the
null-terminated
string pointed to by
.IR s ,
followed by a
.SM NEWLINE
character, to the standard output stream
.BR stdout .
.LP
.B fputs(\|)
writes the
null-terminated
string pointed to by
.I s
to the named output
stream.
.LP
Neither function writes the terminal
null character.
.SH DIAGNOSTICS
Both routines return
.SM EOF
on error. This will happen if
the routines try to write on a file that has not been opened for writing.
.SH NOTES
.B puts(\|)
appends a
.SM NEWLINE
while
.B fputs(\|)
does not.
.SH "SEE ALSO"
.BR ferror (3V),
.BR fopen (3V),
.BR fread (3S),
.BR printf (3V),
.BR putc (3S)
