.\" @(#)t_optmgmt.3n 1.1 92/07/30 SMI; from S5r3
.TH T_OPTMGMT 3N "21 January 1990"
.SH NAME
t_optmgmt \- manage options for a transport endpoint
.SH SYNOPSIS
.LP
.nf
.ft B
#include <tiuser.h>
.ft
.fi
.LP
.nf
.ft B
int t_optmgmt(fd, req, ret)
int fd;
struct t_optmgmt *req;
struct t_optmgmt *ret;
.ft R
.fi
.SH DESCRIPTION
.IX "t_optmgmt()" "" "\fLt_optmgmt()\fR \(em manage options for transport endpoint"
.IX transport "manage options for transport endpoint"
.LP
.B t_optmgmt(\|)
enables a transport user to retrieve, verify, or
negotiate protocol options with the transport provider.
.I fd
identifies a bound transport endpoint.
.LP
The
.I req
and
.I ret
arguments point to a
.B t_optmgmt(\|)
structure containing the following
members:
.DS
.ft B
.nf
	struct netbuf opt;
	long	flags;
.fi
.ft R
.DE
.LP
The
.I opt
field identifies protocol options and the
.I flags
field is used to specify the action to take with those options.
.LP
The options are represented by a
.I netbuff
structure in a manner similar to the address in
.BR t_bind (3N) .
The
.IR maxlen ,
.IR len ,
and
.I buf
members of the
.I netbuf
structure are described in
.BR t_accept (3N).
.I req
is used to request a specific action of the provider and to
send options to the provider.
.I len
specifies the number of bytes in the options,
.I buf
points to the options buffer, and
.I maxlen
has no meaning for the
.I req
argument.
The transport provider may return options and flag values
to the user through
.IR ret .
For
.IR ret ,
.I maxlen
specifies the maximum size of the options buffer and
.I buf
points to the buffer where the options are to be placed.
On return,
.I len
specifies the number of bytes of options returned.
.I maxlen
has no meaning for the
.I req
argument, but must be set in the
.I ret
argument
to specify the maximum number of bytes the options buffer
can hold.
The actual structure and content of the options is imposed by the
transport provider.
.LP
The
.B flags
field of
.I req
can specify one of the following actions:
.LP
.TP 20
.SB T_NEGOTIATE
Enables the user to negotiate the values of the options
specified in
.I req
with the transport provider.
The provider will evaluate the requested options and negotiate the
values, returning the negotiated values through
.IR ret .
.TP
.SB T_CHECK
Enables the user to verify whether the options
specified in
.I req
are supported by the transport provider.
On return, the
.B flags
field of
.I ret
will have either
.SB T_SUCCESS
or
.SB T_FAILURE
set to indicate to the user whether the options are supported.
These flags are only meaningful for the
.SB T_CHECK
request.
.TP
.SB T_DEFAULT
Enables a user to retrieve the default options
supported by the transport provider into the
.I opt
field of
.IR ret .
In
.IR req ,
the
.I len
field of
.I opt
must be zero and the
.I buf
field may be
.SM NULL\s0.
.PD
.LP
If issued as part of the connectionless-mode service,
.B t_optmgmt(\|)
may block due to flow control constraints.
.B t_optmgmt(\|)
will not complete until the transport provider
has processed all previously sent data units.
.SH RETURN VALUES
.LP
.B t_optmgmt(\|)
returns:
.TP
0
on success.
.TP
\-1
on failure and sets
.B t_errno
to indicate the error.
.br
.ne 5
.SH ERRORS
.TP 20
.SM TACCES
The user does not have permission to negotiate the specified options.
.br
.ne 5
.TP
.SM TBADF
The specified file descriptor does not refer to a transport endpoint.
.TP
.SM TBADFLAG
An invalid flag was specified.
.TP
.SM TBADOPT
The specified protocol options were in an incorrect format or
contained illegal information.
.br
.ne 5
.TP
.SM TBUFOVFLW
The number of bytes allowed for an incoming argument is not
sufficient to store the value of that argument.
The information to be returned in
.I ret
will be discarded.
.TP
.SM TOUTSTATE
The function was issued in the wrong sequence.
.TP
.SM TSYSERR
The function failed due to a system error and set 
.B errno 
to indicate the error.
.SH "SEE ALSO"
.BR intro (3),
.BR t_getinfo (3N),
.BR t_open (3N)
.LP
.TX NETP
