.\" @(#)inet.3n 1.1 92/07/30 SMI; from UCB 4.2
.TH INET 3N "18 February 1988"
.SH NAME
inet inet_addr, inet_network, inet_makeaddr, inet_lnaof, inet_netof, inet_ntoa \- Internet address manipulation
.SH SYNOPSIS
.ft B
.nf
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
.LP
.ft B
unsigned long
inet_addr(cp)
char *cp;
.LP
.ft B
inet_network(cp)
char *cp;
.LP
.ft B
struct in_addr
inet_makeaddr(net, lna)
int net, lna;
.LP
.ft B
inet_lnaof(in)
struct in_addr in;
.LP
.ft B
inet_netof(in)
struct in_addr in;
.LP
.ft B
char *
inet_ntoa(in)
struct in_addr in;
.ft R
.fi
.IX  "Internet address manipulation functions"
.IX  "manipulate Internet addresses"
.IX  "inet_addr()"  ""  "\fLinet_addr()\fP \(em Internet address manipulation"
.IX  "inet_network()"  ""  "\fLinet_network()\fP \(em Internet address manipulation"
.IX  "inet_makeaddr()"  ""  "\fLinet_makeaddr()\fP \(em Internet address manipulation"
.IX  "inet_lnaof()"  ""  "\fLinet_lnaof()\fP \(em Internet address manipulation"
.IX  "inet_netof()"  ""  "\fLinet_netof()\fP \(em Internet address manipulation"
.IX  "inet_ntoa()"  ""  "\fLinet_ntoa()\fP \(em Internet address manipulation"
.SH DESCRIPTION
.LP
The routines
.B inet_addr(\|)
and
.B inet_network(\|)
each interpret character strings representing numbers expressed in the
Internet standard
.RB ` . '
notation, returning numbers suitable for
use as Internet addresses and Internet network numbers, respectively.
The routine
.B inet_makeaddr(\|)
takes an Internet network number and a local network address and
constructs an Internet address from it.  The routines
.B inet_netof(\|)
and
.B inet_lnaof(\|)
break apart Internet host addresses, returning the network number and
local network address part, respectively.
.LP
The routine
.B inet_ntoa(\|)
returns a pointer to a string in the base 256 notation ``d.d.d.d''
described below.
.LP
All Internet address are returned in network order (bytes ordered from
left to right).  All network numbers and local address parts are
returned as machine format integer values.
.SH "INTERNET ADDRESSES"
Values specified using the
.RB ` . '
notation take one of the following forms:
.IP
.nf
.ft B
a.b.c.d
a.b.c
a.b
a
.ft R
.fi
.LP
When four parts are specified, each is interpreted as a byte of data
and assigned, from left to right, to the four bytes of an Internet
address.  Note: when an Internet address is viewed as a 32-bit
integer quantity on
.SM Sun386i 
systems,
the bytes referred to above appear as
.BR d.c.b.a .
That is,
.SM Sun386i
bytes are ordered from right to left.
.LP
When a three part address is specified, the last part is interpreted as
a 16-bit quantity and placed in the right most two bytes of the network
address.  This makes the three part address format convenient for
specifying Class B network addresses as \*(lq128.net.host\*(rq.
.LP
When a two part address is supplied, the last part is interpreted as a
24-bit quantity and placed in the right most three bytes of the network
address.  This makes the two part address format convenient for
specifying Class A network addresses as \*(lqnet.host\*(rq.
.LP
When only one part is given, the value is stored directly in the
network address without any byte rearrangement.
.LP
All numbers supplied as ``parts'' in a
.RB ` . '
notation may
be decimal, octal, or hexadecimal, as specified in the C language (that
is, a leading 0x or
.SM 0X
implies hexadecimal; otherwise, a leading 0
implies octal; otherwise, the number is interpreted as decimal).
.SH "SEE ALSO"
.BR gethostent (3N),
.BR getnetent (3N),
.BR hosts (5),
.BR networks (5),
.SH DIAGNOSTICS
The value \-1 is returned by
.B inet_addr(\|)
and
.B inet_network(\|)
for malformed requests.
.SH BUGS
The problem of host byte ordering versus network byte ordering is
confusing.  A simple way to specify Class C network addresses in a manner
similar to that for Class B and Class A is needed.
.LP
The return value from
.B inet_ntoa(\|)
points to static information which is overwritten in each call.
