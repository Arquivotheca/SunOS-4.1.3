.\" @(#)getpass.3v 1.1 92/07/30 SMI; from UCB 4.3 BSD and S5
.TH GETPASS 3V "6 October 1989"
.SH NAME
getpass \- read a password
.SH SYNOPSIS
.nf
.B char *getpass(prompt)
.B char *prompt;
.fi
.IX  "getpass()"  ""  "\fLgetpass()\fP \(em read password"
.IX  "read password"  ""  "read password \(em \fLgetpass()\fP"
.IX  password  read  ""  "read \(em \fLgetpass()\fP"
.SH DESCRIPTION
.B getpass(\|)
reads up to a
.SM NEWLINE
or
.SM EOF
from the file
.BR /dev/tty ,
or if that cannot be opened, from the standard input,
after prompting with the
null-terminated
string
.I prompt
and disabling echoing.
A pointer is returned to a
null-terminated
string of at most 8 characters.
An interrupt will terminate input and send
an interrupt signal to the calling program before returning.
.SH SYSTEM V DESCRIPTION
If
.B /dev/tty
cannot be opened,
.B getpass(\|)
returns a
.SM NULL
pointer.
It does not read the standard input.
.SH FILES
.PD 0
.TP 20
.B /dev/tty
.PD
.SH "SEE ALSO"
.BR crypt (3)
.SH NOTES
The above routine uses
.BR <stdio.h> ,
which increases the size of programs
not otherwise using standard I/O, more
than might be expected.
.SH BUGS
The return value points to static data
whose content is overwritten by each call.
