.\" @(#)ualarm.3 1.1 92/07/30 SMI; from UCB 6.4 5/13/86
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.TH UALARM 3  "6 October 1987"
.SH NAME
ualarm \- schedule signal after interval in microseconds
.SH SYNOPSIS
.nf
.B unsigned ualarm(value, interval)
.B unsigned value;
.B unsigned interval;
.fi
.SH DESCRIPTION
.IX  "ualarm()"  ""  "\fLualarm()\fP \(em schedule signal in microsecond precision"
.IX  "schedule signal"  ""  "schedule signal in microsecond precision\(em \fLualarm()\fP"
.IX  signal  schedule  signal  "schedule in microsecond precision \(em \fLualarm()\fP"
.LP
.B
This is a simplified interface to
.B setitimer(\|)
(see
.BR getitimer (2)).
.LP
.B ualarm(\|)
sends signal
.BR \s-1SIGALRM\s0 ,
see
.BR signal (3V),
to the invoking process
in a number of microseconds given by the
.I value
argument.  Unless caught or ignored,
the signal terminates the process.
.LP
If the
.I interval
argument is non-zero, the
.SB SIGALRM
signal will be sent to the process every
.I interval
microseconds after the timer expires (for instance, after
.I value
microseconds have passed).
.LP
Because of scheduling delays,
resumption of execution of when the signal is
caught may be delayed an arbitrary amount.
The longest specifiable delay time is
2147483647 microseconds.
.LP
The return value is the amount of time previously remaining in the alarm clock.
.SH "SEE ALSO"
.BR getitimer (2),
.BR sigpause (2V),
.BR sigvec (2),
.BR alarm (3V),
.BR signal (3V),
.BR sleep (3V),
.BR usleep (3)
