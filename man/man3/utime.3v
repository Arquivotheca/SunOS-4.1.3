.\" @(#)utime.3v 1.1 92/07/30 SMI; from UCB 4.2
.TH UTIME 3V "21 January 1990"
.SH NAME
utime \- set file times
.SH SYNOPSIS
.LP
.nf
.ft B
#include <utime.h>
.ft
.fi
.LP
.nf
.ft B
int utime(path, times)
char *path;
struct utimbuf *times;
.ft
.fi
.IX  utime() ""  "\fLutime()\fP \(em set file times"
.IX  "file system"  utime()  ""  "\fLutime()\fP \(em set file times"
.IX  "change" "file access times \(em \fLutime()\fP"
.IX  "access times of file, change" "utime" "" "\fLutime()\fP"
.SH DESCRIPTION
.LP
.B utime(\|)
sets the access and modification times of the file named by
.IR path .
.LP
If
.I times
is
.SM NULL\s0,
the access and modification times are set to the
current time.
The effective user \s-1ID\s0 (\s-1UID\s0) of the calling process
must match the owner of
the file or the process must have write permission for the file to use
.B utime(\|)
in this manner.
.LP
If
.I times
is not
.SM NULL\s0,
it is assumed to point to a
.B utimbuf
structure, defined in
.B <utime.h>
as:
.LP
.RS
.nf
.ft B
struct  utimbuf {
        time_t  actime;	/* set the access time */
        time_t  modtime;	/* set the modification time */
};
.ft
.fi
.RE
.LP
The access time is set to the value of the first member,
and the modification time is set to the value of the second member.
The times contained in this structure
are measured in seconds since 00:00:00
.SM GMT
Jan 1, 1970.
Only the owner of the file or the super-user may use
.B utime(\|)
in this manner.
.LP
Upon successful completion,
.B utime(\|)
marks for update the
.I st_ctime
field of the file.
.SH RETURN VALUES
.LP
.B utime(\|)
returns:
.TP
0
on success.
.TP
\-1
on failure and sets
.B errno
to indicate the error.
.SH ERRORS
.TP 20
.SM EACCES
Search permission is denied for a component of the path prefix of
.IR path .
.TP
.SM EACCES
The effective user
.SM ID
is not super-user and not the owner of the file, write permission
is denied for the file, and
.I times
is
.SM NULL\s0.
.TP
.SM EFAULT
.I path
or
.I times
points outside the process's allocated address space.
.TP
.SM EIO
An I/O error occurred while reading from or writing to the file system.
.TP
.SM ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SM ENAMETOOLONG
The length of
.I path
exceeds
.SM {PATH_MAX}\s0.
.IP
A pathname component is longer than
.SM {NAME_MAX}
while
.SM {_POSIX_NO_TRUNC}
is in effect
(see
.BR pathconf (2V)).
.TP
.SM ENOENT
The file referred to by
.I path
does not exist.
.TP
.SM ENOTDIR
A component of the path prefix of
.I path
is not a directory.
.TP
.SM EPERM
The effective user
.SM ID
of the process is not super-user and not the owner of the
file, and
.I times
is not
.SM NULL\s0.
.TP
.SM EROFS
The file system containing the file is mounted read-only.
.SH SYSTEM V ERRORS
.LP
In addition to the above, the following may also occur:
.TP 20
.SM ENOENT
.I path
points to an empty string.
.SH SEE ALSO
.BR pathconf (2V),
.BR stat (2V),
.BR utimes (2)
