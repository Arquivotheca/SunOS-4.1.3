.\" @(#)bessel.3m 1.1 92/07/30 SMI; from UCB 4.2 BSD
.TH BESSEL 3M  "6 October 1987"
.SH NAME
j0, j1, jn, y0, y1, yn \- Bessel functions
.SH SYNOPSIS
.nf
.B #include <math.h>
.LP
.B double j0(x)
.B double x;
.LP
.B double j1(x)
.B double x;
.LP
.B double jn(n, x)
.B double x;
.B int n;
.LP
.B double y0(x)
.B double x;
.LP
.B double y1(x)
.B double x;
.LP
.B double yn(n, x)
.B double x;
.B int n;
.fi
.IX  "j0()"  ""  "\fLj0()\fP  \(em Bessel function"
.IX  "mathematical functions"  j0()  ""  \fLj0()\fP
.IX  "Bessel functions"  j0()  ""  \fLj0()\fP
.IX  "j1()"  ""  "\fLj1()\fP  \(em Bessel function"
.IX  "mathematical functions"  j1()  ""  \fLj1()\fP
.IX  "Bessel functions"  j1()  ""  \fLj1()\fP
.IX  "jn()"  ""  "\fLjn()\fP  \(em Bessel function"
.IX  "mathematical functions"  jn()  ""  \fLjn()\fP
.IX  "Bessel functions"  jn()  ""  \fLjn()\fP
.IX  "y0()"  ""  "\fLy0()\fP  \(em Bessel function"
.IX  "mathematical functions"  y0()  ""  \fLy0()\fP
.IX  "Bessel functions"  y0()  ""  \fLy0()\fP
.IX  "y1()"  ""  "\fLy1()\fP  \(em Bessel function"
.IX  "mathematical functions"  y1()  ""  \fLy1()\fP
.IX  "Bessel functions"  y1()  ""  \fLy1()\fP
.IX  "yn()"  ""  "\fLyn()\fP  \(em Bessel function"
.IX  "mathematical functions"  yn()  ""  \fLyn()\fP
.IX  "Bessel functions"  yn()  ""  \fLyn()\fP
.SH DESCRIPTION
These functions calculate Bessel functions of the first
and second kinds for real arguments and integer orders.
.SH SEE ALSO
.BR exp (3M)
.SH DIAGNOSTICS
The functions
.I y0, y1,
and
.I yn
have logarithmic singularities at the origin, so they
treat zero and negative arguments the way
.I log
does, as described in
.BR exp (3M).
Such arguments are unexceptional for
.I j0, j1,
and
.I jn.
