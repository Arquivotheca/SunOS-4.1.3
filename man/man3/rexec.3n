.\" @(#)rexec.3n 1.1 92/07/30 SMI; from UCB 4.2
.TH REXEC 3N "18 November 1987"
.SH NAME
rexec \- return stream to a remote command
.SH SYNOPSIS
.nf
.B "rem = rexec(ahost, inport, user, passwd, cmd, fd2p);"
.B char **ahost;
.B u_short inport;
.B "char *user, *passwd, *cmd;"
.B int *fd2p;
.fi
.IX  "rexec()"  ""  "\fLrexec()\fP \(em return stream to remote command"
.IX  stream  "return to remote command \(em \fLrexec()\fR"
.IX  "return stream to remote command \(em \fLrexec()\fR"
.IX  command  "return stream to remote \(em \fLrexec()\fR"
.IX  "remote command, return stream to" "rexec" "" "\fLrexec()\fR"
.SH DESCRIPTION
.LP
.B rexec(\|)
looks up the host
.I *ahost
using
.B gethostbyname(\|) 
(see
.BR gethostent (3N)),
returning \-1 if the host does not exist.
Otherwise
.I *ahost
is set to the standard name of the host.
If a username and password are both specified, then these
are used to authenticate to the foreign host; otherwise
the environment and then the user's
.B .netrc
file in his home directory are searched
for appropriate information.  If all this fails,
the user is prompted for the information.
.LP
The port
.B inport
specifies which well-known
.SM DARPA
Internet port to use for the connection; it will
normally be the value returned from
the call
`\fBgetservbyname("exec", "tcp")\fP'
(see
.BR getservent (3N)).
The protocol for connection is described in detail in
.BR rexecd (8C).
.LP
If the call succeeds, a socket of type
.SB SOCK_STREAM
is returned to the caller, and given to
the remote command as its standard input and standard output.
If
.I fd2p
is non-zero, then a auxiliary channel to a control
process will be setup, and a descriptor
for it will be placed in
.IR *fd2p .
The control process will return diagnostic
output from the command (unit 2) on this channel,
and will also accept bytes on this channel as
signal numbers, to be forwarded to the process
group of the command.  If
.I fd2p
is 0, then the standard error
(unit 2 of the remote
command) will be made the same as its standard output
and no provision is made for sending arbitrary
signals to the remote process, although you may be
able to get its attention by using out-of-band data.
.SH SEE ALSO
.BR gethostent (3N),
.BR getservent (3N),
.BR rcmd (3N),
.BR rexecd (8C)
.SH BUGS
.LP
There is no way to specify options to the
.B socket(\|)
call that
.B rexec(\|)
makes.
