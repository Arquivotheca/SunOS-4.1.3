.\" @(#)inet.4f 1.1 92/07/30 SMI; from UCB 4.1
.TH INET 4F "18 February 1988"
.SH NAME
inet \- Internet protocol family
.SH SYNOPSIS
.nf
.B options \s-1INET\s0
.LP
.B #include <sys/types.h>
.B #include <netinet/in.h>
.fi
.SH DESCRIPTION
.IX  "inet device"  ""  "\fLinet\fP \(em Internet protocol family"  ""  PAGE START
.IX  Internet  "protocol family inet"  ""  "protocol family \(em \fLinet\fP"  PAGE START
.LP
The Internet protocol family implements a collection of protocols
which are centered around the
.I Internet Protocol
(\s-1IP\s0)
and which share a common address format.
The Internet family provides protocol support for the
.BR \s-1SOCK_STREAM\s0 ,
.BR \s-1SOCK_DGRAM\s0 ,
and
.SB SOCK_RAW
socket types.
.SH PROTOCOLS
The Internet protocol family is comprised of
the Internet Protocol (\s-1IP\s0),
the Address Resolution Protocol (\s-1ARP\s0),
the Internet Control Message Protocol (\s-1ICMP\s0),
the Transmission Control Protocol (\s-1TCP\s0),
and the User Datagram Protocol (\s-1UDP\s0).
.LP
.SM TCP
is used to support the
.SB SOCK_STREAM
abstraction while
.SM UDP
is used to support the
.SB SOCK_DGRAM
abstraction; see
.BR tcp (4P)
and
.BR udp (4P).
A raw interface to
.SM IP
is available by creating an Internet socket of type
.BR \s-1SOCK_RAW\s0;
see
.BR ip (4P).
.SM ICMP
is used by the kernel
to handle and report errors in protocol processing.
It is also accessible to user programs; see
.BR icmp (4P).
.SM ARP
is used to translate 32-bit
.SM IP
addresses into 48-bit Ethernet addresses; see
.BR arp (4P).
.LP
The 32-bit
.SM IP
address is divided into network number and host number parts.
It is frequency-encoded; the most-significant bit is zero
in Class A addresses, in which the high-order 8 bits are the network
number.
Class B addresses have their high order two bits set to 10 and
use the high-order 16 bits as the network number field.
Class C addresses have a 24-bit network number part of which
the high order three bits are 110.
Sites with a cluster of local networks
may chose to use a single network number for the cluster;
this is done by using subnet addressing.
The local (host) portion of the address is further subdivided
into subnet number and host number parts.
Within a subnet, each subnet appears to be an individual network;
externally, the entire cluster appears to be a single, uniform
network requiring only a single routing entry.
Subnet addressing is enabled and examined by the following
.BR ioctl (2)
commands on a datagram socket in the Internet domain;
they have the same form as the
.SB SIOCIFADDR
command (see
.BR intro (4)).
.LP
.TP 20
.SB SIOCSIFNETMASK
Set interface network mask.
The network mask defines the network part of the address;
if it contains more of the address than the address type would indicate,
then subnets are in use.
.TP
.SB SIOCGIFNETMASK
Get interface network mask.
.SH ADDRESSING
.SM IP
addresses are four byte quantities, stored in network byte order
.\" Sun386i begin
(on
Sun386i
systems
these are word and byte reversed).
.\" Sun386i end
.LP
Sockets in the Internet protocol family use the following
addressing structure:
.RS
.nf
.ft B
struct sockaddr_in {
	short	sin_family;
	u_short	sin_port;
	struct	in_addr sin_addr;
	char	sin_zero[8];
};
.ft R
.fi
.RE
.LP
Library routines are provided to manipulate structures of this form;
see
.BR intro (3).
.LP
The
.B sin_addr
field of the
.B sockaddr_in
structure specifies a local or remote
.SM IP
address.  Each network interface has its own unique
.SM IP
address.  The special value
.SB INADDR_ANY
may be used in this field to effect \*(lqwildcard\*(rq matching.
Given in a
.BR bind (2)
call, this value leaves the local
.SM IP
address of the socket unspecified,
so that the socket will receive connections or messages directed
at any of the valid
.SM IP
addresses of the system.
This can prove useful when a process neither knows nor cares
what the local
.SM IP
address is or when a process wishes to receive
requests using all of its network interfaces.
The
.B sockaddr_in
structure given in the
.BR bind (2)
call must specify an
.B in_addr
value of either
.SB IPADDR_ANY
or one of the system's valid
.SM IP
addresses.
Requests to bind any other address will elicit the error 
.SM EADDRNOTAVAIL\s0.
When a
.BR connect (2)
call is made for a socket that has a wildcard local address,
the system sets the
.B sin_addr
field of the socket to the
.SM IP
address of the network interface that the packets for that
connection are routed via.
.LP
The
.B sin_port
field of the
.B sockaddr_in
structure specifies
a port number used by
.SM TCP
or
.SM UDP\s0.
The local port address specified in a
.BR bind (2)
call is restricted to be greater than
.SB IPPORT_RESERVED
(defined in
.BR <netinet/in.h> )
unless the creating process is running
as the super-user, providing a space of protected port numbers.
In addition, the local port address must not be in use by any
socket of same address family and type.
Requests to bind sockets to port numbers being used by other sockets
return the error
.SM EADDRINUSE\s0.
If the local port address is specified as 0, then the system picks
a unique port address greater than
.BR \s-1IPPORT_RESERVED\s0 .
A unique local port address is also picked when a socket
which is not bound is used in a
.BR connect (2)
or
.BR send (2)
call.
This allows programs which do not care which local port number
is used to set up
.SM TCP
connections by simply calling
.BR socket (2)
and then
.BR connect (2),
and to send
.SM UDP
datagrams with a
.BR socket (2)
call followed by a
.BR send (2)
call.
.LP
Although this implementation restricts sockets to unique local
port numbers,
.SM TCP
allows multiple simultaneous connections involving the
same local port number so long as the remote
.SM IP
addresses or
port numbers are different for each connection.
Programs may explicitly override the socket restriction
by setting the
.SB SO_REUSEADDR
socket option with
.B setsockopt
(see
.BR getsockopt (2)).
.SH SEE ALSO
.BR bind (2),
.BR connect (2),
.BR getsockopt (2),
.BR ioctl (2),
.BR send (2),
.BR socket (2),
.BR intro (3),
.BR byteorder (3N),
.BR gethostent (3N),
.BR getnetent (3N),
.BR getprotoent (3N),
.BR getservent (3N),
.BR inet (3N),
.BR intro (4),
.BR arp (4P),
.BR icmp (4P),
.BR ip (4P)
.BR tcp (4P),
.BR udp (4P)
.LP
Network Information Center,
.I "\s-1DDN Protocol Handbook\s0"
(3 vols.),
Network Information Center,
.SM SRI
International, Menlo Park, Calif.,
1985.
.br
.I "A 4.2\s-1BSD\s0 Interprocess Communication Primer"
.SH WARNING
The Internet protocol support is subject to change as
the Internet protocols develop.  Users should not depend
on details of the current implementation, but rather
the services exported.
.IX  "inet device"  ""  "\fLinet\fP \(em Internet protocol family"  ""  PAGE END
.IX  Internet  "protocol family inet"  ""  "protocol family \(em \fLinet\fP"  PAGE END
