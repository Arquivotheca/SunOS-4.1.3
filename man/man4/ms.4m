.\" @(#)ms.4m 1.1 92/07/30 SMI
.TH MS 4M "6 December 1989"
.SH NAME
ms \- Sun mouse STREAMS module
.SH CONFIG
.BI pseudo-device ms n
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <sys/time.h>
#include <sys/stream.h>
#include <sys/stropts.h>
#include <sundev/vuid_event.h>
#include <sundev/msio.h>
ioctl(fd, \s-1I_PUSH\s0, "ms");
.ft R
.fi
.SH DESCRIPTION
.IX  "mouse streams module"  ""  "\fLmouse\fP \(em Sun mouse"  ""
.IX  "Sun mouse streams module"  ""  "Sun mouse streams module \(em \fLmouse\fP"  ""
The
.B ms
.SM STREAMS
module processes byte streams
generated by mice attached to a
.SM CPU
serial or parallel port.  When this module is pushed onto a
stream, it sends a
.SB TCSETSF
ioctl downstream, setting the baud rate
to 1200 baud and the character size
to 8 bits, and enabling the receiver.  All other flag words are
cleared.  It assumes only that the
.BR termios (3V)
functions provided by the
.BR zs (4S)
driver are supported; no other functions need be supported.
.LP
The mouse is expected to generate a stream of bytes
encoding mouse motions and changes in the state of the buttons.
.LP
Each mouse sample in the byte stream consists of three bytes:  the
first byte gives the button state with value
.RI 0x87|~ but ,
where
.I but
is the low three bits giving the mouse buttons, where a 0 (zero) bit
means that a button is pressed, and a 1 (one) bit means a button is not
pressed.  Thus if the left button is down the value of this sample is
0x83, while if the right button is down the byte is 0x86.
.LP
The next two bytes of each sample give the
.I x
and
.I y
deltas of this sample as signed bytes.  The mouse uses a lower-left
coordinate system, so moves to the right on the screen yield positive
.I x
values and moves down the screen yield negative
.I y
values.
.LP
The beginning of a sample is identifiable because the delta's are
constrained to not have values in the range 0x80-0x87.
.LP
A stream with
.B ms
pushed onto it can be used as a device that emits
.I firm_events
as specified by the protocol of a
.IR "Virtual User Input Device" .
It understands
.BR \s-1VUIDSFORMAT\s0,
.BR \s-1VUIDGFORMAT\s0,
.SB VUIDSADDR
and
.SB VUIDGADDR
ioctls (see reference below).
.SH IOCTLS
.B ms
responds to the following
.IR ioctl s,
as defined in
.B <sundev/msio.h>
and
.BR <sundev/vuid_event.h> .
All other
.IR ioctl s
are passed downstream.  As
.B ms
sets the parameters of the serial port when it is opened, no
.BR termios (3V)
.IR ioctl s
should be performed on a stream with
.B ms
on it, as
.B ms
expects the device parameters to remain as it set them.
.LP
The
.SB MSIOGETPARMS
and
.SB MSIOSETPARMS
calls use a structure of type
.BR Ms_parms ,
which is a structure defined in
.BR <sundev/msio.h> :
.LP
.RS
.nf
.ta 1i 1.7i 2.5i
.ft B
typedef struct {
int             jitter_thresh;
int             speed_law;
int             speed_limit;
}               Ms_parms;
.ft R
.fi
.RE
.br
.ne 6
.LP
.I jitter_thresh
is the ``jitter threshold'' of the mouse.  Motions of fewer than
.I jitter_thresh
units along both axes that occur in less than 1/12 second are treated as
``jitter'' and ignored.  Thus, if the mouse moves fewer than
.I jitter_thresh units
and then moves back to its original position in less than 1/12 of a
second, the motion is considered to be ``noise'' and ignored.  If
it moves fewer than
.I jitter_thresh
units and continues to move so that it has not returned to its
original position after 1/12 of a second, the motion is considered to
be real and is reported.
.LP
.I speed_law
indicates whether extremely large motions are to be ignored.  If it
is 1, a ``speed limit'' is applied to mouse motions; motions along
either axis of more than
.I speed_limit
units are discarded.
.LP
Note: these parameters are global; if they are set for any mouse
on a workstation, they apply to any other mice attached to that
workstation as well.
.TP 20
.SB VUIDSFORMAT
.PD 0
.TP
.SB VUIDGFORMAT
.TP
.SB VUIDSADDR
.TP
.SB VUIDGADDR
These are standard
.I Virtual User Input Device
.IR ioctl s.
See
.TX SVSPG
for a description of their operation.
.PD
.TP
.SB MSIOGETPARMS
The argument is a pointer to a
.BR Ms_parms .
The current mouse parameters are stored in that structure.
.TP
.SB MSIOSETPARMS
The argument is a pointer to a
.BR ms_parms .
The current mouse parameters are set from the values in that
structure.
.SH "SEE ALSO
.BR mouse (4S),
.BR termios (3V),
.BR win (4S),
.BR zs (4S)
.LP
.TX SVSPG
