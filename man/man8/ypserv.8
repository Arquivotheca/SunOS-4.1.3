.\" @(#)ypserv.8 1.1 92/07/30 SMI
.TH YPSERV 8 "17 December 1987"
.SH NAME
ypserv, ypbind, ypxfrd \- NIS server and binder processes
.SH SYNOPSIS
.B /usr/etc/ypserv
[
.B \-d
]
.LP
.B /usr/etc/ypbind
.RB [ \-s] 
.RB [ \-ypset \||\| \-ypsetme ]
.LP
.B ypxfrd
[
.B \-x
]
.SH AVAILABILITY
.LP
This program is available with the
.I Networking
software installation option.  Refer to
.TX INSTALL
for information on how to install optional software.
.SH DESCRIPTION
.IX  "ypserv"  ""  "\fLypserv\fP \(em NIS server process"
.IX  "ypbind"  ""  "\fLypbind\fP \(em NIS server process"
.IX  "ypxfrd"  ""  "\fLypxfrd\fP \(em NIS server process"
.LP
The 
Network Information Service
(\s-1NIS\s0)
provides a simple network lookup service
consisting of databases and processes.  The databases are
.BR dbm (3X)
files in a directory tree rooted at
.BR /var/yp .
These files are described in
.BR ypfiles (5).
The processes are
.BR /usr/etc/ypserv ,
the 
.SM NIS
database lookup server, and
.BR /usr/etc/ypbind ,
the
.SM NIS
binder.  The programmatic interface to the
.SM NIS
service
is described in
.BR ypclnt (3N).
Administrative tools are described in
.BR yppush (8),
.BR ypxfr (8),
.BR yppoll (8),
.BR ypwhich (8),
and
.BR ypset (8).
Tools to see the contents of
.SM NIS
maps are described in
.BR ypcat (1),
and
.BR ypmatch (1).
Database generation and maintenance tools are described in
.BR ypinit (8),
.BR ypmake (8),
and
.BR makedbm (8).
.LP
Both
.B ypserv
and
.B ypbind
are daemon processes typically activated at system startup time from
.BR /etc/rc.local .
.B ypserv
runs only on
.SM NIS
server machines with a complete
.SM NIS
database.
.B ypbind
runs on all machines using the
.SM NIS
services, both
.SM NIS
servers and clients.
.LP
.B ypxfrd
transfers entire
.SM NIS
maps in an efficient manner.
For systems that use this daemon, map transfers will be 10
to 100 times faster, depending on the map.
To use this daemon,
.B ypxfrd
should be run on a server running SunOS release 4.1.
.B ypxfr
will attempt to use
.B ypxfrd
first, if that fails, it will print a warning and then use the
older transfer method.
.LP
The
.B ypserv
daemon's primary function is to look up information in its local
database of
.SM NIS
maps.  The operations performed by
.B ypserv
are defined for the implementor by the
.IR "\s-1YP\s0 Protocol Specification" ,
and for the programmer by the header file
.BR rpcsvc/yp_prot.h .
Communication to and from
.B ypserv
is by means of
.SM RPC
calls.  Lookup functions are described in
.BR ypclnt (3N),
and are supplied as C-callable functions in the C library.
There are four lookup functions, all of
which are performed on a specified
map within some
.SM NIS
domain:
.BR match ,
.BR get_first ,
.BR get_next ,
and
.BR get_all .
The
.B match
operation takes a key, and returns the associated value.
The
.B get_first
operation returns the first key-value pair from the map, and
.B get_next
can be used to enumerate the remainder.
.B get_all
ships the entire map to the requester as the response to a single
.SM RPC
request.
.LP
Two other functions supply
information about the map, rather than map entries:
.BR get_order_number ,
and
.BR get_master_name .
In fact, both order number and master name
exist in the map as key-value
pairs, but the server will not return either through the normal lookup
functions.  If you examine the map with
.BR makedbm (8),
however, they will be visible.
Other functions are used within the
.SM NIS
service subsystem itself, and are not of general interest to
.SM NIS
clients.
They include
.BR do_you_serve_this_domain? ,
.BR transfer_map ,
and
.BR reinitialize_internal_state .
.LP
The function of
.B ypbind
is to remember information that lets client processes on a single node
communicate with some
.B ypserv
process.
.B ypbind
must run on every machine which has
.SM NIS
client processes;
.B ypserv
may or may not be running on the same node,
but must be running somewhere
on the network.
.LP
The information
.B ypbind
remembers is called a
.I binding
\(em the association of a domain name with
the internet address of the
.SM NIS
server, and the port on that host at
which the
.B ypserv
process is listening for service requests. This information
is cached in the directory
.B /var/yp/binding
using a filename of 
.BR domainname.version .
.LP
The process of binding is driven
by client requests.  As a request for an unbound domain comes in, the
.B ypbind
process broadcasts on the net trying to find a
.B ypserv
process that serves maps within that domain.  Since the binding is
established by broadcasting, there must be at least one
.B ypserv
process on every net.
If the client is running in C2 secure mode, then 
.B ypbind
will only accept bindings to servers where the
.B ypserv
process is running as root.
Once a domain is bound by a particular
.BR ypbind ,
that same binding is given to every client process on the node.
The
.B ypbind
process on the local node or a remote node may be queried for the
binding of a particular domain by using the
.BR ypwhich (1)
command.
.LP
Bindings and rebindings are handled transparently by the C library
routines. If
.B ypbind
is unable to speak to the
.B ypserv
process it's bound to, it marks the domain as unbound, tells the client
process that the domain is unbound, and tries to bind the domain
once again.  Requests received for an unbound domain will
wait until the domain requested is bound.
In general, a bound domain is marked as unbound when the node
running
.B ypserv
crashes or gets overloaded.  In such a case,
.B ypbind
will to bind any
.SM NIS
server (typically
one that is less-heavily loaded) available on the net.
.LP
.B ypbind
also accepts requests to set its binding for a particular domain.  The
request is usually generated by the
.SM NIS
subsystem itself.
.BR ypset (8)
is a command to access the
.B "set_domain"
facility.  It is for unsnarling messes. Note:
the
.B set_domain
procedure only accepts requests from processes running as root.
.SH OPTIONS
.TP
.B \-d
The
.SM NIS
service should go to the
.SM DNS
(Domain Name Service)
for more host information.
.TP
.B \-s
Secure.
When specified, only ypservers bound to a reserved port are used.
This allows for a slight increase in security in
completely controlled environments,
where there are no computers
operated by untrusted individuals. 
It offers no real increase in security.
.TP
.B \-v
Do not fork when
.B ypxfrd
is called multiple times.
.TP
.B \-ypset
.BR ypset (8)
may be used to change the binding.
This option is very dangerous, and only should be used for debugging
the network from a remote machine.
.TP
.B \-ypsetme
.BR ypset (8)
may be issued from this machine,
security is based on
.SM IP
address checking, which can be defeated
on network where untrusted individuals may inject packets.
This option is not recommended.
.SH "FILES"
.LP
If the file
.B /var/yp/ypserv.log
exists when
.B ypserv
starts up, log information will be written to this file when error
conditions arise.
.LP
The file(s)
.B /var/yp/binding/domainname.version
will be created to speed up the binding process.
These files cache the last
successful binding created for the given domain, when a binding is requested
these files are checked for validity and then used. 
.PD 0
.TP 20
.B /var/yp
.TP
.B /usr/etc/ypbind
.PD
.SH "SEE ALSO"
.BR domainname (1),
.BR ypcat (1),
.BR ypmatch (1),
.BR dbm (3X),
.BR ypclnt (3N),
.BR ypfiles (5)
.BR makedbm (8),
.BR ypmake (8),
.BR ypinit (8),
.BR yppoll (8),
.BR yppush (8),
.BR ypset (8),
.BR ypwhich (8),
.BR ypxfr (8),
.LP
.TX NETP
.br
.TX ADMIN
.SH NOTES
Both 
.B ypbind
and
.B ypserv
support multiple domains.
The 
.B ypserv
process determines the domains it serves by looking for directories of the 
same name in the directory
.BR /var/yp .
It will reply to all broadcasts
requesting yp service for that domain.
Additionally, the 
.B ypbind
process can maintain bindings to several domains and their servers, the 
default domain is however the one specified by the
.BR domainname (1)
command at startup time.
.LP
The Network Information Service
(\s-1NIS\s0)
was formerly known as Sun Yellow Pages
(\s-1YP\s0). 
The functionality of the two remains the same;
only the name has changed.
The name Yellow Pages is a registered trademark in the United Kingdom
of British Telecommunications plc,
and may not be used without permission.
