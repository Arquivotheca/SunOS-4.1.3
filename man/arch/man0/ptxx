.xx "" "gettable \- get NIC format host tables from a host" "." "" gettable(8C)
.xx "" "nohup \- run a command at low priority (sh only)" "." "nice," nice(1)
.xx "" "\- print the SKYFFP board microcode version number" "." "skyversion" skyversion(8)
.xx "" "program file including aliases and paths (csh only)" "." "which \- locate a" which(1)
.xx "" "" "@: arithmetic on shell variables." "" csh(1)
.xx "login, newgrp, read,/" "sh, for, case, if, while, :," "., break, continue, cd, eval, exec, exit, export," "" sh(1)
.xx "" "alloca, malloc_debug, malloc_verify .if t .ti +" "0.5i \- memory allocator." "/valloc, .if n .ti +0.5i" malloc(3)
.xx "+0.5i/" "/calloc, cfree, memalign, valloc, .if n .ti +" "0.5i alloca, malloc_debug, malloc_verify .if t .ti" "" malloc(3)
.xx "" "bwone \- Sun-" "1 black and white frame buffer." "" bwone(4S)
.xx "" "cgone \- Sun-" "1 color graphics interface." "" cgone(4S)
.xx "" "vp \- Ikon" "10071-5 Versatec parallel printer interface." "" vp(4S)
.xx "" "tm \- tapemaster" "1/2 inch tape drive." "" tm(4S)
.xx "" "ar \- Archive" "1/4 inch Streaming Tape Drive." "" ar(4S)
.xx "" "mti \- Systech MTI-800/" "1600 multi-terminal interface." "" mti(4S)
.xx "" "ie \- Sun-" "2 10 Mb/s Ethernet interface." "" ie(4S)
.xx "" "bwtwo \- Sun-" "2 black and white frame buffer." "" bwtwo(4S)
.xx "" "cgtwo \- Sun-" "2 color graphics interface." "" cgtwo(4S)
.xx "" "tm \- tapemaster 1/" "2 inch tape drive." "" tm(4S)
.xx "" "rastrepl \- magnify a raster image by" "2 times." "" rastrepl(1)
.xx "" "ip \- Disk driver for Interphase" "2180 SMD Disk Controller." "" ip(4S)
.xx "printer interface." "vpc \- Systech VPC-" "2200 Versatec printer/plotter and Centronics" "" vpc(4S)
.xx "" "ec \-" "3Com 10 Mb/s Ethernet interface." "" ec(4S)
.xx "" "ar \- Archive 1/" "4 inch Streaming Tape Drive." "" ar(4S)
.xx "" "st \- Driver for Sysgen SC" "4000 (Archive) Tape Controller." "" st(4S)
.xx "" "xt \- Driver for Xylogics" "472 Tape Controllers." "" xt(4S)
.xx "" "vp \- Ikon 10071-" "5 Versatec parallel printer interface." "" vp(4S)
.xx "" "sd \- Disk driver for Adaptec ST-" "506 Disk Controllers." "" sd(4S)
.xx "" "mti \- Systech MTI-" "800/1600 multi-terminal interface." "" mti(4S)
.xx "" "zs \- zilog" "8530 SCC serial comunications driver." "" zs(4S)
.xx "" "" "abort \- generate a fault." "" abort(3)
.xx "" "" "abort \- terminate abruptly with memory image." "" abort(3F)
.xx "" "dkinfo \- report information" "about a disk's geometry and partitioning." "" dkinfo(8)
.xx "" "index, rindex, lnblnk, len \- tell" "about character objects." "" index(3F)
.xx "" "getrusage \- get information" "about resource utilization." "" getrusage(2)
.xx "" "vtimes \- get information" "about resource utilization." "" vtimes(3C)
.xx "" "fstab \- static information" "about the filesystems." "" fstab(5)
.xx "" "abort \- terminate" "abruptly with memory image." "" abort(3F)
.xx "" "" "abs \- integer absolute value." "" abs(3)
.xx "" "abs \- integer" "absolute value." "" abs(3)
.xx "" "fabs, floor, ceil \-" "absolute value, floor, ceiling functions." "" floor(3M)
.xx "" "" "ac \- login accounting." "" ac(8)
.xx "" "" "accept \- accept a connection on a socket." "" accept(2)
.xx "" "accept \-" "accept a connection on a socket." "" accept(2)
.xx "" "" "access \- determine accessibility of a file." "" access(3F)
.xx "" "" "access \- determine accessibility of file." "" access(2)
.xx "" "getgroups \- get group" "access list." "" getgroups(2)
.xx "" "initgroups \- initialize group" "access list." "" initgroups(3)
.xx "" "setgroups \- set group" "access list." "" setgroups(2)
.xx "" "access \- determine" "accessibility of a file." "" access(3F)
.xx "" "access \- determine" "accessibility of file." "" access(2)
.xx "" "ac \- login" "accounting." "" ac(8)
.xx "" "sa, accton \- system" "accounting." "" sa(8)
.xx "" "acct \- execution" "accounting file." "" acct(5)
.xx "" "pac \- printer/plotter" "accounting information." "" pac(8)
.xx "" "acct \- turn" "accounting on or off." "" acct(2)
.xx "" "" "acct \- execution accounting file." "" acct(5)
.xx "" "" "acct \- turn accounting on or off." "" acct(2)
.xx "" "sa," "accton \- system accounting." "" sa(8)
.xx "" "sin, cos, tan, asin," "acos, atan, atan2 \- trigonometric functions." "" sin(3M)
.xx "" "signal \- change the" "action for a signal." "" signal(3F)
.xx "" "sact \- print current SCCS file editing" "activity." "" sact(1)
.xx "" "fortune \- print a random, hopefully interesting," "adage." "" fortune(6)
.xx "" "sd \- Disk driver for" "Adaptec ST-506 Disk Controllers." "" sd(4S)
.xx "" "" "adb \- debugger." "" adb(1)
.xx "" "adbgen \- generate" "adb script." "" adbgen(8)
.xx "" "" "adbgen \- generate adb script." "" adbgen(8)
.xx "" "swapon \-" "add a swap device for interleaved paging/swapping." "" swapon(2)
.xx "" "" "addbib \- create or extend bibliographic database." "" addbib(1)
.xx "" "adduser \- procedure for" "adding new users." "" adduser(8)
.xx "" "swapon \- specify" "additional device for paging and swapping." "" swapon(8)
.xx "" "inet_lnaof, inet_netof, inet_ntoa \- Internet" "address manipulation." "/inet_network, inet_makeaddr," inet(3N)
.xx "" "loc \- return the" "address of an object." "" loc(3F)
.xx "" "arp \-" "address resolution display and control." "" arp(8C)
.xx "" "arp \-" "Address Resolution Protocol." "" arp(4P)
.xx "" "mailaddr \- mail" "addressing description." "" mailaddr(7)
.xx "" "" "adduser \- procedure for adding new users." "" adduser(8)
.xx "physical relationships of screens." "" "adjacentscreens \- notify the window driver of the" "" adjacentscreens(1)
.xx "" "" "admin \- create and administer SCCS files." "" admin(1)
.xx "" "admin \- create and" "administer SCCS files." "" admin(1)
.xx "" "" "adventure \- an exploration game." "" adventure(6)
.xx "" "vadvise \- give" "advice to paging system." "" vadvise(2)
.xx "" "flock \- apply or remove an" "advisory lock on an open file." "" flock(2)
.xx "" "yes \- be repetitively" "affirmative." "" yes(1)
.xx "" "basename \- strip filename" "affixes." "" basename(1)
.xx "" "biff \- mail" "alarm." "" biff(1)
.xx "time." "" "alarm \- execute a subroutine after a specified" "" alarm(3F)
.xx "" "" "alarm \- schedule signal after specified time." "" alarm(3C)
.xx "" "" "alias: shell macros." "" csh(1)
.xx "" "unalias: remove" "aliases." "" csh(1)
.xx "" "" "aliases \- aliases file for sendmail." "" aliases(5)
.xx "" "which \- locate a program file including" "aliases and paths (csh only)." "" which(1)
.xx "" "newaliases \- rebuild the data base for the mail" "aliases file." "" newaliases(8)
.xx "" "aliases \-" "aliases file for sendmail." "" aliases(5)
.xx "" "valloc \-" "aligned memory allocator." "" valloc(3)
.xx "" "/calloc, cfree, memalign, valloc, .if n .ti +0.5i" "alloca, malloc_debug, malloc_verify .if t .ti +0.5i/" "" malloc(3)
.xx "" "malloc_verify .if t .ti +0.5i \- memory" "allocator." "/.if n .ti +0.5i alloca, malloc_debug," malloc(3)
.xx "" "valloc \- aligned memory" "allocator." "" valloc(3)
.xx "" "eyacc \- modified yacc" "allowing much improved error recovery." "" eyacc(1)
.xx "" "diag \- stand-" "alone disk initialization and diagnosis." "" diag(8s)
.xx "" "imemtest \- stand" "alone memory test." "" imemtest(8s)
.xx "" "gxtest \- stand" "alone test for the Sun video graphics board." "" gxtest(8s)
.xx "" "scandir," "alphasort \- scan a directory." "" scandir(3)
.xx "" "limit:" "alter per-process resource limitations." "" csh(1)
.xx "" "renice \-" "alter priority of running processes." "" renice(8)
.xx "" "else:" "alternative commands." "" csh(1)
.xx "" "tcov \- construct test coverage" "analysis and statement-by-statement profile." "" tcov(1)
.xx "" "lex \- generator of lexical" "analysis programs." "" lex(1)
.xx "" "" "analyze \- Virtual UNIX postmortem crash analyzer." "" analyze(8)
.xx "" "error \-" "analyze and disperse compiler error messages." "" error(1)
.xx "" "analyze \- Virtual UNIX postmortem crash" "analyzer." "" analyze(8)
.xx "" "worms  \-" "animate worms on a display terminal." "" worms(6)
.xx "" "rain \-" "animated raindrops display." "" rain(6)
.xx "" "bcd \- convert to" "antique media." "" bcd(6)
.xx "" "exit \- terminate a process after flushing" "any pending output." "" exit(3)
.xx "" "" "a.out \- assembler and link editor output." "" a.out(5)
.xx "" "flock \-" "apply or remove an advisory lock on an open file." "" flock(2)
.xx "" "" "ar \- Archive 1/4 inch Streaming Tape Drive." "" ar(4S)
.xx "" "" "ar \- archive and library maintainer." "" ar(1)
.xx "" "" "ar \- archive (library) file format." "" ar(5)
.xx "" "number \- convert" "Arabic numerals to English." "" number(6)
.xx "" "bc \-" "arbitrary-precision arithmetic language." "" bc(1)
.xx "graphics/" "openpl, erase, label, line, circle," "arc, move, cont, point, linemod, space, closepl \-" "" plot(3X)
.xx "" "cpio \- format of cpio" "archive." "" cpio(5)
.xx "" "ar \-" "Archive 1/4 inch Streaming Tape Drive." "" ar(4S)
.xx "" "ar \-" "archive and library maintainer." "" ar(1)
.xx "" "tar \- tape" "archive file format." "" tar(5)
.xx "" "ar \-" "archive (library) file format." "" ar(5)
.xx "" "st \- Driver for Sysgen SC 4000 (" "Archive) Tape Controller." "" st(4S)
.xx "" "tar \- tape" "archiver." "" tar(1)
.xx "" "cpio \- copy file" "archives in and out." "" cpio(1)
.xx "" "ranlib \- convert" "archives to random libraries." "" ranlib(1)
.xx "" "w \- who is on and what they" "are doing." "" w(1)
.xx "" "users \- compact list of users who" "are on the system." "" users(1)
.xx "" "glob: filename expand" "argument list." "" csh(1)
.xx "" "shift: manipulate" "argument list." "" csh(1)
.xx "" "varargs \- variable" "argument list." "" varargs(3)
.xx "" "echo: echo" "arguments." "" csh(1)
.xx "" "echo \- echo" "arguments." "" echo(1)
.xx "" "getarg, iargc \- return command line" "arguments." "" getarg(3F)
.xx "" "expr \- evaluate" "arguments as an expression." "" expr(1)
.xx "" "getopt, optarg, optind \- get option letter from" "argv." "" getopt(3C)
.xx "" "mout, pow, gcd, rpow \- multiple precision integer" "arithmetic." "itom, madd, msub, mult, mdiv, min," mp(3X)
.xx "" "" "arithmetic \- provide drill in number facts." "" arithmetic(6)
.xx "" "bc \- arbitrary-precision" "arithmetic language." "" bc(1)
.xx "" "@:" "arithmetic on shell variables." "" csh(1)
.xx "" "" "arp \- address resolution display and control." "" arp(8C)
.xx "" "" "arp \- Address Resolution Protocol." "" arp(4P)
.xx "" "news \- USENET network news" "article, utility files." "" news(5)
.xx "" "expire \- remove outdated news" "articles." "" expire(8)
.xx "" "inews \- submit news" "articles." "" inews(1)
.xx "" "postnews \- submit news" "articles." "" postnews(1)
.xx "" "readnews \- read news" "articles." "" readnews(1)
.xx "" "recnews \- receive unprocessed" "articles via mail." "" recnews(1)
.xx "" "recnews \- receive unprocessed" "articles via mail." "" recnews(8)
.xx "" "sendnews \- send news" "articles via mail." "" sendnews(8)
.xx "" "uurec \- receive processed news" "articles via mail." "" uurec(8)
.xx "" "" "as \- mc68000 assembler." "" as(1)
.xx "" "expr \- evaluate arguments" "as an expression." "" expr(1)
.xx "" "timezone, dysize \-  convert date and time to" "ASCII." "ctime, localtime, gmtime, asctime," ctime(3)
.xx "" "getdate \- convert time and date from" "ASCII." "" getdate(3)
.xx "" "" "ascii \- map of ASCII character set." "" ascii(7)
.xx "" "ascii \- map of" "ASCII character set." "" ascii(7)
.xx "" "od \- octal, decimal, hex," "ascii dump." "" od(1)
.xx "" "fdate \- return date and time in an" "ASCII string." "" fdate(3F)
.xx "" "atof, atoi, atol \- convert" "ASCII to numbers." "" atof(3)
.xx "to ASCII." "ctime, localtime, gmtime," "asctime, timezone, dysize \-  convert date and time" "" ctime(3)
.xx "" "sin, cos, tan," "asin, acos, atan, atan2 \- trigonometric functions." "" sin(3M)
.xx "" "help \-" "ask for help." "" help(1)
.xx "" "as \- mc68000" "assembler." "" as(1)
.xx "" "a.out \-" "assembler and link editor output." "" a.out(5)
.xx "" "" "assert \- program verification." "" assert(3)
.xx "" "setbuf, setbuffer, setlinebuf \-" "assign buffering to a stream." "" setbuf(3S)
.xx "" "" "at \- execute commands at a later time." "" at(1)
.xx "" "shutdown \- close down the system" "at a given time." "" shutdown(8)
.xx "" "at \- execute commands" "at a later time." "" at(1)
.xx "" "nice, nohup \- run a command" "at low priority (sh only)." "" nice(1)
.xx "" "sin, cos, tan, asin, acos," "atan, atan2 \- trigonometric functions." "" sin(3M)
.xx "" "sin, cos, tan, asin, acos, atan," "atan2 \- trigonometric functions." "" sin(3M)
.xx "" "" "atof, atoi, atol \- convert ASCII to numbers." "" atof(3)
.xx "" "atof," "atoi, atol \- convert ASCII to numbers." "" atof(3)
.xx "" "atof, atoi," "atol \- convert ASCII to numbers." "" atof(3)
.xx "interrupt." "sigpause \-" "atomically release blocked signals and wait for" "" sigpause(2)
.xx "" "rc \- command script for" "auto-reboot and daemons." "" rc(8)
.xx "" "wait \-" "await completion of process." "" wait(1)
.xx "" "" "awk \- pattern scanning and processing language." "" awk(1)
.xx "" "backgammon \- the game of" "backgammon." "" backgammon(6)
.xx "" "" "backgammon \- the game of backgammon." "" backgammon(6)
.xx "" "bg: place job in" "background." "" csh(1)
.xx "" "wait: wait for" "background processes to complete." "" csh(1)
.xx "" "" "banner \- print large banner on printer." "" banner(6)
.xx "" "banner \- print large" "banner on printer." "" banner(6)
.xx "" "gettytab \- terminal configuration data" "base." "" gettytab(5)
.xx "" "hosts \- host name data" "base." "" hosts(5)
.xx "" "networks \- network name data" "base." "" networks(5)
.xx "" "phones \- remote host phone number data" "base." "" phones(5)
.xx "" "printcap \- printer capability data" "base." "" printcap(5)
.xx "" "protocols \- protocol name data" "base." "" protocols(5)
.xx "" "servers \- inet server data" "base." "" servers(5)
.xx "" "services \- service name data" "base." "" services(5)
.xx "" "termcap \- terminal capability data" "base." "" termcap(5)
.xx "" "newaliases \- rebuild the data" "base for the mail aliases file." "" newaliases(8)
.xx "" "ttytype \- data" "base of terminal types by port." "" ttytype(5)
.xx "" "fetch, store, delete, firstkey, nextkey \- data" "base subroutines." "dbminit," dbm(3X)
.xx "" "chesstool \- window-" "based front-end to chess program." "" chesstool(6)
.xx "" "vi \- screen oriented (visual) display editor" "based on ex." "" vi(1)
.xx "" "" "basename \- strip filename affixes." "" basename(1)
.xx "" "" "bc \- arbitrary-precision arithmetic language." "" bc(1)
.xx "" "" "bcd \- convert to antique media." "" bcd(6)
.xx "" "bcopy," "bcmp, bzero, ffs \- bit and byte string operations." "" bstring(3)
.xx "operations." "" "bcopy, bcmp, bzero, ffs \- bit and byte string" "" bstring(3)
.xx "Display." "" "bdemos \- demonstrate Sun Monochrome Bitmap" "" bdemos(6)
.xx "" "yes \-" "be repetitively affirmative." "" yes(1)
.xx "" "cb \- C program" "beautifier." "" cb(1)
.xx "" "uptime \- show how long system has" "been up." "" uptime(1)
.xx "" "j0, j1, jn, y0, y1, yn \-" "bessel functions." "" j0(3M)
.xx "orders." "" "bessel functions \- of two kinds for integer" "" bessel(3F)
.xx "changing/" "random, srandom, initstate, setstate \-" "better random number generator; routines for" "" random(3)
.xx "" "" "bg: place job in background." "" csh(1)
.xx "" "addbib \- create or extend" "bibliographic database." "" addbib(1)
.xx "" "roffbib \- run off" "bibliographic database." "" roffbib(1)
.xx "" "sortbib \- sort" "bibliographic database." "" sortbib(1)
.xx "" "a bibliography .br lookbib \- find references in a" "bibliography." "indxbib \- make inverted index to" indxbib(1)
.xx "bibliography." "indxbib \- make inverted index to a" "bibliography .br lookbib \- find references in a" "" indxbib(1)
.xx "" "bit \- and, or, xor, not, rshift, lshift," "bic, bis, bit, setbit functions." "" bit(3F)
.xx "" "" "biff \- mail alarm." "" biff(1)
.xx "" "comsat \-" "biff server." "" comsat(8C)
.xx "" "whereis \- locate source," "binary, and/or manual for program." "" whereis(1)
.xx "" "\- find printable strings in an object, or other" "binary, file." "strings" strings(1)
.xx "" "uuencode,uudecode \- encode/decode a" "binary file for transmission via mail." "" uuencode(1C)
.xx "" "fread, fwrite \- buffered" "binary input/output." "" fread(3S)
.xx "" "" "bind \- bind a name to a socket." "" bind(2)
.xx "" "bind \-" "bind a name to a socket." "" bind(2)
.xx "" "/" "bin/mail \- send or receive mail among users." "" binmail(1)
.xx "" "bit \- and, or, xor, not, rshift, lshift, bic," "bis, bit, setbit functions." "" bit(3F)
.xx "bit, setbit functions." "" "bit \- and, or, xor, not, rshift, lshift, bic, bis," "" bit(3F)
.xx "" "bcopy, bcmp, bzero, ffs \-" "bit and byte string operations." "" bstring(3)
.xx "" "bit \- and, or, xor, not, rshift, lshift, bic, bis," "bit, setbit functions." "" bit(3F)
.xx "" "bdemos \- demonstrate Sun Monochrome" "Bitmap Display." "" bdemos(6)
.xx "" "strip \- remove symbols and relocation" "bits." "" strip(1)
.xx "communication." "" "bk \- line discipline for machine-machine" "" bk(4)
.xx "" "bwone \- Sun-1" "black and white frame buffer." "" bwone(4S)
.xx "" "bwtwo \- Sun-2" "black and white frame buffer." "" bwtwo(4S)
.xx "" "sync \- update the super" "block." "" sync(1)
.xx "" "sync \- update super-" "block." "" sync(2)
.xx "" "sync \- update the super" "block." "" sync(8)
.xx "" "update \- periodically update the super" "block." "" update(8)
.xx "" "sigblock \-" "block signals." "" sigblock(2)
.xx "" "sigpause \- atomically release" "blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "sum \- sum and count" "blocks in a file." "" sum(1)
.xx "" "\- stand alone test for the Sun video graphics" "board." "gxtest" gxtest(8s)
.xx "" "skyversion \- print the SKYFFP" "board microcode version number ." "" skyversion(8)
.xx "" "boggle \- play the game of" "boggle." "" boggle(6)
.xx "" "" "boggle \- play the game of boggle." "" boggle(6)
.xx "" "ching \- the" "book of changes and other cookies." "" ching(6)
.xx "" "reboot \- UNIX" "bootstrapping procedures." "" reboot(8)
.xx "" "mille \- play Mille" "Bornes." "" mille(6)
.xx "" "indxbib \- make inverted index to a bibliography" ".br lookbib \- find references in a bibliography." "" indxbib(1)
.xx "" "switch: multi-way command" "branch." "" csh(1)
.xx "login, newgrp,/" "sh, for, case, if, while, :, .," "break, continue, cd, eval, exec, exit, export," "" sh(1)
.xx "" "" "break: exit while/foreach loop." "" csh(1)
.xx "" "" "breaksw: exit from switch." "" csh(1)
.xx "" "fg:" "bring job into foreground." "" csh(1)
.xx "" "" "brk, sbrk \- change data segment size." "" brk(2)
.xx "" "more, page \-" "browse through a text file." "" more(1)
.xx "" "" "bsuncube \- view 3-D Sun logo." "" bsuncube(6)
.xx "" "bwone \- Sun-1 black and white frame" "buffer." "" bwone(4S)
.xx "" "bwtwo \- Sun-2 black and white frame" "buffer." "" bwtwo(4S)
.xx "" "fb \- driver for Sun console frame" "buffer." "" fb(4S)
.xx "" "screendump \- dump frame" "buffer image." "" screendump(1)
.xx "" "screenload \- restore frame" "buffer image." "" screenload(1)
.xx "" "fread, fwrite \-" "buffered binary input/output." "" fread(3S)
.xx "" "stdio \- standard" "buffered input/output package." "" intro(3S)
.xx "" "setbuf, setbuffer, setlinebuf \- assign" "buffering to a stream." "" setbuf(3S)
.xx "" "fbio \- general properties of frame" "buffers." "" fbio(4S)
.xx "" "generate a dump of the operating system's profile" "buffers." "kgmon \-" kgmon(8)
.xx "" "mknod \-" "build special file." "" mknod(8)
.xx "" "config \-" "build system configuration files." "" config(8)
.xx "" "kmem, mbmem, mbio, vme16, vme24 \- main memory and" "bus I/O space." "mem," mem(4S)
.xx "" "" "bwone \- Sun-1 black and white frame buffer." "" bwone(4S)
.xx "" "" "bwtwo \- Sun-2 black and white frame buffer." "" bwtwo(4S)
.xx "" "rastrepl \- magnify a raster image" "by 2 times." "" rastrepl(1)
.xx "" "ftpusers \- list of users prohibited" "by ftp." "" ftpusers(5)
.xx "" "\- print out manual pages; find manual information" "by keywords." "man" man(1)
.xx "" "mkstr \- create an error message file" "by massaging C source." "" mkstr(1)
.xx "" "ttytype \- data base of terminal types" "by port." "" ttytype(5)
.xx "" "\- construct test coverage analysis and statement-" "by-statement profile." "tcov" tcov(1)
.xx "" "ntohs \- convert values between host and network" "byte order." "htonl, htons, ntohl," byteorder(3N)
.xx "" "bcopy, bcmp, bzero, ffs \- bit and" "byte string operations." "" bstring(3)
.xx "" "swab \- swap" "bytes." "" swab(3)
.xx "" "bcopy, bcmp," "bzero, ffs \- bit and byte string operations." "" bstring(3)
.xx "" "cc \-" "C compiler." "" cc(1)
.xx "" "cpp \- the" "C language preprocessor." "" cpp(1)
.xx "" "cb \-" "C program beautifier." "" cb(1)
.xx "" "indent \- indent and format" "C program source." "" indent(1)
.xx "" "lint \- a" "C program verifier." "" lint(1)
.xx "" "xstr \- extract strings from" "C programs to implement shared strings." "" xstr(1)
.xx "" "mkstr \- create an error message file by massaging" "C source." "" mkstr(1)
.xx "" "hypot," "cabs \- Euclidean distance." "" hypot(3M)
.xx "" "" "cal \- display calendar." "" cal(1)
.xx "" "dc \- desk" "calculator." "" dc(1)
.xx "" "cal \- display" "calendar." "" cal(1)
.xx "" "" "calendar \- reminder service." "" calendar(1)
.xx "" "syscall \- indirect system" "call." "" syscall(2)
.xx "" "gprof \- display" "call graph profile data." "" gprof(1)
.xx "" "getuid, getgid \- get user or group ID of the" "caller." "" getuid(3F)
.xx "alloca, malloc_debug,/" "malloc, free, realloc," "calloc, cfree, memalign, valloc, .if n .ti +0.5i" "" malloc(3)
.xx "" "intro \- introduction to system" "calls and error numbers." "" intro(2)
.xx "" "canfield, cfscores \- the solitaire card game" "canfield." "" canfield(6)
.xx "canfield." "" "canfield, cfscores \- the solitaire card game" "" canfield(6)
.xx "" "printcap \- printer" "capability data base." "" printcap(5)
.xx "" "termcap \- terminal" "capability data base." "" termcap(5)
.xx "" "oct \- Central Data octal serial" "card." "" oct(4S)
.xx "" "canfield, cfscores \- the solitaire" "card game canfield." "" canfield(6)
.xx "" "cribbage \- the" "card game cribbage." "" cribbage(6)
.xx "exec, exit, export, login, newgrp, read,/" "sh, for," "case, if, while, :, ., break, continue, cd, eval," "" sh(1)
.xx "" "" "case: selector in switch." "" csh(1)
.xx "" "" "cat \- concatenate and display." "" cat(1)
.xx "" "catman \- create the" "cat files for the manual." "" catman(8)
.xx "" "ccat \- compress and uncompress files, and" "cat them." "compact, uncompact," compact(1)
.xx "" "default:" "catchall clause in switch." "" csh(1)
.xx "" "" "catman \- create the cat files for the manual." "" catman(8)
.xx "" "" "cb \- C program beautifier." "" cb(1)
.xx "" "" "cc \- C compiler." "" cc(1)
.xx "them." "compact, uncompact," "ccat \- compress and uncompress files, and cat" "" compact(1)
.xx "" "" "cd \- change working directory." "" cd(1)
.xx "" "" "cd: change directory." "" csh(1)
.xx "" "sh, for, case, if, while, :, ., break, continue," "cd, eval, exec, exit, export, login, newgrp, read,/" "" sh(1)
.xx "delta." "" "cdc \- change the delta commentary of an SCCS" "" cdc(1)
.xx "" "fabs, floor," "ceil \- absolute value, floor, ceiling functions." "" floor(3M)
.xx "" "fabs, floor, ceil \- absolute value, floor," "ceiling functions." "" floor(3M)
.xx "" "oct \-" "Central Data octal serial card." "" oct(4S)
.xx "" "\- Systech VPC-2200 Versatec printer/plotter and" "Centronics printer interface." "vpc" vpc(4S)
.xx "malloc_debug,/" "malloc, free, realloc, calloc," "cfree, memalign, valloc, .if n .ti +0.5i alloca," "" malloc(3)
.xx "" "canfield," "cfscores \- the solitaire card game canfield." "" canfield(6)
.xx "" "" "cgone \- Sun-1 color graphics interface." "" cgone(4S)
.xx "" "" "cgtwo \- Sun-2 color graphics interface." "" cgtwo(4S)
.xx "" "chdir \-" "change current working directory." "" chdir(2)
.xx "" "brk, sbrk \-" "change data segment size." "" brk(2)
.xx "" "chdir \-" "change default directory." "" chdir(3F)
.xx "" "chsh \-" "change default login shell." "" chsh(1)
.xx "" "cd:" "change directory." "" csh(1)
.xx "" "chdir:" "change directory." "" csh(1)
.xx "" "ioinit \-" "change f77 I/O initialization." "" ioinit(3F)
.xx "" "chgrp \-" "change group." "" chgrp(1)
.xx "" "passwd \-" "change login password." "" passwd(1)
.xx "" "chmod \-" "change mode." "" chmod(1)
.xx "" "chmod \-" "change mode of a file." "" chmod(3F)
.xx "" "chmod, fchmod \-" "change mode of file." "" chmod(2)
.xx "" "umask:" "change or display file creation mask." "" csh(1)
.xx "" "chown \-" "change owner." "" chown(8)
.xx "" "chown, fchown \-" "change owner and group of a file." "" chown(2)
.xx "" "chroot \-" "change root directory." "" chroot(2)
.xx "" "signal \-" "change the action for a signal." "" signal(3F)
.xx "" "cdc \-" "change the delta commentary of an SCCS delta." "" cdc(1)
.xx "" "rename \-" "change the name of a file." "" rename(2)
.xx "" "delta \- make a delta (" "change) to an SCCS file." "" delta(1)
.xx "" "set:" "change value of shell variable." "" csh(1)
.xx "" "cd \-" "change working directory." "" cd(1)
.xx "" "ching \- the book of" "changes and other cookies." "" ching(6)
.xx "" "\- better random number generator; routines for" "changing generators." "/srandom, initstate, setstate" random(3)
.xx "" "vi \- view a file without" "changing it using the vi visual editor." "" view(1)
.xx "" "pipe \- create an interprocess communication" "channel." "" pipe(2)
.xx "" "ungetc \- push" "character back into input stream." "" ungetc(3S)
.xx "" "/isascii, isgraph, toupper, tolower, toascii \-" "character classification and conversion macros." "" ctype(3)
.xx "" "eqnchar \- special" "character definitions for eqn." "" eqnchar(7)
.xx "" "getc, fgetc \- get a" "character from a logical unit." "" getc(3F)
.xx "" "index, rindex, lnblnk, len \- tell about" "character objects." "" index(3F)
.xx "" "getc, getchar, fgetc, getw \- get" "character or integer from stream." "" getc(3S)
.xx "" "putc, putchar, fputc, putw \- put" "character or word on a stream." "" putc(3S)
.xx "" "ascii \- map of ASCII" "character set." "" ascii(7)
.xx "" "putc, fputc \- write a" "character to a FORTRAN logical unit." "" putc(3F)
.xx "" "tset \- establish terminal" "characteristics for the environment." "" tset(1)
.xx "" "tr \- translate" "characters." "" tr(1)
.xx "" "" "chase \- Try to escape to killer robots." "" chase(6)
.xx "" "snake, snscore \- display" "chase game." "" snake(6)
.xx "" "" "chdir \- change current working directory." "" chdir(2)
.xx "" "" "chdir \- change default directory." "" chdir(3F)
.xx "" "" "chdir: change directory." "" csh(1)
.xx "" "dcheck \- file system directory consistency" "check." "" dcheck(8)
.xx "" "icheck \- file system storage consistency" "check." "" icheck(8)
.xx "" "fsck \- file system consistency" "check and interactive repair." "" fsck(8)
.xx "" "checknews \-" "check if user has news on the USENET news network." "" checknews(1)
.xx "" "checknr \-" "check nroff/troff files." "" checknr(1)
.xx "" "eqn, neqn," "checkeq \- typeset mathematics." "" eqn(1)
.xx "" "fasthalt \- reboot/halt the system without" "checking the disks." "fastboot," fastboot(8)
.xx "" "newsrc \- information file for readnews and" "checknews." "" newsrc(5)
.xx "news network." "" "checknews \- check if user has news on the USENET" "" checknews(1)
.xx "" "" "checknr \- check nroff/troff files." "" checknr(1)
.xx "" "chess \- the game of" "chess." "" chess(6)
.xx "" "" "chess \- the game of chess." "" chess(6)
.xx "" "chesstool \- window-based front-end to" "chess program." "" chesstool(6)
.xx "program." "" "chesstool \- window-based front-end to chess" "" chesstool(6)
.xx "" "" "chgrp \- change group." "" chgrp(1)
.xx "" "" "ching \- the book of changes and other cookies." "" ching(6)
.xx "" "des \- DES encryption" "chip interface." "" des(4S)
.xx "" "" "chmod \- change mode." "" chmod(1)
.xx "" "" "chmod \- change mode of a file." "" chmod(3F)
.xx "" "" "chmod, fchmod \- change mode of file." "" chmod(2)
.xx "" "" "chown \- change owner." "" chown(8)
.xx "" "" "chown, fchown \- change owner and group of a file." "" chown(2)
.xx "" "" "chroot \- change root directory." "" chroot(2)
.xx "" "" "chsh \- change default login shell." "" chsh(1)
.xx "closepl \- graphics/" "openpl, erase, label, line," "circle, arc, move, cont, point, linemod, space," "" plot(3X)
.xx "" "isgraph, toupper, tolower, toascii \- character" "classification and conversion macros." "/isascii," ctype(3)
.xx "" "default: catchall" "clause in switch." "" csh(1)
.xx "" "uuclean \- uucp spool directory" "clean-up." "" uuclean(8C)
.xx "" "" "clear \- clear workstation or terminal screen." "" clear(1)
.xx "" "clri \-" "clear i-node." "" clri(8)
.xx "" "clear \-" "clear workstation or terminal screen." "" clear(1)
.xx "" "ferror, feof," "clearerr, fileno \- stream status inquiries." "" ferror(3S)
.xx "" "csh \- a shell (command interpreter) with" "C-like syntax." "" csh(1)
.xx "" "cron \-" "clock daemon." "" cron(8)
.xx "" "" "close \- delete a descriptor." "" close(2)
.xx "" "shutdown \-" "close down the system at a given time." "" shutdown(8)
.xx "" "fclose, fflush \-" "close or flush a stream." "" fclose(3S)
.xx "" "opendir, readdir, telldir, seekdir, rewinddir," "closedir \- directory operations." "" directory(3)
.xx "" "syslog, openlog," "closelog \- control system log." "" syslog(3)
.xx "" "circle, arc, move, cont, point, linemod, space," "closepl \- graphics interface." "/erase, label, line," plot(3X)
.xx "" "" "clri \- clear i-node." "" clri(8)
.xx "" "" "cmp \- compare two files." "" cmp(1)
.xx "" "pi \- Pascal interpreter" "code translator." "" pi(1)
.xx "" "" "col \- filter reverse paper motions." "" col(1)
.xx "" "" "colcrt \- filter nroff output for CRT previewing." "" colcrt(1)
.xx "log." "dmesg \-" "collect system diagnostic messages to form error" "" dmesg(8)
.xx "" "colordemos \- demonstrate Sun" "Color Graphics Display." "" colordemos(6)
.xx "" "cgone \- Sun-1" "color graphics interface." "" cgone(4S)
.xx "" "cgtwo \- Sun-2" "color graphics interface." "" cgtwo(4S)
.xx "Display." "" "colordemos \- demonstrate Sun Color Graphics" "" colordemos(6)
.xx "" "" "colrm \- remove columns from a file." "" colrm(1)
.xx "" "pr \- print file(s), possibly in multiple" "columns." "" pr(1)
.xx "" "colrm \- remove" "columns from a file." "" colrm(1)
.xx "" "" "comb \- combine SCCS deltas." "" comb(1)
.xx "" "comb \-" "combine SCCS deltas." "" comb(1)
.xx "files." "" "comm \- select or reject lines common to two sorted" "" comm(1)
.xx "" "exec: overlay shell with specified" "command." "" csh(1)
.xx "" "time: time" "command." "" csh(1)
.xx "" "\- routines for returning a stream to a remote" "command." "rcmd, rresvport, ruserok" rcmd(3N)
.xx "" "rexec \- return stream to a remote" "command." "" rexec(3N)
.xx "" "system \- issue a shell" "command." "" system(3)
.xx "" "system \- execute a UNIX" "command." "" system(3F)
.xx "" "test \- condition" "command." "" test(1)
.xx "" "time \- time a" "command." "" time(1)
.xx "" "nice, nohup \- run a" "command at low priority (sh only)." "" nice(1)
.xx "" "switch: multi-way" "command branch." "" csh(1)
.xx "" "uux \- unix to unix" "command execution." "" uux(1C)
.xx "" "rehash: recompute" "command hash table." "" csh(1)
.xx "" "unhash: discard" "command hash table." "" csh(1)
.xx "" "hashstat: print" "command hashing statistics." "" csh(1)
.xx "" "nohup: run" "command immune to hangups." "" csh(1)
.xx "" "csh \- a shell (" "command interpreter) with C-like syntax." "" csh(1)
.xx "" "whatis \- describe what a" "command is." "" whatis(1)
.xx "" "readonly, set, shift, times, trap, umask, wait \-" "command language." "/export, login, newgrp, read," sh(1)
.xx "" "getarg, iargc \- return" "command line arguments." "" getarg(3F)
.xx "" "repeat: execute" "command repeatedly." "" csh(1)
.xx "" "rc \-" "command script for auto-reboot and daemons." "" rc(8)
.xx "" "onintr: process interrupts in" "command scripts." "" csh(1)
.xx "" "goto:" "command transfer." "" csh(1)
.xx "" "else: alternative" "commands." "" csh(1)
.xx "" "intro \- introduction to" "commands." "" intro(1)
.xx "" "\- introduction to system maintenance and operation" "commands." "intro" intro(8)
.xx "" "at \- execute" "commands at a later time." "" at(1)
.xx "" "while: repeat" "commands conditionally." "" csh(1)
.xx "" "lastcomm \- show last" "commands executed in reverse order." "" lastcomm(1)
.xx "" "source: read" "commands from file." "" csh(1)
.xx "" "cdc \- change the delta" "commentary of an SCCS delta." "" cdc(1)
.xx "" "comm \- select or reject lines" "common to two sorted files." "" comm(1)
.xx "" "bk \- line discipline for machine-machine" "communication." "" bk(4)
.xx "" "socket \- create an endpoint for" "communication." "" socket(2)
.xx "" "pipe \- create an interprocess" "communication channel." "" pipe(2)
.xx "" "users \-" "compact list of users who are on the system." "" users(1)
.xx "files, and cat them." "" "compact, uncompact, ccat \- compress and uncompress" "" compact(1)
.xx "" "diff \- differential file and directory" "comparator." "" diff(1)
.xx "" "cmp \-" "compare two files." "" cmp(1)
.xx "" "sccsdiff \-" "compare two versions of an SCCS file." "" sccsdiff(1)
.xx "" "diff3 \- 3-way differential file" "comparison." "" diff3(1)
.xx "" "intro \- introduction to" "compatibility library functions." "" intro(3C)
.xx "" "cc \- C" "compiler." "" cc(1)
.xx "" "f77 \- FORTRAN 77" "compiler." "" f77(1)
.xx "" "pc \- Pascal" "compiler." "" pc(1)
.xx "" "yacc \- yet another compiler-" "compiler." "" yacc(1)
.xx "" "error \- analyze and disperse" "compiler error messages." "" error(1)
.xx "" "yacc \- yet another" "compiler-compiler." "" yacc(1)
.xx "" "wait: wait for background processes to" "complete." "" csh(1)
.xx "" "wait \- await" "completion of process." "" wait(1)
.xx "" "compact, uncompact, ccat \-" "compress and uncompress files, and cat them." "" compact(1)
.xx "" "hangman \-" "Computer version of the game hangman." "" hangman(6)
.xx "" "" "comsat \- biff server." "" comsat(8C)
.xx "" "zs \- zilog 8530 SCC serial" "comunications driver." "" zs(4S)
.xx "" "cat \-" "concatenate and display." "" cat(1)
.xx "" "test \-" "condition command." "" test(1)
.xx "" "endif: terminate" "conditional." "" csh(1)
.xx "" "if:" "conditional statement." "" csh(1)
.xx "" "while: repeat commands" "conditionally." "" csh(1)
.xx "" "" "config \- build system configuration files." "" config(8)
.xx "" "gettytab \- terminal" "configuration data base." "" gettytab(5)
.xx "" "config \- build system" "configuration files." "" config(8)
.xx "" "ifconfig \-" "configure network interface parameters." "" ifconfig(8C)
.xx "" "" "connect \- initiate a connection on a socket." "" connect(2)
.xx "" "tip, cu \-" "connect to a remote system." "" tip(1C)
.xx "" "getpeername \- get name of" "connected peer." "" getpeername(2)
.xx "" "socketpair \- create a pair of" "connected sockets." "" socketpair(2)
.xx "" "shutdown \- shut down part of a full-duplex" "connection." "" shutdown(2)
.xx "" "accept \- accept a" "connection on a socket." "" accept(2)
.xx "" "connect \- initiate a" "connection on a socket." "" connect(2)
.xx "" "listen \- listen for" "connections on a socket." "" listen(2)
.xx "" "" "cons \- driver for Sun console." "" cons(4S)
.xx "" "dcheck \- file system directory" "consistency check." "" dcheck(8)
.xx "" "icheck \- file system storage" "consistency check." "" icheck(8)
.xx "" "fsck \- file system" "consistency check and interactive repair." "" fsck(8)
.xx "" "cons \- driver for Sun" "console." "" cons(4S)
.xx "" "fb \- driver for Sun" "console frame buffer." "" fb(4S)
.xx "" "mkfs \-" "construct a file system." "" mkfs(8)
.xx "" "newfs \-" "construct a new file system." "" newfs(8)
.xx "" "mkproto \-" "construct a prototype file system." "" mkproto(8)
.xx "statement-by-statement profile." "tcov \-" "construct test coverage analysis and" "" tcov(1)
.xx "" "deroff \- remove nroff, troff, tbl and eqn" "constructs." "" deroff(1)
.xx "" "setrlimit \- control maximum system resource" "consumption." "getrlimit," getrlimit(2)
.xx "" "vlimit \- control maximum system resource" "consumption." "" vlimit(3C)
.xx "" "openpl, erase, label, line, circle, arc, move," "cont, point, linemod, space, closepl \- graphics/" "" plot(3X)
.xx "" "ls \- list" "contents of directory." "" ls(1)
.xx "" "sigstack \- set and/or get signal stack" "context." "" sigstack(2)
.xx "" "lockscreen \- maintain window" "context until ``login''." "" lockscreen(1)
.xx "newgrp,/" "sh, for, case, if, while, :, ., break," "continue, cd, eval, exec, exit, export, login," "" sh(1)
.xx "" "" "continue: cycle in loop." "" csh(1)
.xx "" "arp \- address resolution display and" "control." "" arp(8C)
.xx "" "fcntl \- file" "control." "" fcntl(2)
.xx "" "nd \- network disk" "control." "" nd(8C)
.xx "" "ioctl \-" "control device." "" ioctl(2)
.xx "" "init \- process" "control initialization." "" init(8)
.xx "" "getrlimit, setrlimit \-" "control maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit \-" "control maximum system resource consumption." "" vlimit(3C)
.xx "" "icmp \- Internet" "Control Message Protocol." "" icmp(4P)
.xx "" "dkio \- generic disk" "control operations." "" dkio(4S)
.xx "" "fcntl \- file" "control options." "" fcntl(5)
.xx "" "lpc \- line printer" "control program." "" lpc(8)
.xx "" "tcp \- Internet Transmission" "Control Protocol." "" tcp(4P)
.xx "" "syslog, openlog, closelog \-" "control system log." "" syslog(3)
.xx "" "vhangup \- virtually ``hangup'' the current" "control terminal." "" vhangup(2)
.xx "" "ip \- Disk driver for Interphase 2180 SMD Disk" "Controller." "" ip(4S)
.xx "" "st \- Driver for Sysgen SC 4000 (Archive) Tape" "Controller." "" st(4S)
.xx "" "sd \- Disk driver for Adaptec ST-506 Disk" "Controllers." "" sd(4S)
.xx "" "xt \- Driver for Xylogics 472 Tape" "Controllers." "" xt(4S)
.xx "" "xy \- Disk driver for Xylogics SMD Disk" "Controllers." "" xy(4S)
.xx "" "ecvt, fcvt, gcvt \- output" "conversion." "" ecvt(3)
.xx "" "long, short \- integer object" "conversion." "" long(3F)
.xx "" "printf, fprintf, sprintf \- formatted output" "conversion." "" printf(3S)
.xx "" "scanf, fscanf, sscanf \- formatted input" "conversion." "" scanf(3S)
.xx "" "tolower, toascii \- character classification and" "conversion macros." "/isascii, isgraph, toupper," ctype(3)
.xx "" "units \-" "conversion program." "" units(1)
.xx "" "vswap \-" "convert a foreign font file." "" vswap(1)
.xx "" "dd \-" "convert and copy a file." "" dd(1)
.xx "" "number \-" "convert Arabic numerals to English." "" number(6)
.xx "" "ranlib \-" "convert archives to random libraries." "" ranlib(1)
.xx "" "atof, atoi, atol \-" "convert ASCII to numbers." "" atof(3)
.xx "" "localtime, gmtime, asctime, timezone, dysize \-" "convert date and time to ASCII." "ctime," ctime(3)
.xx "" "htable \-" "convert NIC standard format host tables." "" htable(8)
.xx "" "getdate \-" "convert time and date from ASCII." "" getdate(3)
.xx "" "bcd \-" "convert to antique media." "" bcd(6)
.xx "" "htonl, htons, ntohl, ntohs \-" "convert values between host and network byte order." "" byteorder(3N)
.xx "" "ching \- the book of changes and other" "cookies." "" ching(6)
.xx "" "rcp \- remote file" "copy." "" rcp(1C)
.xx "" "uucp, uulog \- unix to unix" "copy." "" uucp(1C)
.xx "" "dd \- convert and" "copy a file." "" dd(1)
.xx "" "cpio \-" "copy file archives in and out." "" cpio(1)
.xx "" "cp \-" "copy files." "" cp(1)
.xx "" "fork \- create a" "copy of this process." "" fork(3F)
.xx "" "tee \-" "copy standard output to many files." "" tee(1)
.xx "" "" "core \- format of memory image file." "" core(5)
.xx "" "savecore \- save a" "core dump of the operating system." "" savecore(8)
.xx "" "gcore \- get" "core images of running processes." "" gcore(1)
.xx "" "fsync \- synchronize a file's in-" "core state with that on disk." "" fsync(2)
.xx "functions." "sin," "cos, tan, asin, acos, atan, atan2 \- trigonometric" "" sin(3M)
.xx "" "sinh," "cosh, tanh \- hyperbolic functions." "" sinh(3M)
.xx "" "wc \- word" "count." "" wc(1)
.xx "" "sum \- sum and" "count blocks in a file." "" sum(1)
.xx "profile." "tcov \- construct test" "coverage analysis and statement-by-statement" "" tcov(1)
.xx "" "" "cp \- copy files." "" cp(1)
.xx "" "" "cpio \- copy file archives in and out." "" cpio(1)
.xx "" "" "cpio \- format of cpio archive." "" cpio(5)
.xx "" "cpio \- format of" "cpio archive." "" cpio(5)
.xx "" "" "cpp \- the C language preprocessor." "" cpp(1)
.xx "" "" "crash \- what happens when the system crashes." "" crash(8s)
.xx "" "analyze \- Virtual UNIX postmortem" "crash analyzer." "" analyze(8)
.xx "" "crash \- what happens when the system" "crashes." "" crash(8s)
.xx "" "" "creat \- create a new file." "" creat(2)
.xx "" "fork \-" "create a copy of this process." "" fork(3F)
.xx "" "tmpnam \-" "create a name for a temporary file." "" tmpnam(3C)
.xx "" "creat \-" "create a new file." "" creat(2)
.xx "" "open \- open a file for reading or writing, or" "create a new file." "" open(2)
.xx "" "fork \-" "create a new process." "" fork(2)
.xx "" "socketpair \-" "create a pair of connected sockets." "" socketpair(2)
.xx "" "ctags \-" "create a tags file." "" ctags(1)
.xx "" "socket \-" "create an endpoint for communication." "" socket(2)
.xx "" "mkstr \-" "create an error message file by massaging C source." "" mkstr(1)
.xx "" "pipe \-" "create an interprocess communication channel." "" pipe(2)
.xx "" "admin \-" "create and administer SCCS files." "" admin(1)
.xx "" "addbib \-" "create or extend bibliographic database." "" addbib(1)
.xx "" "catman \-" "create the cat files for the manual." "" catman(8)
.xx "" "umask: change or display file" "creation mask." "" csh(1)
.xx "" "umask \- set file" "creation mode mask." "" umask(2)
.xx "" "cribbage \- the card game" "cribbage." "" cribbage(6)
.xx "" "" "cribbage \- the card game cribbage." "" cribbage(6)
.xx "" "" "cron \- clock daemon." "" cron(8)
.xx "" "" "crontab \- table of times to run periodic jobs." "" crontab(5)
.xx "" "pxref \- Pascal" "cross-reference program." "" pxref(1)
.xx "" "colcrt \- filter nroff output for" "CRT previewing." "" colcrt(1)
.xx "" "" "crypt \- encode/decode." "" crypt(1)
.xx "" "" "crypt, setkey, encrypt \- DES encryption." "" crypt(3)
.xx "syntax." "" "csh \- a shell (command interpreter) with C-like" "" csh(1)
.xx "" "locate a program file including aliases and paths (" "csh only)." "which \-" which(1)
.xx "" "" "ctags \- create a tags file." "" ctags(1)
.xx "\-  convert date and time to ASCII." "" "ctime, localtime, gmtime, asctime, timezone, dysize" "" ctime(3)
.xx "" "time," "ctime, ltime, gmtime \- return system time." "" time(3F)
.xx "" "tip," "cu \- connect to a remote system." "" tip(1C)
.xx "" "vhangup \- virtually ``hangup'' the" "current control terminal." "" vhangup(2)
.xx "" "getdomainname, setdomainname \- get/set name of" "current domain." "" getdomainname(2)
.xx "" "domainname \- set or display name of" "current domain system." "" domainname(1)
.xx "" "gethostid \- get unique identifier of" "current host." "" gethostid(2)
.xx "" "gethostname, sethostname \- get/set name of" "current host." "" gethostname(2)
.xx "" "hostnm \- get name of" "current host." "" hostnm(3F)
.xx "" "hostid \- print identifier of" "current host system." "" hostid(1)
.xx "" "hostname \- set or print name of" "current host system." "" hostname(1)
.xx "" "jobs: print" "current job list." "" csh(1)
.xx "" "sun \- is" "current machine a sun workstation." "" sun(1)
.xx "" "vax \- is" "current machine a vax." "" vax(1)
.xx "" "sact \- print" "current SCCS file editing activity." "" sact(1)
.xx "" "sigsetmask \- set" "current signal mask." "" sigsetmask(2)
.xx "" "whoami \- display effective" "current username." "" whoami(1)
.xx "" "chdir \- change" "current working directory." "" chdir(2)
.xx "" "getcwd \- get pathname of" "current working directory." "" getcwd(3F)
.xx "" "getwd \- get" "current working directory pathname." "" getwd(3)
.xx "motion." "" "curses \- screen functions with ``optimal'' cursor" "" curses(3X)
.xx "" "curses \- screen functions with ``optimal''" "cursor motion." "" curses(3X)
.xx "" "spline \- interpolate smooth" "curve." "" spline(1G)
.xx "" "continue:" "cycle in loop." "" csh(1)
.xx "" "bsuncube \- view 3-" "D Sun logo." "" bsuncube(6)
.xx "" "cron \- clock" "daemon." "" cron(8)
.xx "" "inetd \- internet services" "daemon." "" inetd(8C)
.xx "" "lpd \- line printer" "daemon." "" lpd(8)
.xx "" "routed \- network routing" "daemon." "" routed(8C)
.xx "" "rc \- command script for auto-reboot and" "daemons." "" rc(8)
.xx "" "ftpd \-" "DARPA Internet File Transfer Protocol server." "" ftpd(8C)
.xx "" "telnetd \-" "DARPA TELNET protocol server." "" telnetd(8C)
.xx "" "timed \-" "DARPA Time server." "" timed(8C)
.xx "" "tftpd \-" "DARPA Trivial File Transfer Protocol server." "" tftpd(8C)
.xx "" "eval: re-evaluate shell" "data." "" csh(1)
.xx "" "gprof \- display call graph profile" "data." "" gprof(1)
.xx "" "prof \- display profile" "data." "" prof(1)
.xx "" "ttys \- terminal initialization" "data." "" ttys(5)
.xx "" "gettytab \- terminal configuration" "data base." "" gettytab(5)
.xx "" "hosts \- host name" "data base." "" hosts(5)
.xx "" "networks \- network name" "data base." "" networks(5)
.xx "" "phones \- remote host phone number" "data base." "" phones(5)
.xx "" "printcap \- printer capability" "data base." "" printcap(5)
.xx "" "protocols \- protocol name" "data base." "" protocols(5)
.xx "" "servers \- inet server" "data base." "" servers(5)
.xx "" "services \- service name" "data base." "" services(5)
.xx "" "termcap \- terminal capability" "data base." "" termcap(5)
.xx "" "newaliases \- rebuild the" "data base for the mail aliases file." "" newaliases(8)
.xx "" "ttytype \-" "data base of terminal types by port." "" ttytype(5)
.xx "" "dbminit, fetch, store, delete, firstkey, nextkey \-" "data base subroutines." "" dbm(3X)
.xx "" "des \- encrypt/decrypt with" "Data Encryption Standard." "" des(1)
.xx "" "oct \- Central" "Data octal serial card." "" oct(4S)
.xx "" "brk, sbrk \- change" "data segment size." "" brk(2)
.xx "" "null \-" "data sink." "" null(4)
.xx "" "types \- primitive system" "data types." "" types(5)
.xx "" "addbib \- create or extend bibliographic" "database." "" addbib(1)
.xx "" "roffbib \- run off bibliographic" "database." "" roffbib(1)
.xx "" "sortbib \- sort bibliographic" "database." "" sortbib(1)
.xx "" "join \- relational" "database operator." "" join(1)
.xx "" "udp \- Internet User" "Datagram Protocol." "" udp(4P)
.xx "" "date \- display or set the" "date." "" date(1)
.xx "" "" "date \- display or set the date." "" date(1)
.xx "" "gettimeofday, settimeofday \- get/set" "date and time." "" gettimeofday(2)
.xx "" "time, ftime \- get" "date and time." "" time(3C)
.xx "" "fdate \- return" "date and time in an ASCII string." "" fdate(3F)
.xx "" "gmtime, asctime, timezone, dysize \-  convert" "date and time to ASCII." "ctime, localtime," ctime(3)
.xx "" "rdate \- set system" "date from a remote host." "" rdate(8)
.xx "" "getdate \- convert time and" "date from ASCII." "" getdate(3)
.xx "" "touch \- update" "date last modified of a file." "" touch(1)
.xx "" "idate, itime \- return" "date or time in numerical form." "" idate(3F)
.xx "data base subroutines." "" "dbminit, fetch, store, delete, firstkey, nextkey \-" "" dbm(3X)
.xx "" "" "dbx \- debugger." "" dbx(1)
.xx "" "" "dc \- desk calculator." "" dc(1)
.xx "" "" "dcheck \- file system directory consistency check." "" dcheck(8)
.xx "" "" "dd \- convert and copy a file." "" dd(1)
.xx "" "adb \-" "debugger." "" adb(1)
.xx "" "dbx \-" "debugger." "" dbx(1)
.xx "" "ping \- network" "debugging." "" ping(8)
.xx "" "od \- octal," "decimal, hex, ascii dump." "" od(1)
.xx "" "tp \-" "DEC/mag tape formats." "" tp(5)
.xx "" "crypt \- encode/" "decode." "" crypt(1)
.xx "" "uuencode,uudecode \- encode/" "decode a binary file for transmission via mail." "" uuencode(1C)
.xx "" "des \- encrypt/" "decrypt with Data Encryption Standard." "" des(1)
.xx "" "" "default: catchall clause in switch." "" csh(1)
.xx "" "chdir \- change" "default directory." "" chdir(3F)
.xx "" "chsh \- change" "default login shell." "" chsh(1)
.xx "" "kbd \- keyboard translation table format and" "default table." "" kbd(5)
.xx "" "eqnchar \- special character" "definitions for eqn." "" eqnchar(7)
.xx "" "close \-" "delete a descriptor." "" close(2)
.xx "" "dbminit, fetch, store," "delete, firstkey, nextkey \- data base subroutines." "" dbm(3X)
.xx "" "cdc \- change the delta commentary of an SCCS" "delta." "" cdc(1)
.xx "" "" "delta \- make a delta (change) to an SCCS file." "" delta(1)
.xx "" "delta \- make a" "delta (change) to an SCCS file." "" delta(1)
.xx "" "cdc \- change the" "delta commentary of an SCCS delta." "" cdc(1)
.xx "" "rmdel \- remove a" "delta from an SCCS file." "" rmdel(1)
.xx "" "comb \- combine SCCS" "deltas." "" comb(1)
.xx "" "colordemos \-" "demonstrate Sun Color Graphics Display." "" colordemos(6)
.xx "" "bdemos \-" "demonstrate Sun Monochrome Bitmap Display." "" bdemos(6)
.xx "" "mesg \- permit or" "deny messages." "" mesg(1)
.xx "constructs." "" "deroff \- remove nroff, troff, tbl and eqn" "" deroff(1)
.xx "" "" "des \- DES encryption chip interface." "" des(4S)
.xx "Standard." "" "des \- encrypt/decrypt with Data Encryption" "" des(1)
.xx "" "crypt, setkey, encrypt \-" "DES encryption." "" crypt(3)
.xx "" "des \-" "DES encryption chip interface." "" des(4S)
.xx "" "whatis \-" "describe what a command is." "" whatis(1)
.xx "" "mailaddr \- mail addressing" "description." "" mailaddr(7)
.xx "" "remote \- remote host" "description file." "" remote(5)
.xx "" "close \- delete a" "descriptor." "" close(2)
.xx "" "dup, dup2 \- duplicate a" "descriptor." "" dup(2)
.xx "" "getfstype, setfsent, endfsent \- get file system" "descriptor file entry." "/getfsspec, getfsfile," getfsent(3)
.xx "" "getfd \- get the file" "descriptor of an external unit number." "" getfd(3F)
.xx "" "getdtablesize \- get" "descriptor table size." "" getdtablesize(2)
.xx "" "dc \-" "desk calculator." "" dc(1)
.xx "" "access \-" "determine accessibility of a file." "" access(3F)
.xx "" "access \-" "determine accessibility of file." "" access(2)
.xx "" "file \-" "determine file type." "" file(1)
.xx "" "drum \- paging" "device." "" drum(4)
.xx "" "fold \- fold long lines for finite width output" "device." "" fold(1)
.xx "" "ioctl \- control" "device." "" ioctl(2)
.xx "" "swapon \- add a swap" "device for interleaved paging/swapping." "" swapon(2)
.xx "" "swapon \- specify additional" "device for paging and swapping." "" swapon(8)
.xx "" "" "df \- report free disk space on file systems." "" df(1)
.xx "" "flmin, flmax, dflmin," "dflmax, inmax \- return extreme values." "" range(3F)
.xx "" "flmin, flmax," "dflmin, dflmax, inmax \- return extreme values." "" range(3F)
.xx "diagnosis." "" "diag \- stand-alone disk initialization and" "" diag(8s)
.xx "" "diag \- stand-alone disk initialization and" "diagnosis." "" diag(8s)
.xx "" "dmesg \- collect system" "diagnostic messages to form error log." "" dmesg(8)
.xx "" "ratfor \- rational Fortran" "dialect." "" ratfor(1)
.xx "" "" "diff \- differential file and directory comparator." "" diff(1)
.xx "" "" "diff3 \- 3-way differential file comparison." "" diff3(1)
.xx "" "diff \-" "differential file and directory comparator." "" diff(1)
.xx "" "diff3 \- 3-way" "differential file comparison." "" diff3(1)
.xx "" "" "dir \- format of directories." "" dir(5)
.xx "" "dir \- format of" "directories." "" dir(5)
.xx "" "rm, rmdir  \- remove (unlink) files or" "directories." "" rm(1)
.xx "" "rmdir, rm  \- remove (unlink)" "directories or files." "" rmdir(1)
.xx "" "cd \- change working" "directory." "" cd(1)
.xx "" "chdir \- change current working" "directory." "" chdir(2)
.xx "" "chdir \- change default" "directory." "" chdir(3F)
.xx "" "chroot \- change root" "directory." "" chroot(2)
.xx "" "cd: change" "directory." "" csh(1)
.xx "" "chdir: change" "directory." "" csh(1)
.xx "" "getcwd \- get pathname of current working" "directory." "" getcwd(3F)
.xx "" "ls \- list contents of" "directory." "" ls(1)
.xx "" "mkdir \- make a" "directory." "" mkdir(1)
.xx "" "scandir, alphasort \- scan a" "directory." "" scandir(3)
.xx "" "uuclean \- uucp spool" "directory clean-up." "" uuclean(8C)
.xx "" "diff \- differential file and" "directory comparator." "" diff(1)
.xx "" "dcheck \- file system" "directory consistency check." "" dcheck(8)
.xx "format." "getdirentries \- gets" "directory entries in a filesystem independent" "" getdirentries(2)
.xx "" "unlink \- remove" "directory entry." "" unlink(2)
.xx "" "unlink \- remove a" "directory entry." "" unlink(3F)
.xx "" "mkdir \- make a" "directory file." "" mkdir(2)
.xx "" "rmdir \- remove a" "directory file." "" rmdir(2)
.xx "" "pwd \- print working" "directory name." "" pwd(1)
.xx "" "readdir, telldir, seekdir, rewinddir, closedir \-" "directory operations." "opendir," directory(3)
.xx "" "getwd \- get current working" "directory pathname." "" getwd(3)
.xx "" "popd: pop shell" "directory stack." "" csh(1)
.xx "" "pushd: push shell" "directory stack." "" csh(1)
.xx "" "setquota \- enable/" "disable quotas on a file system." "" setquota(2)
.xx "" "unhash:" "discard command hash table." "" csh(1)
.xx "" "unset:" "discard shell variables." "" csh(1)
.xx "" "bk \- line" "discipline for machine-machine communication." "" bk(4)
.xx "" "\- synchronize a file's in-core state with that on" "disk." "fsync" fsync(2)
.xx "" "nd \- network" "disk control." "" nd(8C)
.xx "" "dkio \- generic" "disk control operations." "" dkio(4S)
.xx "" "ip \- Disk driver for Interphase 2180 SMD" "Disk Controller." "" ip(4S)
.xx "" "sd \- Disk driver for Adaptec ST-506" "Disk Controllers." "" sd(4S)
.xx "" "xy \- Disk driver for Xylogics SMD" "Disk Controllers." "" xy(4S)
.xx "" "nd \- network" "disk driver." "" nd(4P)
.xx "" "sd \-" "Disk driver for Adaptec ST-506 Disk Controllers." "" sd(4S)
.xx "Controller." "ip \-" "Disk driver for Interphase 2180 SMD Disk" "" ip(4S)
.xx "" "xy \-" "Disk driver for Xylogics SMD Disk Controllers." "" xy(4S)
.xx "" "diag \- stand-alone" "disk initialization and diagnosis." "" diag(8s)
.xx "" "quota \- manipulate" "disk quotas." "" quota(2)
.xx "" "df \- report free" "disk space on file systems." "" df(1)
.xx "" "du \- summarize" "disk usage." "" du(1)
.xx "" "\- reboot/halt the system without checking the" "disks." "fastboot, fasthalt" fastboot(8)
.xx "" "dkinfo \- report information about a" "disk's geometry and partitioning." "" dkinfo(8)
.xx "" "mount, umount \- mount and" "dismount file system." "" mount(8)
.xx "" "error \- analyze and" "disperse compiler error messages." "" error(1)
.xx "" "bdemos \- demonstrate Sun Monochrome Bitmap" "Display." "" bdemos(6)
.xx "" "cat \- concatenate and" "display." "" cat(1)
.xx "" "colordemos \- demonstrate Sun Color Graphics" "Display." "" colordemos(6)
.xx "" "rain \- animated raindrops" "display." "" rain(6)
.xx "" "arp \- address resolution" "display and control." "" arp(8C)
.xx "" "cal \-" "display calendar." "" cal(1)
.xx "" "gprof \-" "display call graph profile data." "" gprof(1)
.xx "" "snake, snscore \-" "display chase game." "" snake(6)
.xx "" "vi \- screen oriented (visual)" "display editor based on ex." "" vi(1)
.xx "" "whoami \-" "display effective current username." "" whoami(1)
.xx "" "umask: change or" "display file creation mask." "" csh(1)
.xx "" "head \-" "display first few lines of specified files." "" head(1)
.xx "" "domainname \- set or" "display name of current domain system." "" domainname(1)
.xx "" "perfmon \- graphical" "display of general system statistics." "" perfmon(1)
.xx "" "perfmeter \- meter" "display of system performance values." "" perfmeter(1)
.xx "" "date \-" "display or set the date." "" date(1)
.xx "" "prof \-" "display profile data." "" prof(1)
.xx "" "worms  \-  animate worms on a" "display terminal." "" worms(6)
.xx "" "tail \-" "display the last part of a file." "" tail(1)
.xx "" "hypot, cabs \- Euclidean" "distance." "" hypot(3M)
.xx "geometry and partitioning." "" "dkinfo \- report information about a disk's" "" dkinfo(8)
.xx "" "" "dkio \- generic disk control operations." "" dkio(4S)
.xx "error log." "" "dmesg \- collect system diagnostic messages to form" "" dmesg(8)
.xx "" "refer \- find and insert literature references in" "documents." "" refer(1)
.xx "" "troff \- typeset or format" "documents." "" troff(1)
.xx "" "w \- who is on and what they are" "doing." "" w(1)
.xx "" "setdomainname \- get/set name of current" "domain." "getdomainname," getdomainname(2)
.xx "" "domainname \- set or display name of current" "domain system." "" domainname(1)
.xx "system." "" "domainname \- set or display name of current domain" "" domainname(1)
.xx "" "shutdown \- shut" "down part of a full-duplex connection." "" shutdown(2)
.xx "" "shutdown \- close" "down the system at a given time." "" shutdown(8)
.xx "" "rand," "drand, irand \- return random values." "" rand(3F)
.xx "" "" "draw \- interactive graphics drawing." "" draw(6)
.xx "" "graph \-" "draw a graph." "" graph(1G)
.xx "" "draw \- interactive graphics" "drawing." "" draw(6)
.xx "" "arithmetic \- provide" "drill in number facts." "" arithmetic(6)
.xx "" "ar \- Archive 1/4 inch Streaming Tape" "Drive." "" ar(4S)
.xx "" "tm \- tapemaster 1/2 inch tape" "drive." "" tm(4S)
.xx "" "nd \- network disk" "driver." "" nd(4P)
.xx "" "pty \- pseudo terminal" "driver." "" pty(4)
.xx "" "zs \- zilog 8530 SCC serial comunications" "driver." "" zs(4S)
.xx "" "sd \- Disk" "driver for Adaptec ST-506 Disk Controllers." "" sd(4S)
.xx "" "ip \- Disk" "driver for Interphase 2180 SMD Disk Controller." "" ip(4S)
.xx "" "cons \-" "driver for Sun console." "" cons(4S)
.xx "" "fb \-" "driver for Sun console frame buffer." "" fb(4S)
.xx "Controller." "st \-" "Driver for Sysgen SC 4000 (Archive) Tape" "" st(4S)
.xx "" "xt \-" "Driver for Xylogics 472 Tape Controllers." "" xt(4S)
.xx "" "xy \- Disk" "driver for Xylogics SMD Disk Controllers." "" xy(4S)
.xx "" "adjacentscreens \- notify the window" "driver of the physical relationships of screens." "" adjacentscreens(1)
.xx "" "term \- terminal" "driving tables for nroff." "" term(5)
.xx "" "" "drum \- paging device." "" drum(4)
.xx "" "etime," "dtime \- return elapsed execution time." "" etime(3F)
.xx "" "" "du \- summarize disk usage." "" du(1)
.xx "" "dump \- incremental file system" "dump." "" dump(8)
.xx "" "od \- octal, decimal, hex, ascii" "dump." "" od(1)
.xx "" "" "dump \- incremental file system dump." "" dump(8)
.xx "" "" "dump, dumpdates \- incremental dump format." "" dump(5)
.xx "" "dumpfs \-" "dump file system information." "" dumpfs(8)
.xx "" "dump, dumpdates \- incremental" "dump format." "" dump(5)
.xx "" "screendump \-" "dump frame buffer image." "" screendump(1)
.xx "" "savecore \- save a core" "dump of the operating system." "" savecore(8)
.xx "" "kgmon \- generate a" "dump of the operating system's profile buffers." "" kgmon(8)
.xx "" "dump," "dumpdates \- incremental dump format." "" dump(5)
.xx "" "" "dumpfs \- dump file system information." "" dumpfs(8)
.xx "" "" "dup, dup2 \- duplicate a descriptor." "" dup(2)
.xx "" "dup," "dup2 \- duplicate a descriptor." "" dup(2)
.xx "" "shutdown \- shut down part of a full-" "duplex connection." "" shutdown(2)
.xx "" "dup, dup2 \-" "duplicate a descriptor." "" dup(2)
.xx "" "ctime, localtime, gmtime, asctime, timezone," "dysize \-  convert date and time to ASCII." "" ctime(3)
.xx "" "" "ec \- 3Com 10 Mb/s Ethernet interface." "" ec(4S)
.xx "" "" "echo \- echo arguments." "" echo(1)
.xx "" "echo:" "echo arguments." "" csh(1)
.xx "" "echo \-" "echo arguments." "" echo(1)
.xx "" "" "echo: echo arguments." "" csh(1)
.xx "" "" "ecvt, fcvt, gcvt \- output conversion." "" ecvt(3)
.xx "" "" "ed \- text editor." "" ed(1)
.xx "" "end, etext," "edata \- last locations in program." "" end(3)
.xx "" "ex," "edit \- text editor." "" ex(1)
.xx "" "vipw \-" "edit the password file." "" vipw(8)
.xx "" "sact \- print current SCCS file" "editing activity." "" sact(1)
.xx "" "ed \- text" "editor." "" ed(1)
.xx "" "ex, edit \- text" "editor." "" ex(1)
.xx "" ".PP fonttool \- a vfont screen-font" "editor." "" fonttool(1)
.xx "" "ld \- link" "editor." "" ld(1)
.xx "" "sed \- stream" "editor." "" sed(1)
.xx "" "view a file without changing it using the vi visual" "editor." "vi \-" view(1)
.xx "" "vi \- screen oriented (visual) display" "editor based on ex." "" vi(1)
.xx "" "a.out \- assembler and link" "editor output." "" a.out(5)
.xx "" "whoami \- display" "effective current username." "" whoami(1)
.xx "" "setregid \- set real and" "effective group ID." "" setregid(2)
.xx "" "setreuid \- set real and" "effective user ID's." "" setreuid(2)
.xx "" "vfork \- spawn new process in a virtual memory" "efficient way." "" vfork(2)
.xx "" "grep," "egrep, fgrep \- search a file for a pattern." "" grep(1)
.xx "" "etime, dtime \- return" "elapsed execution time." "" etime(3F)
.xx "" "insque, remque \- insert/remove" "element from a queue." "" insque(3)
.xx "" "soelim \-" "eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "" "else: alternative commands." "" csh(1)
.xx "" "tektool \- Tektronix 4014 terminal" "emulator tool." "" tektool(1)
.xx "" "" "en \- Sun 3 Mb/s experimental Ethernet interface." "" en(4S)
.xx "" "setquota \-" "enable/disable quotas on a file system." "" setquota(2)
.xx "" "uuencode \- format of an" "encoded uuencode file." "" uuencode(5)
.xx "" "crypt \-" "encode/decode." "" crypt(1)
.xx "mail." "uuencode,uudecode \-" "encode/decode a binary file for transmission via" "" uuencode(1C)
.xx "" "crypt, setkey," "encrypt \- DES encryption." "" crypt(3)
.xx "" "des \-" "encrypt/decrypt with Data Encryption Standard." "" des(1)
.xx "" "crypt, setkey, encrypt \- DES" "encryption." "" crypt(3)
.xx "" "des \- DES" "encryption chip interface." "" des(4S)
.xx "" "makekey \- generate" "encryption key." "" makekey(8)
.xx "" "des \- encrypt/decrypt with Data" "Encryption Standard." "" des(1)
.xx "" "" "end, etext, edata \- last locations in program." "" end(3)
.xx "" "sccs \- front" "end for the .SM SCCS subsystem." "" sccs(1)
.xx "" "logout:" "end session." "" csh(1)
.xx "" "" "end: terminate loop." "" csh(1)
.xx "" "chesstool \- window-based front-" "end to chess program." "" chesstool(6)
.xx "" "/getfsspec, getfsfile, getfstype, setfsent," "endfsent \- get file system descriptor file entry." "" getfsent(3)
.xx "" "getgrent, getgrgid, getgrnam, setgrent," "endgrent \- get group file entry." "" getgrent(3)
.xx "" "gethostbyaddr, gethostbyname, sethostent," "endhostent \- get network host entry." "gethostent," gethostent(3N)
.xx "" "" "endif: terminate conditional." "" csh(1)
.xx "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "endnetent \- get network entry." "" getnetent(3N)
.xx "" "socket \- create an" "endpoint for communication." "" socket(2)
.xx "" "getprotobynumber, getprotobyname, setprotoent," "endprotoent \- get protocol entry." "getprotoent," getprotoent(3N)
.xx "" "getpwent, getpwuid, getpwnam, setpwent," "endpwent \- get password file entry." "" getpwent(3)
.xx "" "getservbyport, getservbyname, setservent," "endservent \- get service entry." "getservent," getservent(3N)
.xx "" "" "endsw: terminate switch." "" csh(1)
.xx "" "number \- convert Arabic numerals to" "English." "" number(6)
.xx "" "xsend, xget," "enroll \- secret mail." "" xsend(1)
.xx "" "nlist \- get" "entries from name list." "" nlist(3)
.xx "" "getdirentries \- gets directory" "entries in a filesystem independent format." "" getdirentries(2)
.xx "" "endfsent \- get file system descriptor file" "entry." "/getfsspec, getfsfile, getfstype, setfsent," getfsent(3)
.xx "" "getgrnam, setgrent, endgrent \- get group file" "entry." "getgrent, getgrgid," getgrent(3)
.xx "" "sethostent, endhostent \- get network host" "entry." "gethostent, gethostbyaddr, gethostbyname," gethostent(3N)
.xx "" "getnetbyname, setnetent, endnetent \- get network" "entry." "getnetent, getnetbyaddr," getnetent(3N)
.xx "" "setprotoent, endprotoent \- get protocol" "entry." "/getprotobynumber, getprotobyname," getprotoent(3N)
.xx "" "getpwnam, setpwent, endpwent \- get password file" "entry." "getpwent, getpwuid," getpwent(3)
.xx "" "setservent, endservent \- get service" "entry." "getservent, getservbyport, getservbyname," getservent(3N)
.xx "" "syslog \- make system log" "entry." "" syslog(1)
.xx "" "unlink \- remove directory" "entry." "" unlink(2)
.xx "" "unlink \- remove a directory" "entry." "" unlink(3F)
.xx "" "execl, execv, execle, execlp, execvp," "environ \- execute a file." "" execl(3)
.xx "" "" "environ \- user environment." "" environ(5)
.xx "" "setenv: set variable in" "environment." "" csh(1)
.xx "" "environ \- user" "environment." "" environ(5)
.xx "" "printenv \- print out the" "environment." "" printenv(1)
.xx "" "suntools \- the Suntools window" "environment." "" suntools(1)
.xx "" "tset \- establish terminal characteristics for the" "environment." "" tset(1)
.xx "" "getenv \- value for" "environment name." "" getenv(3)
.xx "" "unsetenv: remove" "environment variables." "" csh(1)
.xx "" "getenv \- get value of" "environment variables." "" getenv(3F)
.xx "" "eqnchar \- special character definitions for" "eqn." "" eqnchar(7)
.xx "" "deroff \- remove nroff, troff, tbl and" "eqn constructs." "" deroff(1)
.xx "" "" "eqn, neqn, checkeq \- typeset mathematics." "" eqn(1)
.xx "" "" "eqnchar \- special character definitions for eqn." "" eqnchar(7)
.xx "linemod, space, closepl \- graphics/" "openpl," "erase, label, line, circle, arc, move, cont, point," "" plot(3X)
.xx "" "perror, sys_errlist, sys_nerr," "errno \- system error messages." "" perror(3)
.xx "messages." "" "error \- analyze and disperse compiler error" "" error(1)
.xx "" "dmesg \- collect system diagnostic messages to form" "error log." "" dmesg(8)
.xx "" "mkstr \- create an" "error message file by massaging C source." "" mkstr(1)
.xx "" "error \- analyze and disperse compiler" "error messages." "" error(1)
.xx "" "perror, sys_errlist, sys_nerr, errno \- system" "error messages." "" perror(3)
.xx "" "perror, gerror, ierrno \- get system" "error messages." "" perror(3F)
.xx "" "intro \- introduction to system calls and" "error numbers." "" intro(2)
.xx "" "eyacc \- modified yacc allowing much improved" "error recovery." "" eyacc(1)
.xx "" "spell, spellin, spellout \- find spelling" "errors." "" spell(1)
.xx "" "chase \- Try to" "escape to killer robots." "" chase(6)
.xx "environment." "tset \-" "establish terminal characteristics for the" "" tset(1)
.xx "" "end," "etext, edata \- last locations in program." "" end(3)
.xx "" "ec \- 3Com 10 Mb/s" "Ethernet interface." "" ec(4S)
.xx "" "en \- Sun 3 Mb/s experimental" "Ethernet interface." "" en(4S)
.xx "" "ie \- Sun-2 10 Mb/s" "Ethernet interface." "" ie(4S)
.xx "" "" "etime, dtime \- return elapsed execution time." "" etime(3F)
.xx "" "hypot, cabs \-" "Euclidean distance." "" hypot(3M)
.xx "" "for, case, if, while, :, ., break, continue, cd," "eval, exec, exit, export, login, newgrp, read,/" "sh," sh(1)
.xx "" "" "eval: re-evaluate shell data." "" csh(1)
.xx "" "expr \-" "evaluate arguments as an expression." "" expr(1)
.xx "" "eval: re-" "evaluate shell data." "" csh(1)
.xx "" "history: print history" "event list." "" csh(1)
.xx "" "\- screen oriented (visual) display editor based on" "ex." "vi" vi(1)
.xx "" "" "ex, edit \- text editor." "" ex(1)
.xx "" "lpq \- spool queue" "examination program." "" lpq(1)
.xx "" "/case, if, while, :, ., break, continue, cd, eval," "exec, exit, export, login, newgrp, read, readonly,/" "" sh(1)
.xx "" "" "exec: overlay shell with specified command." "" csh(1)
.xx "execute a file." "" "execl, execv, execle, execlp, execvp, environ \-" "" execl(3)
.xx "" "execl, execv," "execle, execlp, execvp, environ \- execute a file." "" execl(3)
.xx "" "execl, execv, execle," "execlp, execvp, environ \- execute a file." "" execl(3)
.xx "" "sticky \-" "executable files with persistent text." "" sticky(8)
.xx "" "execl, execv, execle, execlp, execvp, environ \-" "execute a file." "" execl(3)
.xx "" "execve \-" "execute a file." "" execve(2)
.xx "" "alarm \-" "execute a subroutine after a specified time." "" alarm(3F)
.xx "" "system \-" "execute a UNIX command." "" system(3F)
.xx "" "repeat:" "execute command repeatedly." "" csh(1)
.xx "" "at \-" "execute commands at a later time." "" at(1)
.xx "" "lastcomm \- show last commands" "executed in reverse order." "" lastcomm(1)
.xx "" "uux \- unix to unix command" "execution." "" uux(1C)
.xx "" "acct \-" "execution accounting file." "" acct(5)
.xx "" "sleep \- suspend" "execution for an interval." "" sleep(1)
.xx "" "sleep \- suspend" "execution for an interval." "" sleep(3F)
.xx "" "sleep \- suspend" "execution for interval." "" sleep(3)
.xx "" "monitor, monstartup, moncontrol \- prepare" "execution profile." "" monitor(3)
.xx "" "pxp \- Pascal" "execution profiler." "" pxp(1)
.xx "" "rexecd \- remote" "execution server." "" rexecd(8C)
.xx "" "etime, dtime \- return elapsed" "execution time." "" etime(3F)
.xx "" "profil \-" "execution time profile." "" profil(2)
.xx "" "pix \- Pascal interpreter and" "executor." "" pix(1)
.xx "file." "execl," "execv, execle, execlp, execvp, environ \- execute a" "" execl(3)
.xx "" "" "execve \- execute a file." "" execve(2)
.xx "" "execl, execv, execle, execlp," "execvp, environ \- execute a file." "" execl(3)
.xx "" "link, symlnk \- make a link to an" "existing file." "" link(3F)
.xx "" "tunefs \- tune up an" "existing file system." "" tunefs(8)
.xx "" "" "_exit \- terminate a process." "" exit(2)
.xx "pending output." "" "exit \- terminate a process after flushing any" "" exit(3)
.xx "" "" "exit \- terminate process with status." "" exit(3F)
.xx "" "/if, while, :, ., break, continue, cd, eval, exec," "exit, export, login, newgrp, read, readonly, set,/" "" sh(1)
.xx "" "breaksw:" "exit from switch." "" csh(1)
.xx "" "" "exit: leave shell." "" csh(1)
.xx "" "break:" "exit while/foreach loop." "" csh(1)
.xx "logarithm, power, square root." "" "exp, log, log10, pow, sqrt \- exponential," "" exp(3M)
.xx "" "glob: filename" "expand argument list." "" csh(1)
.xx "" "expand, unexpand \-" "expand tabs to spaces, and vice versa." "" expand(1)
.xx "versa." "" "expand, unexpand \- expand tabs to spaces, and vice" "" expand(1)
.xx "" "en \- Sun 3 Mb/s" "experimental Ethernet interface." "" en(4S)
.xx "" "" "expire \- remove outdated news articles." "" expire(8)
.xx "" "adventure \- an" "exploration game." "" adventure(6)
.xx "" "frexp, ldexp, modf \- split into mantissa and" "exponent." "" frexp(3)
.xx "" "exp, log, log10, pow, sqrt \-" "exponential, logarithm, power, square root." "" exp(3M)
.xx "" "/while, :, ., break, continue, cd, eval, exec, exit," "export, login, newgrp, read, readonly, set, shift,/" "" sh(1)
.xx "" "" "expr \- evaluate arguments as an expression." "" expr(1)
.xx "" "expr \- evaluate arguments as an" "expression." "" expr(1)
.xx "" "re_comp, re_exec \- regular" "expression handler." "" regex(3)
.xx "" "addbib \- create or" "extend bibliographic database." "" addbib(1)
.xx "" "getfd \- get the file descriptor of an" "external unit number." "" getfd(3F)
.xx "strings." "xstr \-" "extract strings from C programs to implement shared" "" xstr(1)
.xx "recovery." "" "eyacc \- modified yacc allowing much improved error" "" eyacc(1)
.xx "" "" "f77 \- FORTRAN 77 compiler." "" f77(1)
.xx "" "ioinit \- change" "f77 I/O initialization." "" ioinit(3F)
.xx "" "tclose, tread, twrite, trewin, tskipf, tstate \-" "f77 tape I/O." "topen," topen(3F)
.xx "functions." "" "fabs, floor, ceil \- absolute value, floor, ceiling" "" floor(3M)
.xx "" "signal \- simplified software signal" "facilities." "" signal(3)
.xx "" "sigvec \- software signal" "facilities." "" sigvec(2)
.xx "" "arithmetic \- provide drill in number" "facts." "" arithmetic(6)
.xx "" "pstat \- print system" "facts." "" pstat(8)
.xx "" "true," "false \- provide truth values." "" true(1)
.xx "" "" "false, true \- provide truth values." "" false(1)
.xx "" "inet \- Internet protocol" "family." "" inet(4F)
.xx "without checking the disks." "" "fastboot, fasthalt \- reboot/halt the system" "" fastboot(8)
.xx "the disks." "fastboot," "fasthalt \- reboot/halt the system without checking" "" fastboot(8)
.xx "" "abort \- generate a" "fault." "" abort(3)
.xx "" "trpfpe, fpecnt \- trap and repair floating point" "faults." "" trpfpe(3F)
.xx "" "" "fb \- driver for Sun console frame buffer." "" fb(4S)
.xx "" "" "fbio \- general properties of frame buffers." "" fbio(4S)
.xx "" "chmod," "fchmod \- change mode of file." "" chmod(2)
.xx "" "chown," "fchown \- change owner and group of a file." "" chown(2)
.xx "" "" "fclose, fflush \- close or flush a stream." "" fclose(3S)
.xx "" "" "fcntl \- file control." "" fcntl(2)
.xx "" "" "fcntl \- file control options." "" fcntl(5)
.xx "" "ecvt," "fcvt, gcvt \- output conversion." "" ecvt(3)
.xx "" "" "fdate \- return date and time in an ASCII string." "" fdate(3F)
.xx "" "fopen, freopen," "fdopen \- open a stream." "" fopen(3S)
.xx "" "ferror," "feof, clearerr, fileno \- stream status inquiries." "" ferror(3S)
.xx "inquiries." "" "ferror, feof, clearerr, fileno \- stream status" "" ferror(3S)
.xx "base subroutines." "dbminit," "fetch, store, delete, firstkey, nextkey \- data" "" dbm(3X)
.xx "" "head \- display first" "few lines of specified files." "" head(1)
.xx "" "fclose," "fflush \- close or flush a stream." "" fclose(3S)
.xx "" "bcopy, bcmp, bzero," "ffs \- bit and byte string operations." "" bstring(3)
.xx "" "" "fg: bring job into foreground." "" csh(1)
.xx "" "getc," "fgetc \- get a character from a logical unit." "" getc(3F)
.xx "stream." "getc, getchar," "fgetc, getw \- get character or integer from" "" getc(3S)
.xx "" "gets," "fgets \- get a string from a stream." "" gets(3S)
.xx "" "grep, egrep," "fgrep \- search a file for a pattern." "" grep(1)
.xx "" "access \- determine accessibility of" "file." "" access(2)
.xx "" "access \- determine accessibility of a" "file." "" access(3F)
.xx "" "acct \- execution accounting" "file." "" acct(5)
.xx "" "chmod, fchmod \- change mode of" "file." "" chmod(2)
.xx "" "chmod \- change mode of a" "file." "" chmod(3F)
.xx "" "chown, fchown \- change owner and group of a" "file." "" chown(2)
.xx "" "colrm \- remove columns from a" "file." "" colrm(1)
.xx "" "core \- format of memory image" "file." "" core(5)
.xx "" "creat \- create a new" "file." "" creat(2)
.xx "" "source: read commands from" "file." "" csh(1)
.xx "" "ctags \- create a tags" "file." "" ctags(1)
.xx "" "dd \- convert and copy a" "file." "" dd(1)
.xx "" "delta \- make a delta (change) to an SCCS" "file." "" delta(1)
.xx "" "execv, execle, execlp, execvp, environ \- execute a" "file." "execl," execl(3)
.xx "" "execve \- execute a" "file." "" execve(2)
.xx "" "\- apply or remove an advisory lock on an open" "file." "flock" flock(2)
.xx "" "fpr \- print Fortran" "file." "" fpr(1)
.xx "" "get \- get a version of an SCCS" "file." "" get(1)
.xx "" "group \- group" "file." "" group(5)
.xx "" "link \- make a hard link to a" "file." "" link(2)
.xx "" "link, symlnk \- make a link to an existing" "file." "" link(3F)
.xx "" "mkdir \- make a directory" "file." "" mkdir(2)
.xx "" "mknod \- make a special" "file." "" mknod(2)
.xx "" "mknod \- build special" "file." "" mknod(8)
.xx "" "more, page \- browse through a text" "file." "" more(1)
.xx "" "\- rebuild the data base for the mail aliases" "file." "newaliases" newaliases(8)
.xx "" "open a file for reading or writing, or create a new" "file." "open \-" open(2)
.xx "" "passwd \- password" "file." "" passwd(5)
.xx "" "prs \- print an SCCS" "file." "" prs(1)
.xx "" "remote \- remote host description" "file." "" remote(5)
.xx "" "rename \- change the name of a" "file." "" rename(2)
.xx "" "rename \- rename a" "file." "" rename(3F)
.xx "" "rev \- reverse lines of a" "file." "" rev(1)
.xx "" "rmdel \- remove a delta from an SCCS" "file." "" rmdel(1)
.xx "" "rmdir \- remove a directory" "file." "" rmdir(2)
.xx "" "sccsdiff \- compare two versions of an SCCS" "file." "" sccsdiff(1)
.xx "" "sccsfile \- format of SCCS" "file." "" sccsfile(5)
.xx "" "size \- size of an object" "file." "" size(1)
.xx "" "printable strings in an object, or other binary," "file." "strings \- find" strings(1)
.xx "" "sum \- sum and count blocks in a" "file." "" sum(1)
.xx "" "symlink \- make symbolic link to a" "file." "" symlink(2)
.xx "" "tail \- display the last part of a" "file." "" tail(1)
.xx "" "tmpnam \- create a name for a temporary" "file." "" tmpnam(3C)
.xx "" "touch \- update date last modified of a" "file." "" touch(1)
.xx "" "unget \- undo a previous get of an SCCS" "file." "" unget(1)
.xx "" "uniq \- report repeated lines in a" "file." "" uniq(1)
.xx "" "uuencode \- format of an encoded uuencode" "file." "" uuencode(5)
.xx "" "val \- validate SCCS" "file." "" val(1)
.xx "" "vipw \- edit the password" "file." "" vipw(8)
.xx "" "vswap \- convert a foreign font" "file." "" vswap(1)
.xx "" "write, writev \- write on a" "file." "" write(2)
.xx "" "" "file \- determine file type." "" file(1)
.xx "" "diff \- differential" "file and directory comparator." "" diff(1)
.xx "" "cpio \- copy" "file archives in and out." "" cpio(1)
.xx "" "mkstr \- create an error message" "file by massaging C source." "" mkstr(1)
.xx "" "diff3 \- 3-way differential" "file comparison." "" diff3(1)
.xx "" "fcntl \-" "file control." "" fcntl(2)
.xx "" "fcntl \-" "file control options." "" fcntl(5)
.xx "" "rcp \- remote" "file copy." "" rcp(1C)
.xx "" "umask: change or display" "file creation mask." "" csh(1)
.xx "" "umask \- set" "file creation mode mask." "" umask(2)
.xx "" "getfd \- get the" "file descriptor of an external unit number." "" getfd(3F)
.xx "" "sact \- print current SCCS" "file editing activity." "" sact(1)
.xx "" "setfsent, endfsent \- get file system descriptor" "file entry." "/getfsspec, getfsfile, getfstype," getfsent(3)
.xx "" "getgrgid, getgrnam, setgrent, endgrent \- get group" "file entry." "getgrent," getgrent(3)
.xx "" "getpwnam, setpwent, endpwent \- get password" "file entry." "getpwent, getpwuid," getpwent(3)
.xx "" "grep, egrep, fgrep \- search a" "file for a pattern." "" grep(1)
.xx "" "open \- open a" "file for reading or writing, or create a new file." "" open(2)
.xx "" "newsrc \- information" "file for readnews and checknews." "" newsrc(5)
.xx "" "aliases \- aliases" "file for sendmail." "" aliases(5)
.xx "" "uuencode,uudecode \- encode/decode a binary" "file for transmission via mail." "" uuencode(1C)
.xx "" "ar \- archive (library)" "file format." "" ar(5)
.xx "" "tar \- tape archive" "file format." "" tar(5)
.xx "" "which \- locate a program" "file including aliases and paths (csh only)." "" which(1)
.xx "" "fsplit \- split a multi-routine Fortran" "file into individual files." "" fsplit(1)
.xx "" "split \- split a" "file into pieces." "" split(1)
.xx "" "pmerge \- pascal" "file merger." "" pmerge(1)
.xx "" "mktemp \- make a unique" "file name." "" mktemp(3)
.xx "" "fseek, ftell \- reposition a" "file on a logical unit." "" fseek(3F)
.xx "" "stat, lstat, fstat \- get" "file status." "" stat(2)
.xx "" "stat, lstat, fstat \- get" "file status." "" stat(3F)
.xx "" "mkfs \- construct a" "file system." "" mkfs(8)
.xx "" "mkproto \- construct a prototype" "file system." "" mkproto(8)
.xx "" "mount, umount \- mount or remove" "file system." "" mount(2)
.xx "" "mount, umount \- mount and dismount" "file system." "" mount(8)
.xx "" "newfs \- construct a new" "file system." "" newfs(8)
.xx "" "setquota \- enable/disable quotas on a" "file system." "" setquota(2)
.xx "" "tunefs \- tune up an existing" "file system." "" tunefs(8)
.xx "repair." "fsck \-" "file system consistency check and interactive" "" fsck(8)
.xx "" "getfsfile, getfstype, setfsent, endfsent \- get" "file system descriptor file entry." "/getfsspec," getfsent(3)
.xx "" "dcheck \-" "file system directory consistency check." "" dcheck(8)
.xx "" "dump \- incremental" "file system dump." "" dump(8)
.xx "" "hier \-" "file system hierarchy." "" hier(7)
.xx "" "dumpfs \- dump" "file system information." "" dumpfs(8)
.xx "" "quot \- summarize" "file system ownership." "" quot(8)
.xx "" "restore \- incremental" "file system restore." "" restore(8)
.xx "" "statfs \- get" "file system statistics." "" statfs(2)
.xx "" "icheck \-" "file system storage consistency check." "" icheck(8)
.xx "" "mtab \- mounted" "file system table." "" mtab(5)
.xx "" "fs, inode \- format of" "file system volume." "" fs(5)
.xx "" "df \- report free disk space on" "file systems." "" df(1)
.xx "" "utime \- set" "file times." "" utime(3C)
.xx "" "utimes \- set" "file times." "" utimes(2)
.xx "" "uusend \- send a" "file to a remote host." "" uusend(1C)
.xx "" "truncate, ftruncate \- truncate a" "file to a specified length." "" truncate(2)
.xx "" "ftp \-" "file transfer program." "" ftp(1C)
.xx "" "ftpd \- DARPA Internet" "File Transfer Protocol server." "" ftpd(8C)
.xx "" "tftpd \- DARPA Trivial" "File Transfer Protocol server." "" tftpd(8C)
.xx "" "file \- determine" "file type." "" file(1)
.xx "editor." "vi \- view a" "file without changing it using the vi visual" "" view(1)
.xx "" "basename \- strip" "filename affixes." "" basename(1)
.xx "" "glob:" "filename expand argument list." "" csh(1)
.xx "" "ferror, feof, clearerr," "fileno \- stream status inquiries." "" ferror(3S)
.xx "" "admin \- create and administer SCCS" "files." "" admin(1)
.xx "" "checknr \- check nroff/troff" "files." "" checknr(1)
.xx "" "cmp \- compare two" "files." "" cmp(1)
.xx "" "comm \- select or reject lines common to two sorted" "files." "" comm(1)
.xx "" "config \- build system configuration" "files." "" config(8)
.xx "" "cp \- copy" "files." "" cp(1)
.xx "" "find \- find" "files." "" find(1)
.xx "" "split a multi-routine Fortran file into individual" "files." "fsplit \-" fsplit(1)
.xx "" "head \- display first few lines of specified" "files." "" head(1)
.xx "" "install \- install" "files." "" install(1)
.xx "" "MAKEDEV \- make system special" "files." "" makedev(8)
.xx "" "mv \- move or rename" "files." "" mv(1)
.xx "" "news \- USENET network news article, utility" "files." "" news(5)
.xx "" "rmdir, rm  \- remove (unlink) directories or" "files." "" rmdir(1)
.xx "" "sort \- sort or merge" "files." "" sort(1)
.xx "" "tee \- copy standard output to many" "files." "" tee(1)
.xx "" "what \- identify the version of" "files." "" what(1)
.xx "" "compact, uncompact, ccat \- compress and uncompress" "files, and cat them." "" compact(1)
.xx "" "intro \- introduction to special" "files and hardware support." "" intro(4)
.xx "" "catman \- create the cat" "files for the manual." "" catman(8)
.xx "" "fsync \- synchronize a" "file's in-core state with that on disk." "" fsync(2)
.xx "" "rm, rmdir  \- remove (unlink)" "files or directories." "" rm(1)
.xx "" "pr \- print" "file(s), possibly in multiple columns." "" pr(1)
.xx "" "sticky \- executable" "files with persistent text." "" sticky(8)
.xx "" "getdirentries \- gets directory entries in a" "filesystem independent format." "" getdirentries(2)
.xx "" "fstab \- static information about the" "filesystems." "" fstab(5)
.xx "" "colcrt \-" "filter nroff output for CRT previewing." "" colcrt(1)
.xx "" "col \-" "filter reverse paper motions." "" col(1)
.xx "" "plot \- graphics" "filters." "" plot(1G)
.xx "" "" "find \- find files." "" find(1)
.xx "" "refer \-" "find and insert literature references in documents." "" refer(1)
.xx "" "find \-" "find files." "" find(1)
.xx "" "look \-" "find lines in a sorted list." "" look(1)
.xx "" "man \- print out manual pages;" "find manual information by keywords." "" man(1)
.xx "" "ttyname, isatty, ttyslot \-" "find name of a terminal." "" ttyname(3)
.xx "" "ttynam, isatty \-" "find name of a terminal port." "" ttynam(3F)
.xx "" "lorder \-" "find ordering relation for an object library." "" lorder(1)
.xx "binary, file." "strings \-" "find printable strings in an object, or other" "" strings(1)
.xx "" "inverted index to a bibliography .br lookbib \-" "find references in a bibliography." "indxbib \- make" indxbib(1)
.xx "" "spell, spellin, spellout \-" "find spelling errors." "" spell(1)
.xx "" "fold \- fold long lines for" "finite width output device." "" fold(1)
.xx "" "head \- display" "first few lines of specified files." "" head(1)
.xx "" "dbminit, fetch, store, delete," "firstkey, nextkey \- data base subroutines." "" dbm(3X)
.xx "" "fish \- play ``Go" "Fish''." "" fish(6)
.xx "" "" "fish \- play ``Go Fish''." "" fish(6)
.xx "values." "flmin," "flmax, dflmin, dflmax, inmax \- return extreme" "" range(3F)
.xx "extreme values." "" "flmin, flmax, dflmin, dflmax, inmax \- return" "" range(3F)
.xx "" "trpfpe, fpecnt \- trap and repair" "floating point faults." "" trpfpe(3F)
.xx "" "isinf, isnan \- test for indeterminate" "floating point values." "" isinf(3)
.xx "open file." "" "flock \- apply or remove an advisory lock on an" "" flock(2)
.xx "functions." "fabs," "floor, ceil \- absolute value, floor, ceiling" "" floor(3M)
.xx "" "fabs, floor, ceil \- absolute value," "floor, ceiling functions." "" floor(3M)
.xx "" "" "flush \- flush output to a logical unit." "" flush(3F)
.xx "" "fclose, fflush \- close or" "flush a stream." "" fclose(3S)
.xx "" "flush \-" "flush output to a logical unit." "" flush(3F)
.xx "" "exit \- terminate a process after" "flushing any pending output." "" exit(3)
.xx "" "" "fmt \- simple text formatter." "" fmt(1)
.xx "device." "" "fold \- fold long lines for finite width output" "" fold(1)
.xx "" "fold \-" "fold long lines for finite width output device." "" fold(1)
.xx "" ".PP fonttool \- a vfont screen-" "font editor." "" fonttool(1)
.xx "" "vswap \- convert a foreign" "font file." "" vswap(1)
.xx "" "vfont \-" "font formats." "" vfont(5)
.xx "" ".PP" "fonttool \- a vfont screen-font editor." "" fonttool(1)
.xx "" "" "fopen, freopen, fdopen \- open a stream." "" fopen(3S)
.xx "" "break: exit while/" "foreach loop." "" csh(1)
.xx "" "" "foreach: loop over list of names." "" csh(1)
.xx "" "fg: bring job into" "foreground." "" csh(1)
.xx "" "vswap \- convert a" "foreign font file." "" vswap(1)
.xx "" "" "fork \- create a copy of this process." "" fork(3F)
.xx "" "" "fork \- create a new process." "" fork(2)
.xx "" "idate, itime \- return date or time in numerical" "form." "" idate(3F)
.xx "" "dmesg \- collect system diagnostic messages to" "form error log." "" dmesg(8)
.xx "" "ar \- archive (library) file" "format." "" ar(5)
.xx "" "dump, dumpdates \- incremental dump" "format." "" dump(5)
.xx "" "gets directory entries in a filesystem independent" "format." "getdirentries \-" getdirentries(2)
.xx "" "tar \- tape archive file" "format." "" tar(5)
.xx "" "kbd \- keyboard translation table" "format and default table." "" kbd(5)
.xx "" "indent \- indent and" "format C program source." "" indent(1)
.xx "" "troff \- typeset or" "format documents." "" troff(1)
.xx "" "htable \- convert NIC standard" "format host tables." "" htable(8)
.xx "" "gettable \- get NIC" "format host tables from a host ." "" gettable(8C)
.xx "" "uuencode \-" "format of an encoded uuencode file." "" uuencode(5)
.xx "" "cpio \-" "format of cpio archive." "" cpio(5)
.xx "" "dir \-" "format of directories." "" dir(5)
.xx "" "fs, inode \-" "format of file system volume." "" fs(5)
.xx "" "core \-" "format of memory image file." "" core(5)
.xx "" "sccsfile \-" "format of SCCS file." "" sccsfile(5)
.xx "" "tbl \-" "format tables for nroff or troff." "" tbl(1)
.xx "" "tp \- DEC/mag tape" "formats." "" tp(5)
.xx "" "vfont \- font" "formats." "" vfont(5)
.xx "" "scanf, fscanf, sscanf \-" "formatted input conversion." "" scanf(3S)
.xx "" "printf, fprintf, sprintf \-" "formatted output conversion." "" printf(3S)
.xx "" "fmt \- simple text" "formatter." "" fmt(1)
.xx "" "nroff \- text" "formatting and typesetting." "" nroff(1)
.xx "" "ms \- text" "formatting macros." "" ms(7)
.xx "" "me \- macros for" "formatting papers." "" me(7)
.xx "" "f77 \-" "FORTRAN 77 compiler." "" f77(1)
.xx "" "ratfor \- rational" "Fortran dialect." "" ratfor(1)
.xx "" "fpr \- print" "Fortran file." "" fpr(1)
.xx "" "fsplit \- split a multi-routine" "Fortran file into individual files." "" fsplit(1)
.xx "" "intro \- introduction to" "FORTRAN library functions." "" intro(3F)
.xx "" "putc, fputc \- write a character to a" "FORTRAN logical unit." "" putc(3F)
.xx "adage." "" "fortune \- print a random, hopefully interesting," "" fortune(6)
.xx "" "trpfpe," "fpecnt \- trap and repair floating point faults." "" trpfpe(3F)
.xx "" "" "fpr \- print Fortran file." "" fpr(1)
.xx "" "printf," "fprintf, sprintf \- formatted output conversion." "" printf(3S)
.xx "unit." "putc," "fputc \- write a character to a FORTRAN logical" "" putc(3F)
.xx "" "putc, putchar," "fputc, putw \- put character or word on a stream." "" putc(3S)
.xx "" "puts," "fputs \- put a string on a stream." "" puts(3S)
.xx "" "bwone \- Sun-1 black and white" "frame buffer." "" bwone(4S)
.xx "" "bwtwo \- Sun-2 black and white" "frame buffer." "" bwtwo(4S)
.xx "" "fb \- driver for Sun console" "frame buffer." "" fb(4S)
.xx "" "screendump \- dump" "frame buffer image." "" screendump(1)
.xx "" "screenload \- restore" "frame buffer image." "" screenload(1)
.xx "" "fbio \- general properties of" "frame buffers." "" fbio(4S)
.xx "" "" "fread, fwrite \- buffered binary input/output." "" fread(3S)
.xx "" "df \- report" "free disk space on file systems." "" df(1)
.xx "n .ti +0.5i alloca, malloc_debug,/" "malloc," "free, realloc, calloc, cfree, memalign, valloc, .if" "" malloc(3)
.xx "" "fopen," "freopen, fdopen \- open a stream." "" fopen(3S)
.xx "exponent." "" "frexp, ldexp, modf \- split into mantissa and" "" frexp(3)
.xx "" "from \- who is my mail" "from?." "" from(1)
.xx "" "sccs \-" "front end for the .SM SCCS subsystem." "" sccs(1)
.xx "" "chesstool \- window-based" "front-end to chess program." "" chesstool(6)
.xx "" "" "fs, inode \- format of file system volume." "" fs(5)
.xx "" "scanf," "fscanf, sscanf \- formatted input conversion." "" scanf(3S)
.xx "interactive repair." "" "fsck \- file system consistency check and" "" fsck(8)
.xx "unit." "" "fseek, ftell \- reposition a file on a logical" "" fseek(3F)
.xx "" "" "fseek, ftell, rewind \- reposition a stream." "" fseek(3S)
.xx "individual files." "" "fsplit \- split a multi-routine Fortran file into" "" fsplit(1)
.xx "" "" "fstab \- static information about the filesystems." "" fstab(5)
.xx "" "stat, lstat," "fstat \- get file status." "" stat(2)
.xx "" "stat, lstat," "fstat \- get file status." "" stat(3F)
.xx "that on disk." "" "fsync \- synchronize a file's in-core state with" "" fsync(2)
.xx "" "fseek," "ftell \- reposition a file on a logical unit." "" fseek(3F)
.xx "" "fseek," "ftell, rewind \- reposition a stream." "" fseek(3S)
.xx "" "time," "ftime \- get date and time." "" time(3C)
.xx "" "ftpusers \- list of users prohibited by" "ftp." "" ftpusers(5)
.xx "" "" "ftp \- file transfer program." "" ftp(1C)
.xx "server." "" "ftpd \- DARPA Internet File Transfer Protocol" "" ftpd(8C)
.xx "" "" "ftpusers \- list of users prohibited by ftp." "" ftpusers(5)
.xx "" "truncate," "ftruncate \- truncate a file to a specified length." "" truncate(2)
.xx "" "shutdown \- shut down part of a" "full-duplex connection." "" shutdown(2)
.xx "" "gamma \- log gamma" "function." "" gamma(3M)
.xx "" "or, xor, not, rshift, lshift, bic, bis, bit, setbit" "functions." "bit \- and," bit(3F)
.xx "" "fabs, floor, ceil \- absolute value, floor, ceiling" "functions." "" floor(3M)
.xx "" "intro \- introduction to library" "functions." "" intro(3)
.xx "" "intro \- introduction to compatibility library" "functions." "" intro(3C)
.xx "" "intro \- introduction to FORTRAN library" "functions." "" intro(3F)
.xx "" "intro \- introduction to mathematical library" "functions." "" intro(3M)
.xx "" "intro \- introduction to network library" "functions." "" intro(3N)
.xx "" "j0, j1, jn, y0, y1, yn \- bessel" "functions." "" j0(3M)
.xx "" "cos, tan, asin, acos, atan, atan2 \- trigonometric" "functions." "sin," sin(3M)
.xx "" "sinh, cosh, tanh \- hyperbolic" "functions." "" sinh(3M)
.xx "" "bessel" "functions \- of two kinds for integer orders." "" bessel(3F)
.xx "" "curses \- screen" "functions with ``optimal'' cursor motion." "" curses(3X)
.xx "" "fread," "fwrite \- buffered binary input/output." "" fread(3S)
.xx "" "adventure \- an exploration" "game." "" adventure(6)
.xx "" "monop \- Monopoly" "game." "" monop(6)
.xx "" "snake, snscore \- display chase" "game." "" snake(6)
.xx "" "trek \- trekkie" "game." "" trek(6)
.xx "" "worm \- Play the growing worm" "game." "" worm(6)
.xx "" "canfield, cfscores \- the solitaire card" "game canfield." "" canfield(6)
.xx "" "cribbage \- the card" "game cribbage." "" cribbage(6)
.xx "" "hangman \- Computer version of the" "game hangman." "" hangman(6)
.xx "" "backgammon \- the" "game of backgammon." "" backgammon(6)
.xx "" "boggle \- play the" "game of boggle." "" boggle(6)
.xx "" "chess \- the" "game of chess." "" chess(6)
.xx "" "wump \- the" "game of hunt-the-wumpus." "" wump(6)
.xx "" "" "gamma \- log gamma function." "" gamma(3M)
.xx "" "gamma \- log" "gamma function." "" gamma(3M)
.xx "" "itom, madd, msub, mult, mdiv, min, mout, pow," "gcd, rpow \- multiple precision integer arithmetic." "" mp(3X)
.xx "" "" "gcore \- get core images of running processes." "" gcore(1)
.xx "" "ecvt, fcvt," "gcvt \- output conversion." "" ecvt(3)
.xx "buffers." "kgmon \-" "generate a dump of the operating system's profile" "" kgmon(8)
.xx "" "abort \-" "generate a fault." "" abort(3)
.xx "" "adbgen \-" "generate adb script." "" adbgen(8)
.xx "" "makekey \-" "generate encryption key." "" makekey(8)
.xx "" "ncheck \-" "generate names from i-numbers." "" ncheck(8)
.xx "" "rand, srand \- random number" "generator." "" rand(3C)
.xx "" "lex \-" "generator of lexical analysis programs." "" lex(1)
.xx "" "/initstate, setstate \- better random number" "generator; routines for changing generators." "" random(3)
.xx "" "random number generator; routines for changing" "generators." "/srandom, initstate, setstate \- better" random(3)
.xx "" "dkio \-" "generic disk control operations." "" dkio(4S)
.xx "" "dkinfo \- report information about a disk's" "geometry and partitioning." "" dkinfo(8)
.xx "" "perror," "gerror, ierrno \- get system error messages." "" perror(3F)
.xx "" "" "getarg, iargc \- return command line arguments." "" getarg(3F)
.xx "" "" "getc, fgetc \- get a character from a logical unit." "" getc(3F)
.xx "integer from stream." "" "getc, getchar, fgetc, getw \- get character or" "" getc(3S)
.xx "from stream." "getc," "getchar, fgetc, getw \- get character or integer" "" getc(3S)
.xx "directory." "" "getcwd \- get pathname of current working" "" getcwd(3F)
.xx "" "" "getdate \- convert time and date from ASCII." "" getdate(3)
.xx "filesystem independent format." "" "getdirentries \- gets directory entries in a" "" getdirentries(2)
.xx "current domain." "" "getdomainname, setdomainname \- get/set name of" "" getdomainname(2)
.xx "" "" "getdtablesize \- get descriptor table size." "" getdtablesize(2)
.xx "" "getgid," "getegid \- get group identity." "" getgid(2)
.xx "" "" "getenv \- get value of environment variables." "" getenv(3F)
.xx "" "" "getenv \- value for environment name." "" getenv(3)
.xx "" "getuid," "geteuid \- get user identity." "" getuid(2)
.xx "unit number." "" "getfd \- get the file descriptor of an external" "" getfd(3F)
.xx "setfsent, endfsent \- get file system descriptor/" "" "getfsent, getfsspec, getfsfile, getfstype," "" getfsent(3)
.xx "file system descriptor file/" "getfsent, getfsspec," "getfsfile, getfstype, setfsent, endfsent \- get" "" getfsent(3)
.xx "\- get file system descriptor file/" "getfsent," "getfsspec, getfsfile, getfstype, setfsent, endfsent" "" getfsent(3)
.xx "descriptor file/" "getfsent, getfsspec, getfsfile," "getfstype, setfsent, endfsent \- get file system" "" getfsent(3)
.xx "" "getuid," "getgid \- get user or group ID of the caller." "" getuid(3F)
.xx "" "" "getgid, getegid \- get group identity." "" getgid(2)
.xx "get group file entry." "" "getgrent, getgrgid, getgrnam, setgrent, endgrent \-" "" getgrent(3)
.xx "file entry." "getgrent," "getgrgid, getgrnam, setgrent, endgrent \- get group" "" getgrent(3)
.xx "entry." "getgrent, getgrgid," "getgrnam, setgrent, endgrent \- get group file" "" getgrent(3)
.xx "" "" "getgroups \- get group access list." "" getgroups(2)
.xx "endhostent \- get network host entry." "gethostent," "gethostbyaddr, gethostbyname, sethostent," "" gethostent(3N)
.xx "network host entry." "gethostent, gethostbyaddr," "gethostbyname, sethostent, endhostent \- get" "" gethostent(3N)
.xx "sethostent, endhostent \- get network host entry." "" "gethostent, gethostbyaddr, gethostbyname," "" gethostent(3N)
.xx "" "" "gethostid \- get unique identifier of current host." "" gethostid(2)
.xx "host." "" "gethostname, sethostname \- get/set name of current" "" gethostname(2)
.xx "timer." "" "getitimer, setitimer \- get/set value of interval" "" getitimer(2)
.xx "" "" "getlog \- get user's login name." "" getlog(3F)
.xx "" "" "getlogin \- get login name." "" getlogin(3)
.xx "get network entry." "getnetent," "getnetbyaddr, getnetbyname, setnetent, endnetent \-" "" getnetent(3N)
.xx "entry." "getnetent, getnetbyaddr," "getnetbyname, setnetent, endnetent \- get network" "" getnetent(3N)
.xx "endnetent \- get network entry." "" "getnetent, getnetbyaddr, getnetbyname, setnetent," "" getnetent(3N)
.xx "argv." "" "getopt, optarg, optind \- get option letter from" "" getopt(3C)
.xx "" "" "getpagesize \- get system page size." "" getpagesize(2)
.xx "" "" "getpass \- read a password." "" getpass(3)
.xx "" "" "getpeername \- get name of connected peer." "" getpeername(2)
.xx "" "" "getpgrp \- get process group." "" getpgrp(2)
.xx "" "" "getpid \- get process id." "" getpid(3F)
.xx "" "" "getpid, getppid \- get process identification." "" getpid(2)
.xx "" "getpid," "getppid \- get process identification." "" getpid(2)
.xx "scheduling priority." "" "getpriority, setpriority \- get/set program" "" getpriority(2)
.xx "protocol entry." "getprotoent, getprotobynumber," "getprotobyname, setprotoent, endprotoent \- get" "" getprotoent(3N)
.xx "endprotoent \- get protocol entry." "getprotoent," "getprotobynumber, getprotobyname, setprotoent," "" getprotoent(3N)
.xx "setprotoent, endprotoent \- get protocol entry." "" "getprotoent, getprotobynumber, getprotobyname," "" getprotoent(3N)
.xx "" "" "getpw \- get name from uid." "" getpw(3)
.xx "get password file entry." "" "getpwent, getpwuid, getpwnam, setpwent, endpwent \-" "" getpwent(3)
.xx "entry." "getpwent, getpwuid," "getpwnam, setpwent, endpwent \- get password file" "" getpwent(3)
.xx "password file entry." "getpwent," "getpwuid, getpwnam, setpwent, endpwent \- get" "" getpwent(3)
.xx "resource consumption." "" "getrlimit, setrlimit \- control maximum system" "" getrlimit(2)
.xx "utilization." "" "getrusage \- get information about resource" "" getrusage(2)
.xx "format." "getdirentries \-" "gets directory entries in a filesystem independent" "" getdirentries(2)
.xx "" "" "gets, fgets \- get a string from a stream." "" gets(3S)
.xx "service entry." "getservent, getservbyport," "getservbyname, setservent, endservent \- get" "" getservent(3N)
.xx "endservent \- get service entry." "getservent," "getservbyport, getservbyname, setservent," "" getservent(3N)
.xx "setservent, endservent \- get service entry." "" "getservent, getservbyport, getservbyname," "" getservent(3N)
.xx "" "" "getsockname \- get socket name." "" getsockname(2)
.xx "sockets." "" "getsockopt, setsockopt \- get and set options on" "" getsockopt(2)
.xx "." "" "gettable \- get NIC format host tables from a host" "" gettable(8C)
.xx "time." "" "gettimeofday, settimeofday \- get/set date and" "" gettimeofday(2)
.xx "" "" "getty  \- set terminal mode." "" getty(8)
.xx "" "" "gettytab \- terminal configuration data base." "" gettytab(5)
.xx "" "" "getuid, geteuid \- get user identity." "" getuid(2)
.xx "caller." "" "getuid, getgid \- get user or group ID of the" "" getuid(3F)
.xx "" "getc, getchar, fgetc," "getw \- get character or integer from stream." "" getc(3S)
.xx "" "" "getwd \- get current working directory pathname." "" getwd(3)
.xx "" "vadvise \-" "give advice to paging system." "" vadvise(2)
.xx "" "shutdown \- close down the system at a" "given time." "" shutdown(8)
.xx "" "" "glob: filename expand argument list." "" csh(1)
.xx "" "time, ctime, ltime," "gmtime \- return system time." "" time(3F)
.xx "and time to ASCII." "ctime, localtime," "gmtime, asctime, timezone, dysize \-  convert date" "" ctime(3)
.xx "" "fish \- play ``" "Go Fish''." "" fish(6)
.xx "" "setjmp, longjmp \- non-local" "goto." "" setjmp(3)
.xx "" "" "goto: command transfer." "" csh(1)
.xx "" "" "gprof \- display call graph profile data." "" gprof(1)
.xx "" "graph \- draw a" "graph." "" graph(1G)
.xx "" "" "graph \- draw a graph." "" graph(1G)
.xx "" "gprof \- display call" "graph profile data." "" gprof(1)
.xx "" "perfmon \-" "graphical display of general system statistics." "" perfmon(1)
.xx "" "gxtest \- stand alone test for the Sun video" "graphics board." "" gxtest(8s)
.xx "" "colordemos \- demonstrate Sun Color" "Graphics Display." "" colordemos(6)
.xx "" "draw \- interactive" "graphics drawing." "" draw(6)
.xx "" "plot \-" "graphics filters." "" plot(1G)
.xx "" "cgone \- Sun-1 color" "graphics interface." "" cgone(4S)
.xx "" "cgtwo \- Sun-2 color" "graphics interface." "" cgtwo(4S)
.xx "" "arc, move, cont, point, linemod, space, closepl \-" "graphics interface." "/erase, label, line, circle," plot(3X)
.xx "" "plot \-" "graphics interface." "" plot(5)
.xx "" "vplot \- plot" "graphics on the Versatec." "" vplot(1)
.xx "" "" "grep, egrep, fgrep \- search a file for a pattern." "" grep(1)
.xx "" "vgrind \-" "grind nice listings of programs." "" vgrind(1)
.xx "" "chgrp \- change" "group." "" chgrp(1)
.xx "" "getpgrp \- get process" "group." "" getpgrp(2)
.xx "" "killpg \- send signal to a process" "group." "" killpg(2)
.xx "" "setpgrp \- set process" "group." "" setpgrp(2)
.xx "" "" "group \- group file." "" group(5)
.xx "" "getgroups \- get" "group access list." "" getgroups(2)
.xx "" "initgroups \- initialize" "group access list." "" initgroups(3)
.xx "" "setgroups \- set" "group access list." "" setgroups(2)
.xx "" "group \-" "group file." "" group(5)
.xx "" "getgrgid, getgrnam, setgrent, endgrent \- get" "group file entry." "getgrent," getgrent(3)
.xx "" "setregid \- set real and effective" "group ID." "" setregid(2)
.xx "" "setruid, setgid, setegid, setrgid \- set user and" "group ID." "setuid, seteuid," setuid(3)
.xx "" "getuid, getgid \- get user or" "group ID of the caller." "" getuid(3F)
.xx "" "getgid, getegid \- get" "group identity." "" getgid(2)
.xx "" "groups \- show" "group memberships." "" groups(1)
.xx "" "chown, fchown \- change owner and" "group of a file." "" chown(2)
.xx "" "make \- maintain program" "groups." "" make(1)
.xx "" "" "groups \- show group memberships." "" groups(1)
.xx "" "worm \- Play the" "growing worm game." "" worm(6)
.xx "" "stty," "gtty \- set and get terminal state." "" stty(3C)
.xx "graphics board." "" "gxtest \- stand alone test for the Sun video" "" gxtest(8s)
.xx "" "" "halt \- stop the processor." "" halt(8)
.xx "" "stop:" "halt a job or process." "" csh(1)
.xx "" "reboot \- reboot system or" "halt processor." "" reboot(2)
.xx "" "fastboot, fasthalt \- reboot/" "halt the system without checking the disks." "" fastboot(8)
.xx "" "rmail \-" "handle remote mail received via uucp." "" rmail(8)
.xx "" "re_comp, re_exec \- regular expression" "handler." "" regex(3)
.xx "" "hangman \- Computer version of the game" "hangman." "" hangman(6)
.xx "" "" "hangman \- Computer version of the game hangman." "" hangman(6)
.xx "" "vhangup \- virtually ``" "hangup'' the current control terminal." "" vhangup(2)
.xx "" "nohup: run command immune to" "hangups." "" csh(1)
.xx "" "crash \- what" "happens when the system crashes." "" crash(8s)
.xx "" "link \- make a" "hard link to a file." "" link(2)
.xx "" "intro \- introduction to special files and" "hardware support." "" intro(4)
.xx "" "uptime \- show how long system" "has been up." "" uptime(1)
.xx "" "checknews \- check if user" "has news on the USENET news network." "" checknews(1)
.xx "" "rehash: recompute command" "hash table." "" csh(1)
.xx "" "unhash: discard command" "hash table." "" csh(1)
.xx "" "hashstat: print command" "hashing statistics." "" csh(1)
.xx "" "" "hashstat: print command hashing statistics." "" csh(1)
.xx "" "leave \- remind you when you" "have to leave." "" leave(1)
.xx "" "help \- ask for" "help." "" help(1)
.xx "" "" "help \- ask for help." "" help(1)
.xx "" "od \- octal, decimal," "hex, ascii dump." "" od(1)
.xx "" "" "hier \- file system hierarchy." "" hier(7)
.xx "" "hier \- file system" "hierarchy." "" hier(7)
.xx "" "history: print" "history event list." "" csh(1)
.xx "" "" "history: print history event list." "" csh(1)
.xx "" "fortune \- print a random," "hopefully interesting, adage." "" fortune(6)
.xx "" "gethostid \- get unique identifier of current" "host." "" gethostid(2)
.xx "" "gethostname, sethostname \- get/set name of current" "host." "" gethostname(2)
.xx "" "hostnm \- get name of current" "host." "" hostnm(3F)
.xx "" "rdate \- set system date from a remote" "host." "" rdate(8)
.xx "" "uusend \- send a file to a remote" "host." "" uusend(1C)
.xx "" "gettable \- get NIC format host tables from a" "host ." "" gettable(8C)
.xx "" "htons, ntohl, ntohs \- convert values between" "host and network byte order." "htonl," byteorder(3N)
.xx "" "remote \- remote" "host description file." "" remote(5)
.xx "" "sethostent, endhostent \- get network" "host entry." "/gethostbyaddr, gethostbyname," gethostent(3N)
.xx "" "hosts \-" "host name data base." "" hosts(5)
.xx "" "phones \- remote" "host phone number data base." "" phones(5)
.xx "" "ruptime \- show" "host status of local machines." "" ruptime(1C)
.xx "" "hostid \- print identifier of current" "host system." "" hostid(1)
.xx "" "hostname \- set or print name of current" "host system." "" hostname(1)
.xx "" "htable \- convert NIC standard format" "host tables." "" htable(8)
.xx "" "gettable \- get NIC format" "host tables from a host ." "" gettable(8C)
.xx "" "" "hostid \- print identifier of current host system." "" hostid(1)
.xx "system." "" "hostname \- set or print name of current host" "" hostname(1)
.xx "" "" "hostnm \- get name of current host." "" hostnm(3F)
.xx "" "" "hosts \- host name data base." "" hosts(5)
.xx "" "uptime \- show" "how long system has been up." "" uptime(1)
.xx "" "" "htable \- convert NIC standard format host tables." "" htable(8)
.xx "between host and network byte order." "" "htonl, htons, ntohl, ntohs \- convert values" "" byteorder(3N)
.xx "and network byte order." "htonl," "htons, ntohl, ntohs \- convert values between host" "" byteorder(3N)
.xx "" "wump \- the game of" "hunt-the-wumpus." "" wump(6)
.xx "" "sinh, cosh, tanh \-" "hyperbolic functions." "" sinh(3M)
.xx "" "" "hypot, cabs \- Euclidean distance." "" hypot(3M)
.xx "" "getarg," "iargc \- return command line arguments." "" getarg(3F)
.xx "" "" "icheck \- file system storage consistency check." "" icheck(8)
.xx "" "" "icmp \- Internet Control Message Protocol." "" icmp(4P)
.xx "" "getpid \- get process" "id." "" getpid(3F)
.xx "" "setregid \- set real and effective group" "ID." "" setregid(2)
.xx "" "setgid, setegid, setrgid \- set user and group" "ID." "setuid, seteuid, setruid," setuid(3)
.xx "" "getuid, getgid \- get user or group" "ID of the caller." "" getuid(3F)
.xx "" "su \- substitute user" "id temporarily." "" su(1)
.xx "form." "" "idate, itime \- return date or time in numerical" "" idate(3F)
.xx "" "getpid, getppid \- get process" "identification." "" getpid(2)
.xx "" "gethostid \- get unique" "identifier of current host." "" gethostid(2)
.xx "" "hostid \- print" "identifier of current host system." "" hostid(1)
.xx "" "what \-" "identify the version of files." "" what(1)
.xx "" "getgid, getegid \- get group" "identity." "" getgid(2)
.xx "" "getuid, geteuid \- get user" "identity." "" getuid(2)
.xx "" "setreuid \- set real and effective user" "ID's." "" setreuid(2)
.xx "" "" "ie \- Sun-2 10 Mb/s Ethernet interface." "" ie(4S)
.xx "" "perror, gerror," "ierrno \- get system error messages." "" perror(3F)
.xx "" "" "if \- general properties of network interfaces." "" if(4N)
.xx "" "" "if: conditional statement." "" csh(1)
.xx "" "/free, realloc, calloc, cfree, memalign, valloc," ".if n .ti +0.5i alloca, malloc_debug, malloc_verify/" "" malloc(3)
.xx "" ".if n .ti +0.5i alloca, malloc_debug, malloc_verify" ".if t .ti +0.5i \- memory allocator." "/valloc," malloc(3)
.xx "" "checknews \- check" "if user has news on the USENET news network." "" checknews(1)
.xx "exit, export, login, newgrp, read,/" "sh, for, case," "if, while, :, ., break, continue, cd, eval, exec," "" sh(1)
.xx "" "" "ifconfig \- configure network interface parameters." "" ifconfig(8C)
.xx "" "vp \-" "Ikon 10071-5 Versatec parallel printer interface." "" vp(4S)
.xx "" "abort \- terminate abruptly with memory" "image." "" abort(3F)
.xx "" "screendump \- dump frame buffer" "image." "" screendump(1)
.xx "" "screenload \- restore frame buffer" "image." "" screenload(1)
.xx "" "rastrepl \- magnify a raster" "image by 2 times." "" rastrepl(1)
.xx "" "core \- format of memory" "image file." "" core(5)
.xx "" "gcore \- get core" "images of running processes." "" gcore(1)
.xx "" "" "imemtest \- stand alone memory test." "" imemtest(8s)
.xx "" "notify: request" "immediate notification." "" csh(1)
.xx "" "nohup: run command" "immune to hangups." "" csh(1)
.xx "" "xstr \- extract strings from C programs to" "implement shared strings." "" xstr(1)
.xx "" "eyacc \- modified yacc allowing much" "improved error recovery." "" eyacc(1)
.xx "" "ar \- Archive 1/4" "inch Streaming Tape Drive." "" ar(4S)
.xx "" "tm \- tapemaster 1/2" "inch tape drive." "" tm(4S)
.xx "" "which \- locate a program file" "including aliases and paths (csh only)." "" which(1)
.xx "" "dump, dumpdates \-" "incremental dump format." "" dump(5)
.xx "" "dump \-" "incremental file system dump." "" dump(8)
.xx "" "restore \-" "incremental file system restore." "" restore(8)
.xx "" "" "indent \- indent and format C program source." "" indent(1)
.xx "" "indent \-" "indent and format C program source." "" indent(1)
.xx "" "\- gets directory entries in a filesystem" "independent format." "getdirentries" getdirentries(2)
.xx "" "tgetflag, tgetstr, tgoto, tputs \- terminal" "independent operation routines." "tgetent, tgetnum," termcap(3X)
.xx "" "isinf, isnan \- test for" "indeterminate floating point values." "" isinf(3)
.xx "" "ptx \- permuted" "index." "" ptx(1)
.xx "" "strncat, strcmp, strncmp, strcpy, strncpy, strlen," "index, rindex \- string operations." "strcat," string(3)
.xx "objects." "" "index, rindex, lnblnk, len \- tell about character" "" index(3F)
.xx "references in a/" "indxbib \- make inverted" "index to a bibliography .br lookbib \- find" "" indxbib(1)
.xx "" "last \-" "indicate last logins of users and teletypes." "" last(1)
.xx "" "syscall \-" "indirect system call." "" syscall(2)
.xx "" "fsplit \- split a multi-routine Fortran file into" "individual files." "" fsplit(1)
.xx ".br lookbib \- find references in a bibliography." "" "indxbib \- make inverted index to a bibliography" "" indxbib(1)
.xx "" "" "inet \- Internet protocol family." "" inet(4F)
.xx "" "servers \-" "inet server data base." "" servers(5)
.xx "inet_netof, inet_ntoa \- Internet address/" "" "inet_addr, inet_network, inet_makeaddr, inet_lnaof," "" inet(3N)
.xx "" "" "inetd \- internet services daemon." "" inetd(8C)
.xx "address/" "inet_addr, inet_network, inet_makeaddr," "inet_lnaof, inet_netof, inet_ntoa \- Internet" "" inet(3N)
.xx "Internet address/" "inet_addr, inet_network," "inet_makeaddr, inet_lnaof, inet_netof, inet_ntoa \-" "" inet(3N)
.xx "" "inet_addr, inet_network, inet_makeaddr, inet_lnaof," "inet_netof, inet_ntoa \- Internet address/" "" inet(3N)
.xx "inet_netof, inet_ntoa \- Internet/" "inet_addr," "inet_network, inet_makeaddr, inet_lnaof," "" inet(3N)
.xx "" "/inet_makeaddr, inet_lnaof, inet_netof," "inet_ntoa \- Internet address manipulation." "" inet(3N)
.xx "" "" "inews \- submit news articles." "" inews(1)
.xx "" "dumpfs \- dump file system" "information." "" dumpfs(8)
.xx "" "pac \- printer/plotter accounting" "information." "" pac(8)
.xx "partitioning." "dkinfo \- report" "information about a disk's geometry and" "" dkinfo(8)
.xx "" "getrusage \- get" "information about resource utilization." "" getrusage(2)
.xx "" "vtimes \- get" "information about resource utilization." "" vtimes(3C)
.xx "" "fstab \- static" "information about the filesystems." "" fstab(5)
.xx "" "man \- print out manual pages; find manual" "information by keywords." "" man(1)
.xx "" "newsrc \-" "information file for readnews and checknews." "" newsrc(5)
.xx "" "miscellaneous \- miscellaneous useful" "information pages." "" intro(7)
.xx "" "" "init \- process control initialization." "" init(8)
.xx "" "" "initgroups \- initialize group access list." "" initgroups(3)
.xx "" "init \- process control" "initialization." "" init(8)
.xx "" "ioinit \- change f77 I/O" "initialization." "" ioinit(3F)
.xx "" "diag \- stand-alone disk" "initialization and diagnosis." "" diag(8s)
.xx "" "ttys \- terminal" "initialization data." "" ttys(5)
.xx "" "initgroups \-" "initialize group access list." "" initgroups(3)
.xx "" "connect \-" "initiate a connection on a socket." "" connect(2)
.xx "" "popen, pclose \-" "initiate I/O to/from a process." "" popen(3S)
.xx "generator; routines for changing/" "random, srandom," "initstate, setstate \- better random number" "" random(3)
.xx "" "flmin, flmax, dflmin, dflmax," "inmax \- return extreme values." "" range(3F)
.xx "" "clri \- clear" "i-node." "" clri(8)
.xx "" "fs," "inode \- format of file system volume." "" fs(5)
.xx "" "read, readv \- read" "input." "" read(2)
.xx "" "soelim \- eliminate \&.so's from nroff" "input." "" soelim(1)
.xx "" "scanf, fscanf, sscanf \- formatted" "input conversion." "" scanf(3S)
.xx "" "ungetc \- push character back into" "input stream." "" ungetc(3S)
.xx "" "fread, fwrite \- buffered binary" "input/output." "" fread(3S)
.xx "" "stdio \- standard buffered" "input/output package." "" intro(3S)
.xx "" "ferror, feof, clearerr, fileno \- stream status" "inquiries." "" ferror(3S)
.xx "" "refer \- find and" "insert literature references in documents." "" refer(1)
.xx "" "insque, remque \-" "insert/remove element from a queue." "" insque(3)
.xx "queue." "" "insque, remque \- insert/remove element from a" "" insque(3)
.xx "" "" "install \- install files." "" install(1)
.xx "" "install \-" "install files." "" install(1)
.xx "" "draw \-" "interactive graphics drawing." "" draw(6)
.xx "" "fsck \- file system consistency check and" "interactive repair." "" fsck(8)
.xx "" "fortune \- print a random, hopefully" "interesting, adage." "" fortune(6)
.xx "" "cgone \- Sun-1 color graphics" "interface." "" cgone(4S)
.xx "" "cgtwo \- Sun-2 color graphics" "interface." "" cgtwo(4S)
.xx "" "des \- DES encryption chip" "interface." "" des(4S)
.xx "" "ec \- 3Com 10 Mb/s Ethernet" "interface." "" ec(4S)
.xx "" "en \- Sun 3 Mb/s experimental Ethernet" "interface." "" en(4S)
.xx "" "ie \- Sun-2 10 Mb/s Ethernet" "interface." "" ie(4S)
.xx "" "lo \- software loopback network" "interface." "" lo(4)
.xx "" "mti \- Systech MTI-800/1600 multi-terminal" "interface." "" mti(4S)
.xx "" "mtio \- UNIX system magnetic tape" "interface." "" mtio(4)
.xx "" "cont, point, linemod, space, closepl \- graphics" "interface." "/erase, label, line, circle, arc, move," plot(3X)
.xx "" "plot \- graphics" "interface." "" plot(5)
.xx "" "tty \- general terminal" "interface." "" tty(4)
.xx "" "vp \- Ikon 10071-5 Versatec parallel printer" "interface." "" vp(4S)
.xx "" "Versatec printer/plotter and Centronics printer" "interface." "vpc \- Systech VPC-2200" vpc(4S)
.xx "" "ifconfig \- configure network" "interface parameters." "" ifconfig(8C)
.xx "" "telnet \- user" "interface to the TELNET protocol." "" telnet(1C)
.xx "" "if \- general properties of network" "interfaces." "" if(4N)
.xx "" "swapon \- add a swap device for" "interleaved paging/swapping." "" swapon(2)
.xx "" "sendmail \- send mail over the" "internet." "" sendmail(8)
.xx "" "inet_makeaddr, inet_lnaof, inet_netof, inet_ntoa \-" "Internet address manipulation." "/inet_network," inet(3N)
.xx "" "icmp \-" "Internet Control Message Protocol." "" icmp(4P)
.xx "" "ftpd \- DARPA" "Internet File Transfer Protocol server." "" ftpd(8C)
.xx "" "ip \-" "Internet Protocol." "" ip(4P)
.xx "" "inet \-" "Internet protocol family." "" inet(4F)
.xx "" "inetd \-" "internet services daemon." "" inetd(8C)
.xx "" "tcp \-" "Internet Transmission Control Protocol." "" tcp(4P)
.xx "" "udp \-" "Internet User Datagram Protocol." "" udp(4P)
.xx "" "ip \- Disk driver for" "Interphase 2180 SMD Disk Controller." "" ip(4S)
.xx "" "spline \-" "interpolate smooth curve." "" spline(1G)
.xx "" "pti \- phototypesetter" "interpreter." "" pti(1)
.xx "" "px \- Pascal" "interpreter." "" px(1)
.xx "" "pix \- Pascal" "interpreter and executor." "" pix(1)
.xx "" "pi \- Pascal" "interpreter code translator." "" pi(1)
.xx "" "csh \- a shell (command" "interpreter) with C-like syntax." "" csh(1)
.xx "" "pipe \- create an" "interprocess communication channel." "" pipe(2)
.xx "" "\- atomically release blocked signals and wait for" "interrupt." "sigpause" sigpause(2)
.xx "" "onintr: process" "interrupts in command scripts." "" csh(1)
.xx "" "sleep \- suspend execution for an" "interval." "" sleep(1)
.xx "" "sleep \- suspend execution for" "interval." "" sleep(3)
.xx "" "sleep \- suspend execution for an" "interval." "" sleep(3F)
.xx "" "intro \-" "introduction to commands." "" intro(1)
.xx "" "intro \-" "introduction to compatibility library functions." "" intro(3C)
.xx "" "intro \-" "introduction to FORTRAN library functions." "" intro(3F)
.xx "" "intro \-" "introduction to library functions." "" intro(3)
.xx "" "intro \-" "introduction to mathematical library functions." "" intro(3M)
.xx "" "intro \-" "introduction to network library functions." "" intro(3N)
.xx "" "intro \-" "introduction to other libraries." "" intro(3X)
.xx "" "intro \-" "introduction to special files and hardware support." "" intro(4)
.xx "" "intro \-" "introduction to system calls and error numbers." "" intro(2)
.xx "commands." "intro \-" "introduction to system maintenance and operation" "" intro(8)
.xx "" "ncheck \- generate names from" "i-numbers." "" ncheck(8)
.xx "find references in a bibliography." "indxbib \- make" "inverted index to a bibliography .br lookbib \-" "" indxbib(1)
.xx "" "tread, twrite, trewin, tskipf, tstate \- f77 tape" "I/O." "topen, tclose," topen(3F)
.xx "" "ioinit \- change f77" "I/O initialization." "" ioinit(3F)
.xx "" "select \- synchronous" "I/O multiplexing." "" select(2)
.xx "" "mbmem, mbio, vme16, vme24 \- main memory and bus" "I/O space." "mem, kmem," mem(4S)
.xx "" "iostat \- report" "I/O statistics." "" iostat(8)
.xx "" "popen, pclose \- initiate" "I/O to/from a process." "" popen(3S)
.xx "" "" "ioctl \- control device." "" ioctl(2)
.xx "" "" "ioinit \- change f77 I/O initialization." "" ioinit(3F)
.xx "" "" "iostat \- report I/O statistics." "" iostat(8)
.xx "Controller." "" "ip \- Disk driver for Interphase 2180 SMD Disk" "" ip(4S)
.xx "" "" "ip \- Internet Protocol." "" ip(4P)
.xx "" "rand, drand," "irand \- return random values." "" rand(3F)
.xx "" "sail \- multi-user wooden ships and" "iron men." "" sail(6)
.xx "" "whatis \- describe what a command" "is." "" whatis(1)
.xx "" "isalpha, isupper, islower, isdigit, isxdigit," "isalnum, isspace, ispunct, isprint, iscntrl,/" "" ctype(3)
.xx "isalnum, isspace, ispunct, isprint, iscntrl,/" "" "isalpha, isupper, islower, isdigit, isxdigit," "" ctype(3)
.xx "" "/isalnum, isspace, ispunct, isprint, iscntrl," "isascii, isgraph, toupper, tolower, toascii \-/" "" ctype(3)
.xx "" "ttynam," "isatty \- find name of a terminal port." "" ttynam(3F)
.xx "" "ttyname," "isatty, ttyslot \- find name of a terminal." "" ttyname(3)
.xx "" "/isxdigit, isalnum, isspace, ispunct, isprint," "iscntrl, isascii, isgraph, toupper, tolower,/" "" ctype(3)
.xx "isprint, iscntrl,/" "isalpha, isupper, islower," "isdigit, isxdigit, isalnum, isspace, ispunct," "" ctype(3)
.xx "" "/isspace, ispunct, isprint, iscntrl, isascii," "isgraph, toupper, tolower, toascii \- character/" "" ctype(3)
.xx "point values." "" "isinf, isnan \- test for indeterminate floating" "" isinf(3)
.xx "ispunct, isprint, iscntrl,/" "isalpha, isupper," "islower, isdigit, isxdigit, isalnum, isspace," "" ctype(3)
.xx "values." "isinf," "isnan \- test for indeterminate floating point" "" isinf(3)
.xx "" "/isdigit, isxdigit, isalnum, isspace, ispunct," "isprint, iscntrl, isascii, isgraph, toupper,/" "" ctype(3)
.xx "" "/islower, isdigit, isxdigit, isalnum, isspace," "ispunct, isprint, iscntrl, isascii, isgraph,/" "" ctype(3)
.xx "" "/isupper, islower, isdigit, isxdigit, isalnum," "isspace, ispunct, isprint, iscntrl, isascii,/" "" ctype(3)
.xx "" "system \-" "issue a shell command." "" system(3)
.xx "isspace, ispunct, isprint, iscntrl,/" "isalpha," "isupper, islower, isdigit, isxdigit, isalnum," "" ctype(3)
.xx "iscntrl,/" "isalpha, isupper, islower, isdigit," "isxdigit, isalnum, isspace, ispunct, isprint," "" ctype(3)
.xx "" "vi \- view a file without changing" "it using the vi visual editor." "" view(1)
.xx "" "idate," "itime \- return date or time in numerical form." "" idate(3F)
.xx "rpow \- multiple precision integer arithmetic." "" "itom, madd, msub, mult, mdiv, min, mout, pow, gcd," "" mp(3X)
.xx "" "suspend: suspend a shell, resuming" "its superior." "" csh(1)
.xx "" "" "j0, j1, jn, y0, y1, yn \- bessel functions." "" j0(3M)
.xx "" "j0," "j1, jn, y0, y1, yn \- bessel functions." "" j0(3M)
.xx "" "j0, j1," "jn, y0, y1, yn \- bessel functions." "" j0(3M)
.xx "" "bg: place" "job in background." "" csh(1)
.xx "" "fg: bring" "job into foreground." "" csh(1)
.xx "" "jobs: print current" "job list." "" csh(1)
.xx "" "stop: halt a" "job or process." "" csh(1)
.xx "" "crontab \- table of times to run periodic" "jobs." "" crontab(5)
.xx "" "kill: kill" "jobs and processes." "" csh(1)
.xx "" "lprm \- remove" "jobs from the line printer spooling queue." "" lprm(1)
.xx "" "" "jobs: print current job list." "" csh(1)
.xx "" "" "join \- relational database operator." "" join(1)
.xx "" "" "kb \- Sun keyboard." "" kb(4S)
.xx "default table." "" "kbd \- keyboard translation table format and" "" kbd(5)
.xx "" "rstatd \-" "kernel static server." "" rstatd(8C)
.xx "" "makekey \- generate encryption" "key." "" makekey(8)
.xx "" "kb \- Sun" "keyboard." "" kb(4S)
.xx "table." "kbd \-" "keyboard translation table format and default" "" kbd(5)
.xx "" "print out manual pages; find manual information by" "keywords." "man \-" man(1)
.xx "profile buffers." "" "kgmon \- generate a dump of the operating system's" "" kgmon(8)
.xx "" "" "kill \- send a signal to a process." "" kill(3F)
.xx "process." "" "kill \- send a signal to a process, or terminate a" "" kill(1)
.xx "" "" "kill \- send signal to a process." "" kill(2)
.xx "" "kill:" "kill jobs and processes." "" csh(1)
.xx "" "" "kill: kill jobs and processes." "" csh(1)
.xx "" "chase \- Try to escape to" "killer robots." "" chase(6)
.xx "" "" "killpg \- send signal to a process group." "" killpg(2)
.xx "" "bessel functions \- of two" "kinds for integer orders." "" bessel(3F)
.xx "bus I/O space." "mem," "kmem, mbmem, mbio, vme16, vme24 \- main memory and" "" mem(4S)
.xx "" "quiz \- test your" "knowledge." "" quiz(6)
.xx "linemod, space, closepl \- graphics/" "openpl, erase," "label, line, circle, arc, move, cont, point," "" plot(3X)
.xx "" "awk \- pattern scanning and processing" "language." "" awk(1)
.xx "" "bc \- arbitrary-precision arithmetic" "language." "" bc(1)
.xx "" "set, shift, times, trap, umask, wait \- command" "language." "/export, login, newgrp, read, readonly," sh(1)
.xx "" "cpp \- the C" "language preprocessor." "" cpp(1)
.xx "order." "" "lastcomm \- show last commands executed in reverse" "" lastcomm(1)
.xx "" "" "ld \- link editor." "" ld(1)
.xx "" "frexp," "ldexp, modf \- split into mantissa and exponent." "" frexp(3)
.xx "" "leave \- remind you when you have to" "leave." "" leave(1)
.xx "" "" "leave \- remind you when you have to leave." "" leave(1)
.xx "" "exit:" "leave shell." "" csh(1)
.xx "" "index, rindex, lnblnk," "len \- tell about character objects." "" index(3F)
.xx "" "ftruncate \- truncate a file to a specified" "length." "truncate," truncate(2)
.xx "" "getopt, optarg, optind \- get option" "letter from argv." "" getopt(3C)
.xx "" "" "lex \- generator of lexical analysis programs." "" lex(1)
.xx "" "lex \- generator of" "lexical analysis programs." "" lex(1)
.xx "" "intro \- introduction to other" "libraries." "" intro(3X)
.xx "" "ranlib \- convert archives to random" "libraries." "" ranlib(1)
.xx "" "lorder \- find ordering relation for an object" "library." "" lorder(1)
.xx "" "ar \- archive (" "library) file format." "" ar(5)
.xx "" "intro \- introduction to" "library functions." "" intro(3)
.xx "" "intro \- introduction to compatibility" "library functions." "" intro(3C)
.xx "" "intro \- introduction to FORTRAN" "library functions." "" intro(3F)
.xx "" "intro \- introduction to mathematical" "library functions." "" intro(3M)
.xx "" "intro \- introduction to network" "library functions." "" intro(3N)
.xx "" "ar \- archive and" "library maintainer." "" ar(1)
.xx "" "csh \- a shell (command interpreter) with C-" "like syntax." "" csh(1)
.xx "" "" "limit: alter per-process resource limitations." "" csh(1)
.xx "" "limit: alter per-process resource" "limitations." "" csh(1)
.xx "" "unlimit: remove resource" "limitiations." "" csh(1)
.xx "" "ulimit \- get and set user" "limits." "" ulimit(3C)
.xx "" "getarg, iargc \- return command" "line arguments." "" getarg(3F)
.xx "space, closepl \- graphics/" "openpl, erase, label," "line, circle, arc, move, cont, point, linemod," "" plot(3X)
.xx "" "bk \-" "line discipline for machine-machine communication." "" bk(4)
.xx "" "lpr \- off" "line print." "" lpr(1)
.xx "" "lpc \-" "line printer control program." "" lpc(8)
.xx "" "lpd \-" "line printer daemon." "" lpd(8)
.xx "" "lprm \- remove jobs from the" "line printer spooling queue." "" lprm(1)
.xx "" "/erase, label, line, circle, arc, move, cont, point," "linemod, space, closepl \- graphics interface." "" plot(3X)
.xx "" "comm \- select or reject" "lines common to two sorted files." "" comm(1)
.xx "" "fold \- fold long" "lines for finite width output device." "" fold(1)
.xx "" "uniq \- report repeated" "lines in a file." "" uniq(1)
.xx "" "look \- find" "lines in a sorted list." "" look(1)
.xx "" "rev \- reverse" "lines of a file." "" rev(1)
.xx "" "head \- display first few" "lines of specified files." "" head(1)
.xx "" "readlink \- read value of a symbolic" "link." "" readlink(2)
.xx "" "" "link \- make a hard link to a file." "" link(2)
.xx "" "ld \-" "link editor." "" ld(1)
.xx "" "a.out \- assembler and" "link editor output." "" a.out(5)
.xx "" "" "link, symlnk \- make a link to an existing file." "" link(3F)
.xx "" "link \- make a hard" "link to a file." "" link(2)
.xx "" "symlink \- make symbolic" "link to a file." "" symlink(2)
.xx "" "link, symlnk \- make a" "link to an existing file." "" link(3F)
.xx "" "ln \- make" "links." "" ln(1)
.xx "" "" "lint \- a C program verifier." "" lint(1)
.xx "" "glob: filename expand argument" "list." "" csh(1)
.xx "" "history: print history event" "list." "" csh(1)
.xx "" "jobs: print current job" "list." "" csh(1)
.xx "" "shift: manipulate argument" "list." "" csh(1)
.xx "" "getgroups \- get group access" "list." "" getgroups(2)
.xx "" "initgroups \- initialize group access" "list." "" initgroups(3)
.xx "" "look \- find lines in a sorted" "list." "" look(1)
.xx "" "nlist \- get entries from name" "list." "" nlist(3)
.xx "" "nm \- print name" "list." "" nm(1)
.xx "" "setgroups \- set group access" "list." "" setgroups(2)
.xx "" "varargs \- variable argument" "list." "" varargs(3)
.xx "" "ls \-" "list contents of directory." "" ls(1)
.xx "" "foreach: loop over" "list of names." "" csh(1)
.xx "" "ftpusers \-" "list of users prohibited by ftp." "" ftpusers(5)
.xx "" "users \- compact" "list of users who are on the system." "" users(1)
.xx "" "" "listen \- listen for connections on a socket." "" listen(2)
.xx "" "listen \-" "listen for connections on a socket." "" listen(2)
.xx "" "vgrind \- grind nice" "listings of programs." "" vgrind(1)
.xx "" "refer \- find and insert" "literature references in documents." "" refer(1)
.xx "" "" "ln \- make links." "" ln(1)
.xx "" "index, rindex," "lnblnk, len \- tell about character objects." "" index(3F)
.xx "" "" "lo \- software loopback network interface." "" lo(4)
.xx "" "" "loc \- return the address of an object." "" loc(3F)
.xx " convert date and time to ASCII." "ctime," "localtime, gmtime, asctime, timezone, dysize \-" "" ctime(3)
.xx "(csh only)." "which \-" "locate a program file including aliases and paths" "" which(1)
.xx "" "whereis \-" "locate source, binary, and/or manual for program." "" whereis(1)
.xx "" "end, etext, edata \- last" "locations in program." "" end(3)
.xx "" "flock \- apply or remove an advisory" "lock on an open file." "" flock(2)
.xx "``login''." "" "lockscreen \- maintain window context until" "" lockscreen(1)
.xx "" "\- collect system diagnostic messages to form error" "log." "dmesg" dmesg(8)
.xx "" "syslog, openlog, closelog \- control system" "log." "" syslog(3)
.xx "" "syslog \- make system" "log entry." "" syslog(1)
.xx "" "gamma \-" "log gamma function." "" gamma(3M)
.xx "power, square root." "exp," "log, log10, pow, sqrt \- exponential, logarithm," "" exp(3M)
.xx "" "syslog \-" "log systems messages." "" syslog(8)
.xx "square root." "exp, log," "log10, pow, sqrt \- exponential, logarithm, power," "" exp(3M)
.xx "" "exp, log, log10, pow, sqrt \- exponential," "logarithm, power, square root." "" exp(3M)
.xx "" "rwho \- who's" "logged in on local machines." "" rwho(1C)
.xx "" "flush \- flush output to a" "logical unit." "" flush(3F)
.xx "" "fseek, ftell \- reposition a file on a" "logical unit." "" fseek(3F)
.xx "" "getc, fgetc \- get a character from a" "logical unit." "" getc(3F)
.xx "" "putc, fputc \- write a character to a FORTRAN" "logical unit." "" putc(3F)
.xx "" "lockscreen \- maintain window context until ``" "login''." "" lockscreen(1)
.xx "" "rlogin \- remote" "login." "" rlogin(1C)
.xx "" "" "login \- sign on." "" login(1)
.xx "" "ac \-" "login accounting." "" ac(8)
.xx "" "" "login: login new user." "" csh(1)
.xx "" "getlog \- get user's" "login name." "" getlog(3F)
.xx "" "getlogin \- get" "login name." "" getlogin(3)
.xx "" "login:" "login new user." "" csh(1)
.xx "" "/., break, continue, cd, eval, exec, exit, export," "login, newgrp, read, readonly, set, shift, times,/" "" sh(1)
.xx "" "passwd \- change" "login password." "" passwd(1)
.xx "" "utmp, wtmp \-" "login records." "" utmp(5)
.xx "" "rlogind \- remote" "login server." "" rlogind(8C)
.xx "" "chsh \- change default" "login shell." "" chsh(1)
.xx "" "last \- indicate last" "logins of users and teletypes." "" last(1)
.xx "" "bsuncube \- view 3-D Sun" "logo." "" bsuncube(6)
.xx "" "" "logout: end session." "" csh(1)
.xx "" "setjmp," "longjmp \- non-local goto." "" setjmp(3)
.xx "" "" "look \- find lines in a sorted list." "" look(1)
.xx "" "/\- make inverted index to a bibliography .br" "lookbib \- find references in a bibliography." "" indxbib(1)
.xx "" "break: exit while/foreach" "loop." "" csh(1)
.xx "" "continue: cycle in" "loop." "" csh(1)
.xx "" "end: terminate" "loop." "" csh(1)
.xx "" "foreach:" "loop over list of names." "" csh(1)
.xx "" "lo \- software" "loopback network interface." "" lo(4)
.xx "library." "" "lorder \- find ordering relation for an object" "" lorder(1)
.xx "" "" "lpc \- line printer control program." "" lpc(8)
.xx "" "" "lpd \- line printer daemon." "" lpd(8)
.xx "" "" "lpq \- spool queue examination program." "" lpq(1)
.xx "" "" "lpr \- off line print." "" lpr(1)
.xx "queue." "" "lprm \- remove jobs from the line printer spooling" "" lprm(1)
.xx "" "" "ls \- list contents of directory." "" ls(1)
.xx "" "" "lseek, tell \- move read/write pointer." "" lseek(2)
.xx "" "bit \- and, or, xor, not, rshift," "lshift, bic, bis, bit, setbit functions." "" bit(3F)
.xx "" "stat," "lstat, fstat \- get file status." "" stat(2)
.xx "" "stat," "lstat, fstat \- get file status." "" stat(3F)
.xx "" "time, ctime," "ltime, gmtime \- return system time." "" time(3F)
.xx "" "" "m4 \- macro processor." "" m4(1)
.xx "" "sun \- is current" "machine a sun workstation." "" sun(1)
.xx "" "vax \- is current" "machine a vax." "" vax(1)
.xx "" "bk \- line discipline for machine-" "machine communication." "" bk(4)
.xx "" "bk \- line discipline for" "machine-machine communication." "" bk(4)
.xx "" "ruptime \- show host status of local" "machines." "" ruptime(1C)
.xx "" "rwho \- who's logged in on local" "machines." "" rwho(1C)
.xx "" "m4 \-" "macro processor." "" m4(1)
.xx "" "alias: shell" "macros." "" csh(1)
.xx "" "toascii \- character classification and conversion" "macros." "/isascii, isgraph, toupper, tolower," ctype(3)
.xx "" "ms \- text formatting" "macros." "" ms(7)
.xx "" "me \-" "macros for formatting papers." "" me(7)
.xx "" "man \-" "macros to typeset manual." "" man(7)
.xx "\- multiple precision integer arithmetic." "itom," "madd, msub, mult, mdiv, min, mout, pow, gcd, rpow" "" mp(3X)
.xx "" "tp \- DEC/" "mag tape formats." "" tp(5)
.xx "" "mtio \- UNIX system" "magnetic tape interface." "" mtio(4)
.xx "" "mt \-" "magnetic tape manipulating program." "" mt(1)
.xx "" "rastrepl \-" "magnify a raster image by 2 times." "" rastrepl(1)
.xx "" "rmt \- remote" "magtape protocol module." "" rmt(8C)
.xx "" "mail \- send and receive" "mail." "" mail(1)
.xx "" "prmail \- print out waiting" "mail." "" prmail(1)
.xx "" "recnews \- receive unprocessed articles via" "mail." "" recnews(1)
.xx "" "recnews \- receive unprocessed articles via" "mail." "" recnews(8)
.xx "" "sendnews \- send news articles via" "mail." "" sendnews(8)
.xx "" "\- encode/decode a binary file for transmission via" "mail." "uuencode,uudecode" uuencode(1C)
.xx "" "uurec \- receive processed news articles via" "mail." "" uurec(8)
.xx "" "xsend, xget, enroll \- secret" "mail." "" xsend(1)
.xx "" "" "mail \- send and receive mail." "" mail(1)
.xx "" "/bin/" "mail \- send or receive mail among users." "" binmail(1)
.xx "" "mailaddr \-" "mail addressing description." "" mailaddr(7)
.xx "" "biff \-" "mail alarm." "" biff(1)
.xx "" "newaliases \- rebuild the data base for the" "mail aliases file." "" newaliases(8)
.xx "" "/bin/mail \- send or receive" "mail among users." "" binmail(1)
.xx "" "from \- who is my" "mail from?." "" from(1)
.xx "" "sendmail \- send" "mail over the internet." "" sendmail(8)
.xx "" "rmail \- handle remote" "mail received via uucp." "" rmail(8)
.xx "" "" "mailaddr \- mail addressing description." "" mailaddr(7)
.xx "" "mem, kmem, mbmem, mbio, vme16, vme24 \-" "main memory and bus I/O space." "" mem(4S)
.xx "" "make \-" "maintain program groups." "" make(1)
.xx "" "lockscreen \-" "maintain window context until ``login''." "" lockscreen(1)
.xx "" "ar \- archive and library" "maintainer." "" ar(1)
.xx "" "intro \- introduction to system" "maintenance and operation commands." "" intro(8)
.xx "" "" "make \- maintain program groups." "" make(1)
.xx "" "delta \-" "make a delta (change) to an SCCS file." "" delta(1)
.xx "" "mkdir \-" "make a directory." "" mkdir(1)
.xx "" "mkdir \-" "make a directory file." "" mkdir(2)
.xx "" "link \-" "make a hard link to a file." "" link(2)
.xx "" "link, symlnk \-" "make a link to an existing file." "" link(3F)
.xx "" "mknod \-" "make a special file." "" mknod(2)
.xx "" "mktemp \-" "make a unique file name." "" mktemp(3)
.xx "\- find references in a bibliography." "indxbib \-" "make inverted index to a bibliography .br lookbib" "" indxbib(1)
.xx "" "ln \-" "make links." "" ln(1)
.xx "" "symlink \-" "make symbolic link to a file." "" symlink(2)
.xx "" "syslog \-" "make system log entry." "" syslog(1)
.xx "" "MAKEDEV \-" "make system special files." "" makedev(8)
.xx "" "script \-" "make typescript of terminal session." "" script(1)
.xx "" "" "MAKEDEV \- make system special files." "" makedev(8)
.xx "" "" "makekey \- generate encryption key." "" makekey(8)
.xx "valloc, .if n .ti +0.5i alloca, malloc_debug,/" "" "malloc, free, realloc, calloc, cfree, memalign," "" malloc(3)
.xx "" "/cfree, memalign, valloc, .if n .ti +0.5i alloca," "malloc_debug, malloc_verify .if t .ti +0.5i \-/" "" malloc(3)
.xx "" "/valloc, .if n .ti +0.5i alloca, malloc_debug," "malloc_verify .if t .ti +0.5i \- memory allocator." "" malloc(3)
.xx "" "" "man \- macros to typeset manual." "" man(7)
.xx "information by keywords." "" "man \- print out manual pages; find manual" "" man(1)
.xx "" "shift:" "manipulate argument list." "" csh(1)
.xx "" "quota \-" "manipulate disk quotas." "" quota(2)
.xx "" "route \- manually" "manipulate the routing tables." "" route(8C)
.xx "" "mt \- magnetic tape" "manipulating program." "" mt(1)
.xx "" "inet_netof, inet_ntoa \- Internet address" "manipulation." "/inet_makeaddr, inet_lnaof," inet(3N)
.xx "" "frexp, ldexp, modf \- split into" "mantissa and exponent." "" frexp(3)
.xx "" "catman \- create the cat files for the" "manual." "" catman(8)
.xx "" "man \- macros to typeset" "manual." "" man(7)
.xx "" "whereis \- locate source, binary, and/or" "manual for program." "" whereis(1)
.xx "" "man \- print out manual pages; find" "manual information by keywords." "" man(1)
.xx "" "man \- print out" "manual pages; find manual information by keywords." "" man(1)
.xx "" "route \-" "manually manipulate the routing tables." "" route(8C)
.xx "" "tee \- copy standard output to" "many files." "" tee(1)
.xx "" "umask: change or display file creation" "mask." "" csh(1)
.xx "" "sigsetmask \- set current signal" "mask." "" sigsetmask(2)
.xx "" "umask \- set file creation mode" "mask." "" umask(2)
.xx "" "mkstr \- create an error message file by" "massaging C source." "" mkstr(1)
.xx "" "intro \- introduction to" "mathematical library functions." "" intro(3M)
.xx "" "eqn, neqn, checkeq \- typeset" "mathematics." "" eqn(1)
.xx "" "getrlimit, setrlimit \- control" "maximum system resource consumption." "" getrlimit(2)
.xx "" "vlimit \- control" "maximum system resource consumption." "" vlimit(3C)
.xx "" "" "mb \- Multibus." "" mb(4S)
.xx "space." "mem, kmem, mbmem," "mbio, vme16, vme24 \- main memory and bus I/O" "" mem(4S)
.xx "I/O space." "mem, kmem," "mbmem, mbio, vme16, vme24 \- main memory and bus" "" mem(4S)
.xx "" "ec \- 3Com 10" "Mb/s Ethernet interface." "" ec(4S)
.xx "" "ie \- Sun-2 10" "Mb/s Ethernet interface." "" ie(4S)
.xx "" "en \- Sun 3" "Mb/s experimental Ethernet interface." "" en(4S)
.xx "" "as \-" "mc68000 assembler." "" as(1)
.xx "precision integer/" "itom, madd, msub, mult," "mdiv, min, mout, pow, gcd, rpow \- multiple" "" mp(3X)
.xx "" "" "me \- macros for formatting papers." "" me(7)
.xx "" "bcd \- convert to antique" "media." "" bcd(6)
.xx "and bus I/O space." "" "mem, kmem, mbmem, mbio, vme16, vme24 \- main memory" "" mem(4S)
.xx "" "malloc, free, realloc, calloc, cfree," "memalign, valloc, .if n .ti +0.5i alloca,/" "" malloc(3)
.xx "" "groups \- show group" "memberships." "" groups(1)
.xx "" "mmap \- map pages of" "memory." "" mmap(2)
.xx "" "munmap \- unmap pages of" "memory." "" munmap(2)
.xx "" "malloc_debug, malloc_verify .if t .ti +0.5i \-" "memory allocator." "/valloc, .if n .ti +0.5i alloca," malloc(3)
.xx "" "valloc \- aligned" "memory allocator." "" valloc(3)
.xx "" "mem, kmem, mbmem, mbio, vme16, vme24 \- main" "memory and bus I/O space." "" mem(4S)
.xx "" "vfork \- spawn new process in a virtual" "memory efficient way." "" vfork(2)
.xx "" "abort \- terminate abruptly with" "memory image." "" abort(3F)
.xx "" "core \- format of" "memory image file." "" core(5)
.xx "" "vmstat \- report virtual" "memory statistics." "" vmstat(8)
.xx "" "imemtest \- stand alone" "memory test." "" imemtest(8s)
.xx "" "sail \- multi-user wooden ships and iron" "men." "" sail(6)
.xx "" "sort \- sort or" "merge files." "" sort(1)
.xx "" "pmerge \- pascal file" "merger." "" pmerge(1)
.xx "" "" "mesg \- permit or deny messages." "" mesg(1)
.xx "" "mkstr \- create an error" "message file by massaging C source." "" mkstr(1)
.xx "" "recv, recvfrom, recvmsg \- receive a" "message from a socket." "" recv(2)
.xx "" "send, sendto, sendmsg \- send a" "message from a socket." "" send(2)
.xx "" "icmp \- Internet Control" "Message Protocol." "" icmp(4P)
.xx "" "error \- analyze and disperse compiler error" "messages." "" error(1)
.xx "" "mesg \- permit or deny" "messages." "" mesg(1)
.xx "" "sys_errlist, sys_nerr, errno \- system error" "messages." "perror," perror(3)
.xx "" "perror, gerror, ierrno \- get system error" "messages." "" perror(3F)
.xx "" "psignal, sys_siglist \- system signal" "messages." "" psignal(3)
.xx "" "syslog \- log systems" "messages." "" syslog(8)
.xx "" "dmesg \- collect system diagnostic" "messages to form error log." "" dmesg(8)
.xx "" "perfmeter \-" "meter display of system performance values." "" perfmeter(1)
.xx "" "skyversion \- print the SKYFFP board" "microcode version number ." "" skyversion(8)
.xx "" "" "mille \- play Mille Bornes." "" mille(6)
.xx "" "mille \- play" "Mille Bornes." "" mille(6)
.xx "integer arithmetic." "itom, madd, msub, mult, mdiv," "min, mout, pow, gcd, rpow \- multiple precision" "" mp(3X)
.xx "pages." "" "miscellaneous \- miscellaneous useful information" "" intro(7)
.xx "" "miscellaneous \-" "miscellaneous useful information pages." "" intro(7)
.xx "" "" "mkdir \- make a directory." "" mkdir(1)
.xx "" "" "mkdir \- make a directory file." "" mkdir(2)
.xx "" "" "mkfs \- construct a file system." "" mkfs(8)
.xx "" "" "mknod \- build special file." "" mknod(8)
.xx "" "" "mknod \- make a special file." "" mknod(2)
.xx "" "" "mkproto \- construct a prototype file system." "" mkproto(8)
.xx "C source." "" "mkstr \- create an error message file by massaging" "" mkstr(1)
.xx "" "" "mktemp \- make a unique file name." "" mktemp(3)
.xx "" "" "mmap \- map pages of memory." "" mmap(2)
.xx "" "chmod \- change" "mode." "" chmod(1)
.xx "" "getty  \- set terminal" "mode." "" getty(8)
.xx "" "umask \- set file creation" "mode mask." "" umask(2)
.xx "" "chmod \- change" "mode of a file." "" chmod(3F)
.xx "" "chmod, fchmod \- change" "mode of file." "" chmod(2)
.xx "" "frexp, ldexp," "modf \- split into mantissa and exponent." "" frexp(3)
.xx "" "touch \- update date last" "modified of a file." "" touch(1)
.xx "recovery." "eyacc \-" "modified yacc allowing much improved error" "" eyacc(1)
.xx "" "rmt \- remote magtape protocol" "module." "" rmt(8C)
.xx "" "monitor, monstartup," "moncontrol \- prepare execution profile." "" monitor(3)
.xx "execution profile." "" "monitor, monstartup, moncontrol \- prepare" "" monitor(3)
.xx "" "bdemos \- demonstrate Sun" "Monochrome Bitmap Display." "" bdemos(6)
.xx "" "" "monop \- Monopoly game." "" monop(6)
.xx "" "monop \-" "Monopoly game." "" monop(6)
.xx "profile." "monitor," "monstartup, moncontrol \- prepare execution" "" monitor(3)
.xx "" "" "more, page \- browse through a text file." "" more(1)
.xx "" "curses \- screen functions with ``optimal'' cursor" "motion." "" curses(3X)
.xx "" "col \- filter reverse paper" "motions." "" col(1)
.xx "" "mount, umount \-" "mount and dismount file system." "" mount(8)
.xx "" "mount, umount \-" "mount or remove file system." "" mount(2)
.xx "" "" "mount, umount \- mount and dismount file system." "" mount(8)
.xx "" "" "mount, umount \- mount or remove file system." "" mount(2)
.xx "" "mtab \-" "mounted file system table." "" mtab(5)
.xx "" "mouse \- Sun" "mouse." "" mouse(4S)
.xx "" "" "mouse \- Sun mouse." "" mouse(4S)
.xx "arithmetic." "itom, madd, msub, mult, mdiv, min," "mout, pow, gcd, rpow \- multiple precision integer" "" mp(3X)
.xx "graphics/" "openpl, erase, label, line, circle, arc," "move, cont, point, linemod, space, closepl \-" "" plot(3X)
.xx "" "mv \-" "move or rename files." "" mv(1)
.xx "" "lseek, tell \-" "move read/write pointer." "" lseek(2)
.xx "" "" "ms \- text formatting macros." "" ms(7)
.xx "multiple precision integer arithmetic." "itom, madd," "msub, mult, mdiv, min, mout, pow, gcd, rpow \-" "" mp(3X)
.xx "" "" "mt \- magnetic tape manipulating program." "" mt(1)
.xx "" "" "mtab \- mounted file system table." "" mtab(5)
.xx "interface." "" "mti \- Systech MTI-800/1600 multi-terminal" "" mti(4S)
.xx "" "mti \- Systech" "MTI-800/1600 multi-terminal interface." "" mti(4S)
.xx "" "" "mtio \- UNIX system magnetic tape interface." "" mtio(4)
.xx "" "eyacc \- modified yacc allowing" "much improved error recovery." "" eyacc(1)
.xx "precision integer arithmetic." "itom, madd, msub," "mult, mdiv, min, mout, pow, gcd, rpow \- multiple" "" mp(3X)
.xx "" "mb \-" "Multibus." "" mb(4S)
.xx "" "pr \- print file(s), possibly in" "multiple columns." "" pr(1)
.xx "" "msub, mult, mdiv, min, mout, pow, gcd, rpow \-" "multiple precision integer arithmetic." "itom, madd," mp(3X)
.xx "" "select \- synchronous I/O" "multiplexing." "" select(2)
.xx "" "fsplit \- split a" "multi-routine Fortran file into individual files." "" fsplit(1)
.xx "" "mti \- Systech MTI-800/1600" "multi-terminal interface." "" mti(4S)
.xx "" "sail \-" "multi-user wooden ships and iron men." "" sail(6)
.xx "" "switch:" "multi-way command branch." "" csh(1)
.xx "" "" "munmap \- unmap pages of memory." "" munmap(2)
.xx "" "" "mv \- move or rename files." "" mv(1)
.xx "" "from \- who is" "my mail from?." "" from(1)
.xx "" "/free, realloc, calloc, cfree, memalign, valloc, .if" "n .ti +0.5i alloca, malloc_debug, malloc_verify .if/" "" malloc(3)
.xx "" "getenv \- value for environment" "name." "" getenv(3)
.xx "" "getlog \- get user's login" "name." "" getlog(3F)
.xx "" "getlogin \- get login" "name." "" getlogin(3)
.xx "" "getsockname \- get socket" "name." "" getsockname(2)
.xx "" "mktemp \- make a unique file" "name." "" mktemp(3)
.xx "" "pwd \- print working directory" "name." "" pwd(1)
.xx "" "tty \- get terminal" "name." "" tty(1)
.xx "" "hosts \- host" "name data base." "" hosts(5)
.xx "" "networks \- network" "name data base." "" networks(5)
.xx "" "protocols \- protocol" "name data base." "" protocols(5)
.xx "" "services \- service" "name data base." "" services(5)
.xx "" "tmpnam \- create a" "name for a temporary file." "" tmpnam(3C)
.xx "" "getpw \- get" "name from uid." "" getpw(3)
.xx "" "nlist \- get entries from" "name list." "" nlist(3)
.xx "" "nm \- print" "name list." "" nm(1)
.xx "" "rename \- change the" "name of a file." "" rename(2)
.xx "" "ttyname, isatty, ttyslot \- find" "name of a terminal." "" ttyname(3)
.xx "" "ttynam, isatty \- find" "name of a terminal port." "" ttynam(3F)
.xx "" "getpeername \- get" "name of connected peer." "" getpeername(2)
.xx "" "getdomainname, setdomainname \- get/set" "name of current domain." "" getdomainname(2)
.xx "" "domainname \- set or display" "name of current domain system." "" domainname(1)
.xx "" "gethostname, sethostname \- get/set" "name of current host." "" gethostname(2)
.xx "" "hostnm \- get" "name of current host." "" hostnm(3F)
.xx "" "hostname \- set or print" "name of current host system." "" hostname(1)
.xx "" "bind \- bind a" "name to a socket." "" bind(2)
.xx "" "foreach: loop over list of" "names." "" csh(1)
.xx "" "ncheck \- generate" "names from i-numbers." "" ncheck(8)
.xx "" "" "ncheck \- generate names from i-numbers." "" ncheck(8)
.xx "" "" "nd \- network disk control." "" nd(8C)
.xx "" "" "nd \- network disk driver." "" nd(4P)
.xx "" "eqn," "neqn, checkeq \- typeset mathematics." "" eqn(1)
.xx "" "" "netstat \- show network status." "" netstat(8)
.xx "" "\- check if user has news on the USENET news" "network." "checknews" checknews(1)
.xx "" "ntohl, ntohs \- convert values between host and" "network byte order." "htonl, htons," byteorder(3N)
.xx "" "ping \-" "network debugging." "" ping(8)
.xx "" "nd \-" "network disk control." "" nd(8C)
.xx "" "nd \-" "network disk driver." "" nd(4P)
.xx "" "getnetbyname, setnetent, endnetent \- get" "network entry." "getnetent, getnetbyaddr," getnetent(3N)
.xx "" "gethostbyname, sethostent, endhostent \- get" "network host entry." "gethostent, gethostbyaddr," gethostent(3N)
.xx "" "lo \- software loopback" "network interface." "" lo(4)
.xx "" "ifconfig \- configure" "network interface parameters." "" ifconfig(8C)
.xx "" "if \- general properties of" "network interfaces." "" if(4N)
.xx "" "intro \- introduction to" "network library functions." "" intro(3N)
.xx "" "networks \-" "network name data base." "" networks(5)
.xx "" "news \- USENET" "network news article, utility files." "" news(5)
.xx "" "routing \- system supporting for local" "network packet routing." "" routing(4N)
.xx "" "routed \-" "network routing daemon." "" routed(8C)
.xx "" "netstat \- show" "network status." "" netstat(8)
.xx "" "" "networks \- network name data base." "" networks(5)
.xx "" "creat \- create a" "new file." "" creat(2)
.xx "" "\- open a file for reading or writing, or create a" "new file." "open" open(2)
.xx "" "newfs \- construct a" "new file system." "" newfs(8)
.xx "" "fork \- create a" "new process." "" fork(2)
.xx "" "vfork \- spawn" "new process in a virtual memory efficient way." "" vfork(2)
.xx "" "login: login" "new user." "" csh(1)
.xx "" "adduser \- procedure for adding" "new users." "" adduser(8)
.xx "aliases file." "" "newaliases \- rebuild the data base for the mail" "" newaliases(8)
.xx "" "" "newfs \- construct a new file system." "" newfs(8)
.xx "" "/continue, cd, eval, exec, exit, export, login," "newgrp, read, readonly, set, shift, times, trap,/" "" sh(1)
.xx "" "" "news \- USENET network news article, utility files." "" news(5)
.xx "" "news \- USENET network" "news article, utility files." "" news(5)
.xx "" "expire \- remove outdated" "news articles." "" expire(8)
.xx "" "inews \- submit" "news articles." "" inews(1)
.xx "" "postnews \- submit" "news articles." "" postnews(1)
.xx "" "readnews \- read" "news articles." "" readnews(1)
.xx "" "sendnews \- send" "news articles via mail." "" sendnews(8)
.xx "" "uurec \- receive processed" "news articles via mail." "" uurec(8)
.xx "" "checknews \- check if user has news on the USENET" "news network." "" checknews(1)
.xx "" "checknews \- check if user has" "news on the USENET news network." "" checknews(1)
.xx "checknews." "" "newsrc \- information file for readnews and" "" newsrc(5)
.xx "" "dbminit, fetch, store, delete, firstkey," "nextkey \- data base subroutines." "" dbm(3X)
.xx "" "gettable \- get" "NIC format host tables from a host ." "" gettable(8C)
.xx "" "htable \- convert" "NIC standard format host tables." "" htable(8)
.xx "" "" "nice \- set program priority." "" nice(3C)
.xx "" "vgrind \- grind" "nice listings of programs." "" vgrind(1)
.xx "only)." "" "nice, nohup \- run a command at low priority (sh" "" nice(1)
.xx "" "" "nice: run low priority process." "" csh(1)
.xx "" "" "nlist \- get entries from name list." "" nlist(3)
.xx "" "" "nm \- print name list." "" nm(1)
.xx "" "clri \- clear i-" "node." "" clri(8)
.xx "" "nice," "nohup \- run a command at low priority (sh only)." "" nice(1)
.xx "" "" "nohup: run command immune to hangups." "" csh(1)
.xx "" "setjmp, longjmp \-" "non-local goto." "" setjmp(3)
.xx "functions." "bit \- and, or, xor," "not, rshift, lshift, bic, bis, bit, setbit" "" bit(3F)
.xx "" "notify: request immediate" "notification." "" csh(1)
.xx "" "" "notify: request immediate notification." "" csh(1)
.xx "relationships of screens." "adjacentscreens \-" "notify the window driver of the physical" "" adjacentscreens(1)
.xx "" "term \- terminal driving tables for" "nroff." "" term(5)
.xx "" "" "nroff \- text formatting and typesetting." "" nroff(1)
.xx "" "soelim \- eliminate \&.so's from" "nroff input." "" soelim(1)
.xx "" "tbl \- format tables for" "nroff or troff." "" tbl(1)
.xx "" "colcrt \- filter" "nroff output for CRT previewing." "" colcrt(1)
.xx "" "deroff \- remove" "nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "checknr \- check" "nroff/troff files." "" checknr(1)
.xx "network byte order." "htonl, htons," "ntohl, ntohs \- convert values between host and" "" byteorder(3N)
.xx "byte order." "htonl, htons, ntohl," "ntohs \- convert values between host and network" "" byteorder(3N)
.xx "" "" "null \- data sink." "" null(4)
.xx "" "\- get the file descriptor of an external unit" "number." "getfd" getfd(3F)
.xx "" "\- print the SKYFFP board microcode version" "number ." "skyversion" skyversion(8)
.xx "" "" "number \- convert Arabic numerals to English." "" number(6)
.xx "" "phones \- remote host phone" "number data base." "" phones(5)
.xx "" "arithmetic \- provide drill in" "number facts." "" arithmetic(6)
.xx "" "rand, srand \- random" "number generator." "" rand(3C)
.xx "" "/srandom, initstate, setstate \- better random" "number generator; routines for changing generators." "" random(3)
.xx "" "atof, atoi, atol \- convert ASCII to" "numbers." "" atof(3)
.xx "" "intro \- introduction to system calls and error" "numbers." "" intro(2)
.xx "" "ncheck \- generate names from i-" "numbers." "" ncheck(8)
.xx "" "number \- convert Arabic" "numerals to English." "" number(6)
.xx "" "idate, itime \- return date or time in" "numerical form." "" idate(3F)
.xx "" "twrite, trewin, tskipf, tstate \- f77 tape I/" "O." "topen, tclose, tread," topen(3F)
.xx "" "loc \- return the address of an" "object." "" loc(3F)
.xx "" "long, short \- integer" "object conversion." "" long(3F)
.xx "" "size \- size of an" "object file." "" size(1)
.xx "" "lorder \- find ordering relation for an" "object library." "" lorder(1)
.xx "" "strings \- find printable strings in an" "object, or other binary, file." "" strings(1)
.xx "" "index, rindex, lnblnk, len \- tell about character" "objects." "" index(3F)
.xx "" "" "oct \- Central Data octal serial card." "" oct(4S)
.xx "" "od \-" "octal, decimal, hex, ascii dump." "" od(1)
.xx "" "oct \- Central Data" "octal serial card." "" oct(4S)
.xx "" "" "od \- octal, decimal, hex, ascii dump." "" od(1)
.xx "" "acct \- turn accounting on or" "off." "" acct(2)
.xx "" "login \- sign" "on." "" login(1)
.xx "" "" "onintr: process interrupts in command scripts." "" csh(1)
.xx "" "nice, nohup \- run a command at low priority (sh" "only)." "" nice(1)
.xx "" "a program file including aliases and paths (csh" "only)." "which \- locate" which(1)
.xx "create a new file." "" "open \- open a file for reading or writing, or" "" open(2)
.xx "file." "open \-" "open a file for reading or writing, or create a new" "" open(2)
.xx "" "fopen, freopen, fdopen \-" "open a stream." "" fopen(3S)
.xx "" "flock \- apply or remove an advisory lock on an" "open file." "" flock(2)
.xx "closedir \- directory operations." "" "opendir, readdir, telldir, seekdir, rewinddir," "" directory(3)
.xx "" "syslog," "openlog, closelog \- control system log." "" syslog(3)
.xx "cont, point, linemod, space, closepl \- graphics/" "" "openpl, erase, label, line, circle, arc, move," "" plot(3X)
.xx "" "savecore \- save a core dump of the" "operating system." "" savecore(8)
.xx "" "kgmon \- generate a dump of the" "operating system's profile buffers." "" kgmon(8)
.xx "" "intro \- introduction to system maintenance and" "operation commands." "" intro(8)
.xx "" "tgetstr, tgoto, tputs \- terminal independent" "operation routines." "tgetent, tgetnum, tgetflag," termcap(3X)
.xx "" "bcopy, bcmp, bzero, ffs \- bit and byte string" "operations." "" bstring(3)
.xx "" "telldir, seekdir, rewinddir, closedir \- directory" "operations." "opendir, readdir," directory(3)
.xx "" "dkio \- generic disk control" "operations." "" dkio(4S)
.xx "" "strcpy, strncpy, strlen, index, rindex \- string" "operations." "strcat, strncat, strcmp, strncmp," string(3)
.xx "" "join \- relational database" "operator." "" join(1)
.xx "" "getopt," "optarg, optind \- get option letter from argv." "" getopt(3C)
.xx "" "curses \- screen functions with ``" "optimal'' cursor motion." "" curses(3X)
.xx "" "getopt, optarg," "optind \- get option letter from argv." "" getopt(3C)
.xx "" "getopt, optarg, optind \- get" "option letter from argv." "" getopt(3C)
.xx "" "fcntl \- file control" "options." "" fcntl(5)
.xx "" "stty \- set terminal" "options." "" stty(1)
.xx "" "getsockopt, setsockopt \- get and set" "options on sockets." "" getsockopt(2)
.xx "" "\- convert values between host and network byte" "order." "htonl, htons, ntohl, ntohs" byteorder(3N)
.xx "" "lastcomm \- show last commands executed in reverse" "order." "" lastcomm(1)
.xx "" "lorder \- find" "ordering relation for an object library." "" lorder(1)
.xx "" "bessel functions \- of two kinds for integer" "orders." "" bessel(3F)
.xx "" "vi \- screen" "oriented (visual) display editor based on ex." "" vi(1)
.xx "" "cpio \- copy file archives in and" "out." "" cpio(1)
.xx "" "expire \- remove" "outdated news articles." "" expire(8)
.xx "" "a.out \- assembler and link editor" "output." "" a.out(5)
.xx "" "\- terminate a process after flushing any pending" "output." "exit" exit(3)
.xx "" "fread, fwrite \- buffered binary input/" "output." "" fread(3S)
.xx "" "ecvt, fcvt, gcvt \-" "output conversion." "" ecvt(3)
.xx "" "printf, fprintf, sprintf \- formatted" "output conversion." "" printf(3S)
.xx "" "fold \- fold long lines for finite width" "output device." "" fold(1)
.xx "" "colcrt \- filter nroff" "output for CRT previewing." "" colcrt(1)
.xx "" "stdio \- standard buffered input/" "output package." "" intro(3S)
.xx "" "flush \- flush" "output to a logical unit." "" flush(3F)
.xx "" "tee \- copy standard" "output to many files." "" tee(1)
.xx "" "foreach: loop" "over list of names." "" csh(1)
.xx "" "sendmail \- send mail" "over the internet." "" sendmail(8)
.xx "" "exec:" "overlay shell with specified command." "" csh(1)
.xx "" "chown \- change" "owner." "" chown(8)
.xx "" "chown, fchown \- change" "owner and group of a file." "" chown(2)
.xx "" "quot \- summarize file system" "ownership." "" quot(8)
.xx "" "" "pac \- printer/plotter accounting information." "" pac(8)
.xx "" "stdio \- standard buffered input/output" "package." "" intro(3S)
.xx "" "routing \- system supporting for local network" "packet routing." "" routing(4N)
.xx "" "more," "page \- browse through a text file." "" more(1)
.xx "" "getpagesize \- get system" "page size." "" getpagesize(2)
.xx "" "pagesize \- print system" "page size." "" pagesize(1)
.xx "" "miscellaneous \- miscellaneous useful information" "pages." "" intro(7)
.xx "" "man \- print out manual" "pages; find manual information by keywords." "" man(1)
.xx "" "mmap \- map" "pages of memory." "" mmap(2)
.xx "" "munmap \- unmap" "pages of memory." "" munmap(2)
.xx "" "" "pagesize \- print system page size." "" pagesize(1)
.xx "" "swapon \- specify additional device for" "paging and swapping." "" swapon(8)
.xx "" "drum \-" "paging device." "" drum(4)
.xx "" "vadvise \- give advice to" "paging system." "" vadvise(2)
.xx "" "swapon \- add a swap device for interleaved" "paging/swapping." "" swapon(2)
.xx "" "socketpair \- create a" "pair of connected sockets." "" socketpair(2)
.xx "" "col \- filter reverse" "paper motions." "" col(1)
.xx "" "me \- macros for formatting" "papers." "" me(7)
.xx "" "vp \- Ikon 10071-5 Versatec" "parallel printer interface." "" vp(4S)
.xx "" "ifconfig \- configure network interface" "parameters." "" ifconfig(8C)
.xx "" "\- report information about a disk's geometry and" "partitioning." "dkinfo" dkinfo(8)
.xx "" "pc \-" "Pascal compiler." "" pc(1)
.xx "" "pxref \-" "Pascal cross-reference program." "" pxref(1)
.xx "" "pxp \-" "Pascal execution profiler." "" pxp(1)
.xx "" "pmerge \-" "pascal file merger." "" pmerge(1)
.xx "" "px \-" "Pascal interpreter." "" px(1)
.xx "" "pix \-" "Pascal interpreter and executor." "" pix(1)
.xx "" "pi \-" "Pascal interpreter code translator." "" pi(1)
.xx "" "" "passwd \- change login password." "" passwd(1)
.xx "" "" "passwd \- password file." "" passwd(5)
.xx "" "getpass \- read a" "password." "" getpass(3)
.xx "" "passwd \- change login" "password." "" passwd(1)
.xx "" "passwd \-" "password file." "" passwd(5)
.xx "" "vipw \- edit the" "password file." "" vipw(8)
.xx "" "getpwuid, getpwnam, setpwent, endpwent \- get" "password file entry." "getpwent," getpwent(3)
.xx "" "getwd \- get current working directory" "pathname." "" getwd(3)
.xx "" "getcwd \- get" "pathname of current working directory." "" getcwd(3F)
.xx "" "\- locate a program file including aliases and" "paths (csh only)." "which" which(1)
.xx "" "grep, egrep, fgrep \- search a file for a" "pattern." "" grep(1)
.xx "" "awk \-" "pattern scanning and processing language." "" awk(1)
.xx "" "" "pause \- stop until signal." "" pause(3C)
.xx "" "" "pc \- Pascal compiler." "" pc(1)
.xx "" "popen," "pclose \- initiate I/O to/from a process." "" popen(3S)
.xx "" "getpeername \- get name of connected" "peer." "" getpeername(2)
.xx "" "exit \- terminate a process after flushing any" "pending output." "" exit(3)
.xx "values." "" "perfmeter \- meter display of system performance" "" perfmeter(1)
.xx "statistics." "" "perfmon \- graphical display of general system" "" perfmon(1)
.xx "" "perfmeter \- meter display of system" "performance values." "" perfmeter(1)
.xx "" "crontab \- table of times to run" "periodic jobs." "" crontab(5)
.xx "" "mesg \-" "permit or deny messages." "" mesg(1)
.xx "" "ptx \-" "permuted index." "" ptx(1)
.xx "" "limit: alter" "per-process resource limitations." "" csh(1)
.xx "messages." "" "perror, gerror, ierrno \- get system error" "" perror(3F)
.xx "error messages." "" "perror, sys_errlist, sys_nerr, errno \- system" "" perror(3)
.xx "" "sticky \- executable files with" "persistent text." "" sticky(8)
.xx "" "phones \- remote host" "phone number data base." "" phones(5)
.xx "" "" "phones \- remote host phone number data base." "" phones(5)
.xx "" "pti \-" "phototypesetter interpreter." "" pti(1)
.xx "" "adjacentscreens \- notify the window driver of the" "physical relationships of screens." "" adjacentscreens(1)
.xx "" "" "pi \- Pascal interpreter code translator." "" pi(1)
.xx "" "split \- split a file into" "pieces." "" split(1)
.xx "" "" "ping \- network debugging." "" ping(8)
.xx "channel." "" "pipe \- create an interprocess communication" "" pipe(2)
.xx "" "" "pix \- Pascal interpreter and executor." "" pix(1)
.xx "" "bg:" "place job in background." "" csh(1)
.xx "" "fish \-" "play ``Go Fish''." "" fish(6)
.xx "" "mille \-" "play Mille Bornes." "" mille(6)
.xx "" "boggle \-" "play the game of boggle." "" boggle(6)
.xx "" "worm \-" "Play the growing worm game." "" worm(6)
.xx "" "" "plot \- graphics filters." "" plot(1G)
.xx "" "" "plot \- graphics interface." "" plot(5)
.xx "" "vplot \-" "plot graphics on the Versatec." "" vplot(1)
.xx "" "pac \- printer/" "plotter accounting information." "" pac(8)
.xx "" "vpc \- Systech VPC-2200 Versatec printer/" "plotter and Centronics printer interface." "" vpc(4S)
.xx "" "" "pmerge \- pascal file merger." "" pmerge(1)
.xx "" "trpfpe, fpecnt \- trap and repair floating" "point faults." "" trpfpe(3F)
.xx "" "erase, label, line, circle, arc, move, cont," "point, linemod, space, closepl \- graphics/" "openpl," plot(3X)
.xx "" "isinf, isnan \- test for indeterminate floating" "point values." "" isinf(3)
.xx "" "lseek, tell \- move read/write" "pointer." "" lseek(2)
.xx "" "popd:" "pop shell directory stack." "" csh(1)
.xx "" "" "popd: pop shell directory stack." "" csh(1)
.xx "" "" "popen, pclose \- initiate I/O to/from a process." "" popen(3S)
.xx "" "ttynam, isatty \- find name of a terminal" "port." "" ttynam(3F)
.xx "" "ttytype \- data base of terminal types by" "port." "" ttytype(5)
.xx "" "pr \- print file(s)," "possibly in multiple columns." "" pr(1)
.xx "" "analyze \- Virtual UNIX" "postmortem crash analyzer." "" analyze(8)
.xx "" "" "postnews \- submit news articles." "" postnews(1)
.xx "" "itom, madd, msub, mult, mdiv, min, mout," "pow, gcd, rpow \- multiple precision integer/" "" mp(3X)
.xx "root." "exp, log, log10," "pow, sqrt \- exponential, logarithm, power, square" "" exp(3M)
.xx "" "log, log10, pow, sqrt \- exponential, logarithm," "power, square root." "exp," exp(3M)
.xx "" "" ".PP fonttool \- a vfont screen-font editor." "" fonttool(1)
.xx "" "" "pr \- print file(s), possibly in multiple columns." "" pr(1)
.xx "" "bc \- arbitrary-" "precision arithmetic language." "" bc(1)
.xx "" "mult, mdiv, min, mout, pow, gcd, rpow \- multiple" "precision integer arithmetic." "itom, madd, msub," mp(3X)
.xx "" "monitor, monstartup, moncontrol \-" "prepare execution profile." "" monitor(3)
.xx "" "cpp \- the C language" "preprocessor." "" cpp(1)
.xx "" "colcrt \- filter nroff output for CRT" "previewing." "" colcrt(1)
.xx "" "unget \- undo a" "previous get of an SCCS file." "" unget(1)
.xx "" "types \-" "primitive system data types." "" types(5)
.xx "" "lpr \- off line" "print." "" lpr(1)
.xx "" "fortune \-" "print a random, hopefully interesting, adage." "" fortune(6)
.xx "" "prs \-" "print an SCCS file." "" prs(1)
.xx "" "hashstat:" "print command hashing statistics." "" csh(1)
.xx "" "jobs:" "print current job list." "" csh(1)
.xx "" "sact \-" "print current SCCS file editing activity." "" sact(1)
.xx "" "pr \-" "print file(s), possibly in multiple columns." "" pr(1)
.xx "" "fpr \-" "print Fortran file." "" fpr(1)
.xx "" "history:" "print history event list." "" csh(1)
.xx "" "hostid \-" "print identifier of current host system." "" hostid(1)
.xx "" "banner \-" "print large banner on printer." "" banner(6)
.xx "" "nm \-" "print name list." "" nm(1)
.xx "" "hostname \- set or" "print name of current host system." "" hostname(1)
.xx "keywords." "man \-" "print out manual pages; find manual information by" "" man(1)
.xx "" "printenv \-" "print out the environment." "" printenv(1)
.xx "" "prmail \-" "print out waiting mail." "" prmail(1)
.xx "" "pstat \-" "print system facts." "" pstat(8)
.xx "" "pagesize \-" "print system page size." "" pagesize(1)
.xx "" "skyversion \-" "print the SKYFFP board microcode version number ." "" skyversion(8)
.xx "" "pwd \-" "print working directory name." "" pwd(1)
.xx "file." "strings \- find" "printable strings in an object, or other binary," "" strings(1)
.xx "" "" "printcap \- printer capability data base." "" printcap(5)
.xx "" "" "printenv \- print out the environment." "" printenv(1)
.xx "" "banner \- print large banner on" "printer." "" banner(6)
.xx "" "printcap \-" "printer capability data base." "" printcap(5)
.xx "" "lpc \- line" "printer control program." "" lpc(8)
.xx "" "lpd \- line" "printer daemon." "" lpd(8)
.xx "" "vp \- Ikon 10071-5 Versatec parallel" "printer interface." "" vp(4S)
.xx "" "VPC-2200 Versatec printer/plotter and Centronics" "printer interface." "vpc \- Systech" vpc(4S)
.xx "" "lprm \- remove jobs from the line" "printer spooling queue." "" lprm(1)
.xx "" "pac \-" "printer/plotter accounting information." "" pac(8)
.xx "" "vpc \- Systech VPC-2200 Versatec" "printer/plotter and Centronics printer interface." "" vpc(4S)
.xx "conversion." "" "printf, fprintf, sprintf \- formatted output" "" printf(3S)
.xx "" "setpriority \- get/set program scheduling" "priority." "getpriority," getpriority(2)
.xx "" "nice \- set program" "priority." "" nice(3C)
.xx "" "renice \- alter" "priority of running processes." "" renice(8)
.xx "" "nice: run low" "priority process." "" csh(1)
.xx "" "nice, nohup \- run a command at low" "priority (sh only)." "" nice(1)
.xx "" "" "prmail \- print out waiting mail." "" prmail(1)
.xx "" "adduser \-" "procedure for adding new users." "" adduser(8)
.xx "" "reboot \- UNIX bootstrapping" "procedures." "" reboot(8)
.xx "" "nice: run low priority" "process." "" csh(1)
.xx "" "stop: halt a job or" "process." "" csh(1)
.xx "" "_exit \- terminate a" "process." "" exit(2)
.xx "" "fork \- create a new" "process." "" fork(2)
.xx "" "fork \- create a copy of this" "process." "" fork(3F)
.xx "" "kill \- send a signal to a process, or terminate a" "process." "" kill(1)
.xx "" "kill \- send signal to a" "process." "" kill(2)
.xx "" "kill \- send a signal to a" "process." "" kill(3F)
.xx "" "popen, pclose \- initiate I/O to/from a" "process." "" popen(3S)
.xx "" "wait \- await completion of" "process." "" wait(1)
.xx "" "exit \- terminate a" "process after flushing any pending output." "" exit(3)
.xx "" "init \-" "process control initialization." "" init(8)
.xx "" "getpgrp \- get" "process group." "" getpgrp(2)
.xx "" "killpg \- send signal to a" "process group." "" killpg(2)
.xx "" "setpgrp \- set" "process group." "" setpgrp(2)
.xx "" "getpid \- get" "process id." "" getpid(3F)
.xx "" "getpid, getppid \- get" "process identification." "" getpid(2)
.xx "" "vfork \- spawn new" "process in a virtual memory efficient way." "" vfork(2)
.xx "" "onintr:" "process interrupts in command scripts." "" csh(1)
.xx "" "kill \- send a signal to a" "process, or terminate a process." "" kill(1)
.xx "" "limit: alter per-" "process resource limitations." "" csh(1)
.xx "" "ps \-" "process status." "" ps(1)
.xx "" "times \- get" "process times." "" times(3C)
.xx "" "wait \- wait for a" "process to terminate." "" wait(3F)
.xx "" "wait, wait3 \- wait for" "process to terminate or stop." "" wait(2)
.xx "" "ptrace \-" "process trace." "" ptrace(2)
.xx "" "exit \- terminate" "process with status." "" exit(3F)
.xx "" "uurec \- receive" "processed news articles via mail." "" uurec(8)
.xx "" "kill: kill jobs and" "processes." "" csh(1)
.xx "" "gcore \- get core images of running" "processes." "" gcore(1)
.xx "" "renice \- alter priority of running" "processes." "" renice(8)
.xx "" "wait: wait for background" "processes to complete." "" csh(1)
.xx "" "awk \- pattern scanning and" "processing language." "" awk(1)
.xx "" "halt \- stop the" "processor." "" halt(8)
.xx "" "m4 \- macro" "processor." "" m4(1)
.xx "" "reboot \- reboot system or halt" "processor." "" reboot(2)
.xx "" "" "prof \- display profile data." "" prof(1)
.xx "" "" "profil \- execution time profile." "" profil(2)
.xx "" "monstartup, moncontrol \- prepare execution" "profile." "monitor," monitor(3)
.xx "" "profil \- execution time" "profile." "" profil(2)
.xx "" "test coverage analysis and statement-by-statement" "profile." "tcov \- construct" tcov(1)
.xx "" "kgmon \- generate a dump of the operating system's" "profile buffers." "" kgmon(8)
.xx "" "gprof \- display call graph" "profile data." "" gprof(1)
.xx "" "prof \- display" "profile data." "" prof(1)
.xx "" "pxp \- Pascal execution" "profiler." "" pxp(1)
.xx "" "chesstool \- window-based front-end to chess" "program." "" chesstool(6)
.xx "" "end, etext, edata \- last locations in" "program." "" end(3)
.xx "" "ftp \- file transfer" "program." "" ftp(1C)
.xx "" "lpc \- line printer control" "program." "" lpc(8)
.xx "" "lpq \- spool queue examination" "program." "" lpq(1)
.xx "" "mt \- magnetic tape manipulating" "program." "" mt(1)
.xx "" "pxref \- Pascal cross-reference" "program." "" pxref(1)
.xx "" "units \- conversion" "program." "" units(1)
.xx "" "whereis \- locate source, binary, and/or manual for" "program." "" whereis(1)
.xx "" "cb \- C" "program beautifier." "" cb(1)
.xx "only)." "which \- locate a" "program file including aliases and paths (csh" "" which(1)
.xx "" "make \- maintain" "program groups." "" make(1)
.xx "" "nice \- set" "program priority." "" nice(3C)
.xx "" "getpriority, setpriority \- get/set" "program scheduling priority." "" getpriority(2)
.xx "" "indent \- indent and format C" "program source." "" indent(1)
.xx "" "assert \-" "program verification." "" assert(3)
.xx "" "lint \- a C" "program verifier." "" lint(1)
.xx "" "lex \- generator of lexical analysis" "programs." "" lex(1)
.xx "" "vgrind \- grind nice listings of" "programs." "" vgrind(1)
.xx "" "xstr \- extract strings from C" "programs to implement shared strings." "" xstr(1)
.xx "" "ftpusers \- list of users" "prohibited by ftp." "" ftpusers(5)
.xx "" "fbio \- general" "properties of frame buffers." "" fbio(4S)
.xx "" "if \- general" "properties of network interfaces." "" if(4N)
.xx "" "arp \- Address Resolution" "Protocol." "" arp(4P)
.xx "" "icmp \- Internet Control Message" "Protocol." "" icmp(4P)
.xx "" "ip \- Internet" "Protocol." "" ip(4P)
.xx "" "tcp \- Internet Transmission Control" "Protocol." "" tcp(4P)
.xx "" "telnet \- user interface to the TELNET" "protocol." "" telnet(1C)
.xx "" "udp \- Internet User Datagram" "Protocol." "" udp(4P)
.xx "" "getprotobyname, setprotoent, endprotoent \- get" "protocol entry." "getprotoent, getprotobynumber," getprotoent(3N)
.xx "" "inet \- Internet" "protocol family." "" inet(4F)
.xx "" "rmt \- remote magtape" "protocol module." "" rmt(8C)
.xx "" "protocols \-" "protocol name data base." "" protocols(5)
.xx "" "ftpd \- DARPA Internet File Transfer" "Protocol server." "" ftpd(8C)
.xx "" "telnetd \- DARPA TELNET" "protocol server." "" telnetd(8C)
.xx "" "tftpd \- DARPA Trivial File Transfer" "Protocol server." "" tftpd(8C)
.xx "" "trpt \- transliterate" "protocol trace." "" trpt(8C)
.xx "" "" "protocols \- protocol name data base." "" protocols(5)
.xx "" "mkproto \- construct a" "prototype file system." "" mkproto(8)
.xx "" "arithmetic \-" "provide drill in number facts." "" arithmetic(6)
.xx "" "false, true \-" "provide truth values." "" false(1)
.xx "" "true, false \-" "provide truth values." "" true(1)
.xx "" "" "prs \- print an SCCS file." "" prs(1)
.xx "" "" "ps \- process status." "" ps(1)
.xx "" "pty \-" "pseudo terminal driver." "" pty(4)
.xx "" "" "psignal, sys_siglist \- system signal messages." "" psignal(3)
.xx "" "" "pstat \- print system facts." "" pstat(8)
.xx "" "" "pti \- phototypesetter interpreter." "" pti(1)
.xx "" "" "ptrace \- process trace." "" ptrace(2)
.xx "" "" "ptx \- permuted index." "" ptx(1)
.xx "" "" "pty \- pseudo terminal driver." "" pty(4)
.xx "" "ungetc \-" "push character back into input stream." "" ungetc(3S)
.xx "" "pushd:" "push shell directory stack." "" csh(1)
.xx "" "" "pushd: push shell directory stack." "" csh(1)
.xx "" "puts, fputs \-" "put a string on a stream." "" puts(3S)
.xx "" "putc, putchar, fputc, putw \-" "put character or word on a stream." "" putc(3S)
.xx "logical unit." "" "putc, fputc \- write a character to a FORTRAN" "" putc(3F)
.xx "on a stream." "" "putc, putchar, fputc, putw \- put character or word" "" putc(3S)
.xx "stream." "putc," "putchar, fputc, putw \- put character or word on a" "" putc(3S)
.xx "" "" "puts, fputs \- put a string on a stream." "" puts(3S)
.xx "" "putc, putchar, fputc," "putw \- put character or word on a stream." "" putc(3S)
.xx "" "" "pwd \- print working directory name." "" pwd(1)
.xx "" "" "px \- Pascal interpreter." "" px(1)
.xx "" "" "pxp \- Pascal execution profiler." "" pxp(1)
.xx "" "" "pxref \- Pascal cross-reference program." "" pxref(1)
.xx "" "" "qsort \- quick sort." "" qsort(3F)
.xx "" "" "qsort \- quicker sort." "" qsort(3)
.xx "" "insque, remque \- insert/remove element from a" "queue." "" insque(3)
.xx "" "lprm \- remove jobs from the line printer spooling" "queue." "" lprm(1)
.xx "" "lpq \- spool" "queue examination program." "" lpq(1)
.xx "" "qsort \-" "quick sort." "" qsort(3F)
.xx "" "qsort \-" "quicker sort." "" qsort(3)
.xx "" "" "quiz \- test your knowledge." "" quiz(6)
.xx "" "" "quot \- summarize file system ownership." "" quot(8)
.xx "" "" "quota \- manipulate disk quotas." "" quota(2)
.xx "" "quota \- manipulate disk" "quotas." "" quota(2)
.xx "" "setquota \- enable/disable" "quotas on a file system." "" setquota(2)
.xx "" "" "rain \- animated raindrops display." "" rain(6)
.xx "" "rain \- animated" "raindrops display." "" rain(6)
.xx "" "" "rand, drand, irand \- return random values." "" rand(3F)
.xx "" "" "rand, srand \- random number generator." "" rand(3C)
.xx "" "fortune \- print a" "random, hopefully interesting, adage." "" fortune(6)
.xx "" "ranlib \- convert archives to" "random libraries." "" ranlib(1)
.xx "" "rand, srand \-" "random number generator." "" rand(3C)
.xx "" "random, srandom, initstate, setstate \- better" "random number generator; routines for changing/" "" random(3)
.xx "random number generator; routines for changing/" "" "random, srandom, initstate, setstate \- better" "" random(3)
.xx "" "rand, drand, irand \- return" "random values." "" rand(3F)
.xx "" "" "ranlib \- convert archives to random libraries." "" ranlib(1)
.xx "" "rastrepl \- magnify a" "raster image by 2 times." "" rastrepl(1)
.xx "" "" "rastrepl \- magnify a raster image by 2 times." "" rastrepl(1)
.xx "" "" "ratfor \- rational Fortran dialect." "" ratfor(1)
.xx "" "ratfor \-" "rational Fortran dialect." "" ratfor(1)
.xx "" "" "rc \- command script for auto-reboot and daemons." "" rc(8)
.xx "a stream to a remote command." "" "rcmd, rresvport, ruserok \- routines for returning" "" rcmd(3N)
.xx "" "" "rcp \- remote file copy." "" rcp(1C)
.xx "" "" "rdate \- set system date from a remote host." "" rdate(8)
.xx "" "getpass \-" "read a password." "" getpass(3)
.xx "" "source:" "read commands from file." "" csh(1)
.xx "" "read, readv \-" "read input." "" read(2)
.xx "" "readnews \-" "read news articles." "" readnews(1)
.xx "wait/" "/cd, eval, exec, exit, export, login, newgrp," "read, readonly, set, shift, times, trap, umask," "" sh(1)
.xx "" "" "read, readv \- read input." "" read(2)
.xx "" "readlink \-" "read value of a symbolic link." "" readlink(2)
.xx "directory operations." "opendir," "readdir, telldir, seekdir, rewinddir, closedir \-" "" directory(3)
.xx "" "open \- open a file for" "reading or writing, or create a new file." "" open(2)
.xx "" "" "readlink \- read value of a symbolic link." "" readlink(2)
.xx "" "" "readnews \- read news articles." "" readnews(1)
.xx "" "newsrc \- information file for" "readnews and checknews." "" newsrc(5)
.xx "" "/cd, eval, exec, exit, export, login, newgrp, read," "readonly, set, shift, times, trap, umask, wait \-/" "" sh(1)
.xx "" "read," "readv \- read input." "" read(2)
.xx "" "lseek, tell \- move" "read/write pointer." "" lseek(2)
.xx "" "setregid \- set" "real and effective group ID." "" setregid(2)
.xx "" "setreuid \- set" "real and effective user ID's." "" setreuid(2)
.xx "+0.5i alloca, malloc_debug,/" "malloc, free," "realloc, calloc, cfree, memalign, valloc, .if n .ti" "" malloc(3)
.xx "" "" "reboot \- reboot system or halt processor." "" reboot(2)
.xx "" "" "reboot \- UNIX bootstrapping procedures." "" reboot(8)
.xx "" "rc \- command script for auto-" "reboot and daemons." "" rc(8)
.xx "" "reboot \-" "reboot system or halt processor." "" reboot(2)
.xx "" "fastboot, fasthalt \-" "reboot/halt the system without checking the disks." "" fastboot(8)
.xx "" "newaliases \-" "rebuild the data base for the mail aliases file." "" newaliases(8)
.xx "" "recv, recvfrom, recvmsg \-" "receive a message from a socket." "" recv(2)
.xx "" "mail \- send and" "receive mail." "" mail(1)
.xx "" "/bin/mail \- send or" "receive mail among users." "" binmail(1)
.xx "" "uurec \-" "receive processed news articles via mail." "" uurec(8)
.xx "" "recnews \-" "receive unprocessed articles via mail." "" recnews(1)
.xx "" "recnews \-" "receive unprocessed articles via mail." "" recnews(8)
.xx "" "rmail \- handle remote mail" "received via uucp." "" rmail(8)
.xx "" "" "recnews \- receive unprocessed articles via mail." "" recnews(1)
.xx "" "" "recnews \- receive unprocessed articles via mail." "" recnews(8)
.xx "" "" "re_comp, re_exec \- regular expression handler." "" regex(3)
.xx "" "rehash:" "recompute command hash table." "" csh(1)
.xx "" "utmp, wtmp \- login" "records." "" utmp(5)
.xx "" "eyacc \- modified yacc allowing much improved error" "recovery." "" eyacc(1)
.xx "socket." "" "recv, recvfrom, recvmsg \- receive a message from a" "" recv(2)
.xx "socket." "recv," "recvfrom, recvmsg \- receive a message from a" "" recv(2)
.xx "" "recv, recvfrom," "recvmsg \- receive a message from a socket." "" recv(2)
.xx "" "eval:" "re-evaluate shell data." "" csh(1)
.xx "" "re_comp," "re_exec \- regular expression handler." "" regex(3)
.xx "documents." "" "refer \- find and insert literature references in" "" refer(1)
.xx "" "pxref \- Pascal cross-" "reference program." "" pxref(1)
.xx "" "index to a bibliography .br lookbib \- find" "references in a bibliography." "/\- make inverted" indxbib(1)
.xx "" "refer \- find and insert literature" "references in documents." "" refer(1)
.xx "" "re_comp, re_exec \-" "regular expression handler." "" regex(3)
.xx "" "" "rehash: recompute command hash table." "" csh(1)
.xx "" "comm \- select or" "reject lines common to two sorted files." "" comm(1)
.xx "" "lorder \- find ordering" "relation for an object library." "" lorder(1)
.xx "" "join \-" "relational database operator." "" join(1)
.xx "" "\- notify the window driver of the physical" "relationships of screens." "adjacentscreens" adjacentscreens(1)
.xx "" "sigpause \- atomically" "release blocked signals and wait for interrupt." "" sigpause(2)
.xx "" "strip \- remove symbols and" "relocation bits." "" strip(1)
.xx "" "leave \-" "remind you when you have to leave." "" leave(1)
.xx "" "calendar \-" "reminder service." "" calendar(1)
.xx "" "" "remote \- remote host description file." "" remote(5)
.xx "" "ruserok \- routines for returning a stream to a" "remote command." "rcmd, rresvport," rcmd(3N)
.xx "" "rexec \- return stream to a" "remote command." "" rexec(3N)
.xx "" "rexecd \-" "remote execution server." "" rexecd(8C)
.xx "" "rcp \-" "remote file copy." "" rcp(1C)
.xx "" "rdate \- set system date from a" "remote host." "" rdate(8)
.xx "" "uusend \- send a file to a" "remote host." "" uusend(1C)
.xx "" "remote \-" "remote host description file." "" remote(5)
.xx "" "phones \-" "remote host phone number data base." "" phones(5)
.xx "" "rlogin \-" "remote login." "" rlogin(1C)
.xx "" "rlogind \-" "remote login server." "" rlogind(8C)
.xx "" "rmt \-" "remote magtape protocol module." "" rmt(8C)
.xx "" "rmail \- handle" "remote mail received via uucp." "" rmail(8)
.xx "" "rsh \-" "remote shell." "" rsh(1C)
.xx "" "rshd \-" "remote shell server." "" rshd(8C)
.xx "" "tip, cu \- connect to a" "remote system." "" tip(1C)
.xx "" "rmdel \-" "remove a delta from an SCCS file." "" rmdel(1)
.xx "" "unlink \-" "remove a directory entry." "" unlink(3F)
.xx "" "rmdir \-" "remove a directory file." "" rmdir(2)
.xx "" "unalias:" "remove aliases." "" csh(1)
.xx "" "flock \- apply or" "remove an advisory lock on an open file." "" flock(2)
.xx "" "colrm \-" "remove columns from a file." "" colrm(1)
.xx "" "unlink \-" "remove directory entry." "" unlink(2)
.xx "" "insque, remque \- insert/" "remove element from a queue." "" insque(3)
.xx "" "unsetenv:" "remove environment variables." "" csh(1)
.xx "" "mount, umount \- mount or" "remove file system." "" mount(2)
.xx "" "lprm \-" "remove jobs from the line printer spooling queue." "" lprm(1)
.xx "" "deroff \-" "remove nroff, troff, tbl and eqn constructs." "" deroff(1)
.xx "" "expire \-" "remove outdated news articles." "" expire(8)
.xx "" "unlimit:" "remove resource limitiations." "" csh(1)
.xx "" "strip \-" "remove symbols and relocation bits." "" strip(1)
.xx "" "rmdir, rm  \-" "remove (unlink) directories or files." "" rmdir(1)
.xx "" "rm, rmdir  \-" "remove (unlink) files or directories." "" rm(1)
.xx "" "insque," "remque \- insert/remove element from a queue." "" insque(3)
.xx "" "" "rename \- change the name of a file." "" rename(2)
.xx "" "" "rename \- rename a file." "" rename(3F)
.xx "" "rename \-" "rename a file." "" rename(3F)
.xx "" "mv \- move or" "rename files." "" mv(1)
.xx "" "" "renice \- alter priority of running processes." "" renice(8)
.xx "" "\- file system consistency check and interactive" "repair." "fsck" fsck(8)
.xx "" "trpfpe, fpecnt \- trap and" "repair floating point faults." "" trpfpe(3F)
.xx "" "while:" "repeat commands conditionally." "" csh(1)
.xx "" "" "repeat: execute command repeatedly." "" csh(1)
.xx "" "uniq \- report" "repeated lines in a file." "" uniq(1)
.xx "" "repeat: execute command" "repeatedly." "" csh(1)
.xx "" "yes \- be" "repetitively affirmative." "" yes(1)
.xx "" "df \-" "report free disk space on file systems." "" df(1)
.xx "partitioning." "dkinfo \-" "report information about a disk's geometry and" "" dkinfo(8)
.xx "" "iostat \-" "report I/O statistics." "" iostat(8)
.xx "" "uniq \-" "report repeated lines in a file." "" uniq(1)
.xx "" "vmstat \-" "report virtual memory statistics." "" vmstat(8)
.xx "" "fseek, ftell \-" "reposition a file on a logical unit." "" fseek(3F)
.xx "" "fseek, ftell, rewind \-" "reposition a stream." "" fseek(3S)
.xx "" "notify:" "request immediate notification." "" csh(1)
.xx "state." "" "reset \- reset the teletype bits to a sensible" "" reset(1)
.xx "" "reset \-" "reset the teletype bits to a sensible state." "" reset(1)
.xx "" "arp \- address" "resolution display and control." "" arp(8C)
.xx "" "arp \- Address" "Resolution Protocol." "" arp(4P)
.xx "" "getrlimit, setrlimit \- control maximum system" "resource consumption." "" getrlimit(2)
.xx "" "vlimit \- control maximum system" "resource consumption." "" vlimit(3C)
.xx "" "limit: alter per-process" "resource limitations." "" csh(1)
.xx "" "unlimit: remove" "resource limitiations." "" csh(1)
.xx "" "getrusage \- get information about" "resource utilization." "" getrusage(2)
.xx "" "vtimes \- get information about" "resource utilization." "" vtimes(3C)
.xx "" "restore \- incremental file system" "restore." "" restore(8)
.xx "" "" "restore \- incremental file system restore." "" restore(8)
.xx "" "screenload \-" "restore frame buffer image." "" screenload(1)
.xx "" "suspend: suspend a shell," "resuming its superior." "" csh(1)
.xx "" "getarg, iargc \-" "return command line arguments." "" getarg(3F)
.xx "" "fdate \-" "return date and time in an ASCII string." "" fdate(3F)
.xx "" "idate, itime \-" "return date or time in numerical form." "" idate(3F)
.xx "" "etime, dtime \-" "return elapsed execution time." "" etime(3F)
.xx "" "flmin, flmax, dflmin, dflmax, inmax \-" "return extreme values." "" range(3F)
.xx "" "rand, drand, irand \-" "return random values." "" rand(3F)
.xx "" "rexec \-" "return stream to a remote command." "" rexec(3N)
.xx "" "time, ctime, ltime, gmtime \-" "return system time." "" time(3F)
.xx "" "loc \-" "return the address of an object." "" loc(3F)
.xx "" "rcmd, rresvport, ruserok \- routines for" "returning a stream to a remote command." "" rcmd(3N)
.xx "" "" "rev \- reverse lines of a file." "" rev(1)
.xx "" "rev \-" "reverse lines of a file." "" rev(1)
.xx "" "lastcomm \- show last commands executed in" "reverse order." "" lastcomm(1)
.xx "" "col \- filter" "reverse paper motions." "" col(1)
.xx "" "fseek, ftell," "rewind \- reposition a stream." "" fseek(3S)
.xx "" "opendir, readdir, telldir, seekdir," "rewinddir, closedir \- directory operations." "" directory(3)
.xx "" "" "rexec \- return stream to a remote command." "" rexec(3N)
.xx "" "" "rexecd \- remote execution server." "" rexecd(8C)
.xx "" "strcmp, strncmp, strcpy, strncpy, strlen, index," "rindex \- string operations." "strcat, strncat," string(3)
.xx "objects." "index," "rindex, lnblnk, len \- tell about character" "" index(3F)
.xx "" "" "rlogin \- remote login." "" rlogin(1C)
.xx "" "" "rlogind \- remote login server." "" rlogind(8C)
.xx "" "rmdir," "rm  \- remove (unlink) directories or files." "" rmdir(1)
.xx "" "" "rm, rmdir  \- remove (unlink) files or directories." "" rm(1)
.xx "" "" "rmail \- handle remote mail received via uucp." "" rmail(8)
.xx "" "" "rmdel \- remove a delta from an SCCS file." "" rmdel(1)
.xx "" "rm," "rmdir  \- remove (unlink) files or directories." "" rm(1)
.xx "" "" "rmdir \- remove a directory file." "" rmdir(2)
.xx "" "" "rmdir, rm  \- remove (unlink) directories or files." "" rmdir(1)
.xx "" "" "rmt \- remote magtape protocol module." "" rmt(8C)
.xx "" "chase \- Try to escape to killer" "robots." "" chase(6)
.xx "" "" "roffbib \- run off bibliographic database." "" roffbib(1)
.xx "" "pow, sqrt \- exponential, logarithm, power, square" "root." "exp, log, log10," exp(3M)
.xx "" "chroot \- change" "root directory." "" chroot(2)
.xx "" "" "route \- manually manipulate the routing tables." "" route(8C)
.xx "" "" "routed \- network routing daemon." "" routed(8C)
.xx "" "fsplit \- split a multi-" "routine Fortran file into individual files." "" fsplit(1)
.xx "" "tgoto, tputs \- terminal independent operation" "routines." "tgetent, tgetnum, tgetflag, tgetstr," termcap(3X)
.xx "" "setstate \- better random number generator;" "routines for changing generators." "/initstate," random(3)
.xx "command." "rcmd, rresvport, ruserok \-" "routines for returning a stream to a remote" "" rcmd(3N)
.xx "" "\- system supporting for local network packet" "routing." "routing" routing(4N)
.xx "packet routing." "" "routing \- system supporting for local network" "" routing(4N)
.xx "" "routed \- network" "routing daemon." "" routed(8C)
.xx "" "route \- manually manipulate the" "routing tables." "" route(8C)
.xx "" "itom, madd, msub, mult, mdiv, min, mout, pow, gcd," "rpow \- multiple precision integer arithmetic." "" mp(3X)
.xx "stream to a remote command." "rcmd," "rresvport, ruserok \- routines for returning a" "" rcmd(3N)
.xx "" "" "rsh \- remote shell." "" rsh(1C)
.xx "" "" "rshd \- remote shell server." "" rshd(8C)
.xx "" "bit \- and, or, xor, not," "rshift, lshift, bic, bis, bit, setbit functions." "" bit(3F)
.xx "" "" "rstatd \- kernel static server." "" rstatd(8C)
.xx "" "nice, nohup \-" "run a command at low priority (sh only)." "" nice(1)
.xx "" "nohup:" "run command immune to hangups." "" csh(1)
.xx "" "nice:" "run low priority process." "" csh(1)
.xx "" "roffbib \-" "run off bibliographic database." "" roffbib(1)
.xx "" "crontab \- table of times to" "run periodic jobs." "" crontab(5)
.xx "" "gcore \- get core images of" "running processes." "" gcore(1)
.xx "" "renice \- alter priority of" "running processes." "" renice(8)
.xx "" "" "ruptime \- show host status of local machines." "" ruptime(1C)
.xx "remote command." "rcmd, rresvport," "ruserok \- routines for returning a stream to a" "" rcmd(3N)
.xx "" "" "rwho \- who's logged in on local machines." "" rwho(1C)
.xx "" "" "rwhod \- system status server." "" rwhod(8C)
.xx "" "ec \- 3Com 10 Mb/" "s Ethernet interface." "" ec(4S)
.xx "" "ie \- Sun-2 10 Mb/" "s Ethernet interface." "" ie(4S)
.xx "" "en \- Sun 3 Mb/" "s experimental Ethernet interface." "" en(4S)
.xx "" "pr \- print file(" "s), possibly in multiple columns." "" pr(1)
.xx "" "" "sa, accton \- system accounting." "" sa(8)
.xx "" "" "sact \- print current SCCS file editing activity." "" sact(1)
.xx "" "" "sail \- multi-user wooden ships and iron men." "" sail(6)
.xx "" "savecore \-" "save a core dump of the operating system." "" savecore(8)
.xx "system." "" "savecore \- save a core dump of the operating" "" savecore(8)
.xx "" "brk," "sbrk \- change data segment size." "" brk(2)
.xx "" "st \- Driver for Sysgen" "SC 4000 (Archive) Tape Controller." "" st(4S)
.xx "" "scandir, alphasort \-" "scan a directory." "" scandir(3)
.xx "" "" "scandir, alphasort \- scan a directory." "" scandir(3)
.xx "conversion." "" "scanf, fscanf, sscanf \- formatted input" "" scanf(3S)
.xx "" "awk \- pattern" "scanning and processing language." "" awk(1)
.xx "" "zs \- zilog 8530" "SCC serial comunications driver." "" zs(4S)
.xx "" "" "sccs \- front end for the .SM SCCS subsystem." "" sccs(1)
.xx "" "cdc \- change the delta commentary of an" "SCCS delta." "" cdc(1)
.xx "" "comb \- combine" "SCCS deltas." "" comb(1)
.xx "" "delta \- make a delta (change) to an" "SCCS file." "" delta(1)
.xx "" "get \- get a version of an" "SCCS file." "" get(1)
.xx "" "prs \- print an" "SCCS file." "" prs(1)
.xx "" "rmdel \- remove a delta from an" "SCCS file." "" rmdel(1)
.xx "" "sccsdiff \- compare two versions of an" "SCCS file." "" sccsdiff(1)
.xx "" "sccsfile \- format of" "SCCS file." "" sccsfile(5)
.xx "" "unget \- undo a previous get of an" "SCCS file." "" unget(1)
.xx "" "val \- validate" "SCCS file." "" val(1)
.xx "" "sact \- print current" "SCCS file editing activity." "" sact(1)
.xx "" "admin \- create and administer" "SCCS files." "" admin(1)
.xx "" "sccs \- front end for the .SM" "SCCS subsystem." "" sccs(1)
.xx "" "" "sccsdiff \- compare two versions of an SCCS file." "" sccsdiff(1)
.xx "" "" "sccsfile \- format of SCCS file." "" sccsfile(5)
.xx "" "alarm \-" "schedule signal after specified time." "" alarm(3C)
.xx "" "getpriority, setpriority \- get/set program" "scheduling priority." "" getpriority(2)
.xx "" "clear \- clear workstation or terminal" "screen." "" clear(1)
.xx "" "curses \-" "screen functions with ``optimal'' cursor motion." "" curses(3X)
.xx "ex." "vi \-" "screen oriented (visual) display editor based on" "" vi(1)
.xx "" "" "screendump \- dump frame buffer image." "" screendump(1)
.xx "" ".PP fonttool \- a vfont" "screen-font editor." "" fonttool(1)
.xx "" "" "screenload \- restore frame buffer image." "" screenload(1)
.xx "" "the window driver of the physical relationships of" "screens." "adjacentscreens \- notify" adjacentscreens(1)
.xx "" "adbgen \- generate adb" "script." "" adbgen(8)
.xx "" "" "script \- make typescript of terminal session." "" script(1)
.xx "" "rc \- command" "script for auto-reboot and daemons." "" rc(8)
.xx "" "onintr: process interrupts in command" "scripts." "" csh(1)
.xx "Controllers." "" "sd \- Disk driver for Adaptec ST-506 Disk" "" sd(4S)
.xx "" "grep, egrep, fgrep \-" "search a file for a pattern." "" grep(1)
.xx "" "xsend, xget, enroll \-" "secret mail." "" xsend(1)
.xx "" "" "sed \- stream editor." "" sed(1)
.xx "operations." "opendir, readdir, telldir," "seekdir, rewinddir, closedir \- directory" "" directory(3)
.xx "" "brk, sbrk \- change data" "segment size." "" brk(2)
.xx "" "" "select \- synchronous I/O multiplexing." "" select(2)
.xx "" "comm \-" "select or reject lines common to two sorted files." "" comm(1)
.xx "" "case:" "selector in switch." "" csh(1)
.xx "" "uusend \-" "send a file to a remote host." "" uusend(1C)
.xx "" "send, sendto, sendmsg \-" "send a message from a socket." "" send(2)
.xx "" "kill \-" "send a signal to a process." "" kill(3F)
.xx "" "kill \-" "send a signal to a process, or terminate a process." "" kill(1)
.xx "" "mail \-" "send and receive mail." "" mail(1)
.xx "" "sendmail \-" "send mail over the internet." "" sendmail(8)
.xx "" "sendnews \-" "send news articles via mail." "" sendnews(8)
.xx "" "/bin/mail \-" "send or receive mail among users." "" binmail(1)
.xx "socket." "" "send, sendto, sendmsg \- send a message from a" "" send(2)
.xx "" "kill \-" "send signal to a process." "" kill(2)
.xx "" "killpg \-" "send signal to a process group." "" killpg(2)
.xx "" "aliases \- aliases file for" "sendmail." "" aliases(5)
.xx "" "" "sendmail \- send mail over the internet." "" sendmail(8)
.xx "" "send, sendto," "sendmsg \- send a message from a socket." "" send(2)
.xx "" "" "sendnews \- send news articles via mail." "" sendnews(8)
.xx "" "send," "sendto, sendmsg \- send a message from a socket." "" send(2)
.xx "" "reset \- reset the teletype bits to a" "sensible state." "" reset(1)
.xx "" "oct \- Central Data octal" "serial card." "" oct(4S)
.xx "" "zs \- zilog 8530 SCC" "serial comunications driver." "" zs(4S)
.xx "" "comsat \- biff" "server." "" comsat(8C)
.xx "" "ftpd \- DARPA Internet File Transfer Protocol" "server." "" ftpd(8C)
.xx "" "rexecd \- remote execution" "server." "" rexecd(8C)
.xx "" "rlogind \- remote login" "server." "" rlogind(8C)
.xx "" "rshd \- remote shell" "server." "" rshd(8C)
.xx "" "rstatd \- kernel static" "server." "" rstatd(8C)
.xx "" "rwhod \- system status" "server." "" rwhod(8C)
.xx "" "telnetd \- DARPA TELNET protocol" "server." "" telnetd(8C)
.xx "" "tftpd \- DARPA Trivial File Transfer Protocol" "server." "" tftpd(8C)
.xx "" "timed \- DARPA Time" "server." "" timed(8C)
.xx "" "servers \- inet" "server data base." "" servers(5)
.xx "" "" "servers \- inet server data base." "" servers(5)
.xx "" "calendar \- reminder" "service." "" calendar(1)
.xx "" "" "services \- service name data base." "" services(5)
.xx "" "inetd \- internet" "services daemon." "" inetd(8C)
.xx "" "logout: end" "session." "" csh(1)
.xx "" "script \- make typescript of terminal" "session." "" script(1)
.xx "" "ascii \- map of ASCII character" "set." "" ascii(7)
.xx "" "stty, gtty \-" "set and get terminal state." "" stty(3C)
.xx "" "sigstack \-" "set and/or get signal stack context." "" sigstack(2)
.xx "" "" "set: change value of shell variable." "" csh(1)
.xx "" "sigsetmask \-" "set current signal mask." "" sigsetmask(2)
.xx "" "gettimeofday, settimeofday \- get/" "set date and time." "" gettimeofday(2)
.xx "" "umask \-" "set file creation mode mask." "" umask(2)
.xx "" "utime \-" "set file times." "" utime(3C)
.xx "" "utimes \-" "set file times." "" utimes(2)
.xx "" "setgroups \-" "set group access list." "" setgroups(2)
.xx "" "getdomainname, setdomainname \- get/" "set name of current domain." "" getdomainname(2)
.xx "" "gethostname, sethostname \- get/" "set name of current host." "" gethostname(2)
.xx "" "getsockopt, setsockopt \- get and" "set options on sockets." "" getsockopt(2)
.xx "" "domainname \-" "set or display name of current domain system." "" domainname(1)
.xx "" "hostname \-" "set or print name of current host system." "" hostname(1)
.xx "" "setpgrp \-" "set process group." "" setpgrp(2)
.xx "" "nice \-" "set program priority." "" nice(3C)
.xx "" "getpriority, setpriority \- get/" "set program scheduling priority." "" getpriority(2)
.xx "" "setregid \-" "set real and effective group ID." "" setregid(2)
.xx "" "setreuid \-" "set real and effective user ID's." "" setreuid(2)
.xx "" "/exec, exit, export, login, newgrp, read, readonly," "set, shift, times, trap, umask, wait \- command/" "" sh(1)
.xx "" "rdate \-" "set system date from a remote host." "" rdate(8)
.xx "" "getty  \-" "set terminal mode." "" getty(8)
.xx "" "stty \-" "set terminal options." "" stty(1)
.xx "" "date \- display or" "set the date." "" date(1)
.xx "" "seteuid, setruid, setgid, setegid, setrgid \-" "set user and group ID." "setuid," setuid(3)
.xx "" "ulimit \- get and" "set user limits." "" ulimit(3C)
.xx "" "getitimer, setitimer \- get/" "set value of interval timer." "" getitimer(2)
.xx "" "setenv:" "set variable in environment." "" csh(1)
.xx "" "and, or, xor, not, rshift, lshift, bic, bis, bit," "setbit functions." "bit \-" bit(3F)
.xx "to a stream." "" "setbuf, setbuffer, setlinebuf \- assign buffering" "" setbuf(3S)
.xx "stream." "setbuf," "setbuffer, setlinebuf \- assign buffering to a" "" setbuf(3S)
.xx "" "getdomainname," "setdomainname \- get/set name of current domain." "" getdomainname(2)
.xx "" "setuid, seteuid, setruid, setgid," "setegid, setrgid \- set user and group ID." "" setuid(3)
.xx "" "" "setenv: set variable in environment." "" csh(1)
.xx "user and group ID." "setuid," "seteuid, setruid, setgid, setegid, setrgid \- set" "" setuid(3)
.xx "file/" "getfsent, getfsspec, getfsfile, getfstype," "setfsent, endfsent \- get file system descriptor" "" getfsent(3)
.xx "" "setuid, seteuid, setruid," "setgid, setegid, setrgid \- set user and group ID." "" setuid(3)
.xx "" "getgrent, getgrgid, getgrnam," "setgrent, endgrent \- get group file entry." "" getgrent(3)
.xx "" "" "setgroups \- set group access list." "" setgroups(2)
.xx "" "gethostent, gethostbyaddr, gethostbyname," "sethostent, endhostent \- get network host entry." "" gethostent(3N)
.xx "" "gethostname," "sethostname \- get/set name of current host." "" gethostname(2)
.xx "" "getitimer," "setitimer \- get/set value of interval timer." "" getitimer(2)
.xx "" "" "setjmp, longjmp \- non-local goto." "" setjmp(3)
.xx "" "crypt," "setkey, encrypt \- DES encryption." "" crypt(3)
.xx "" "setbuf, setbuffer," "setlinebuf \- assign buffering to a stream." "" setbuf(3S)
.xx "" "getnetent, getnetbyaddr, getnetbyname," "setnetent, endnetent \- get network entry." "" getnetent(3N)
.xx "" "" "setpgrp \- set process group." "" setpgrp(2)
.xx "" "getpriority," "setpriority \- get/set program scheduling priority." "" getpriority(2)
.xx "" "getprotoent, getprotobynumber, getprotobyname," "setprotoent, endprotoent \- get protocol entry." "" getprotoent(3N)
.xx "" "getpwent, getpwuid, getpwnam," "setpwent, endpwent \- get password file entry." "" getpwent(3)
.xx "" "" "setquota \- enable/disable quotas on a file system." "" setquota(2)
.xx "" "" "setregid \- set real and effective group ID." "" setregid(2)
.xx "" "" "setreuid \- set real and effective user ID's." "" setreuid(2)
.xx "" "setuid, seteuid, setruid, setgid, setegid," "setrgid \- set user and group ID." "" setuid(3)
.xx "consumption." "getrlimit," "setrlimit \- control maximum system resource" "" getrlimit(2)
.xx "group ID." "setuid, seteuid," "setruid, setgid, setegid, setrgid \- set user and" "" setuid(3)
.xx "" "getservent, getservbyport, getservbyname," "setservent, endservent \- get service entry." "" getservent(3N)
.xx "" "getsockopt," "setsockopt \- get and set options on sockets." "" getsockopt(2)
.xx "routines for changing/" "random, srandom, initstate," "setstate \- better random number generator;" "" random(3)
.xx "" "gettimeofday," "settimeofday \- get/set date and time." "" gettimeofday(2)
.xx "\- set user and group ID." "" "setuid, seteuid, setruid, setgid, setegid, setrgid" "" setuid(3)
.xx "cd, eval, exec, exit, export, login, newgrp, read,/" "" "sh, for, case, if, while, :, ., break, continue," "" sh(1)
.xx "" "nice, nohup \- run a command at low priority (" "sh only)." "" nice(1)
.xx "" "\- extract strings from C programs to implement" "shared strings." "xstr" xstr(1)
.xx "" "chsh \- change default login" "shell." "" chsh(1)
.xx "" "exit: leave" "shell." "" csh(1)
.xx "" "rsh \- remote" "shell." "" rsh(1C)
.xx "" "system \- issue a" "shell command." "" system(3)
.xx "" "csh \- a" "shell (command interpreter) with C-like syntax." "" csh(1)
.xx "" "eval: re-evaluate" "shell data." "" csh(1)
.xx "" "popd: pop" "shell directory stack." "" csh(1)
.xx "" "pushd: push" "shell directory stack." "" csh(1)
.xx "" "alias:" "shell macros." "" csh(1)
.xx "" "suspend: suspend a" "shell, resuming its superior." "" csh(1)
.xx "" "rshd \- remote" "shell server." "" rshd(8C)
.xx "" "set: change value of" "shell variable." "" csh(1)
.xx "" "@: arithmetic on" "shell variables." "" csh(1)
.xx "" "unset: discard" "shell variables." "" csh(1)
.xx "" "exec: overlay" "shell with specified command." "" csh(1)
.xx "" "" "shift: manipulate argument list." "" csh(1)
.xx "" "exit, export, login, newgrp, read, readonly, set," "shift, times, trap, umask, wait \- command/" "/exec," sh(1)
.xx "" "sail \- multi-user wooden" "ships and iron men." "" sail(6)
.xx "" "long," "short \- integer object conversion." "" long(3F)
.xx "" "groups \-" "show group memberships." "" groups(1)
.xx "" "ruptime \-" "show host status of local machines." "" ruptime(1C)
.xx "" "uptime \-" "show how long system has been up." "" uptime(1)
.xx "" "lastcomm \-" "show last commands executed in reverse order." "" lastcomm(1)
.xx "" "netstat \-" "show network status." "" netstat(8)
.xx "" "shutdown \-" "shut down part of a full-duplex connection." "" shutdown(2)
.xx "" "" "shutdown \- close down the system at a given time." "" shutdown(8)
.xx "connection." "" "shutdown \- shut down part of a full-duplex" "" shutdown(2)
.xx "" "" "sigblock \- block signals." "" sigblock(2)
.xx "" "login \-" "sign on." "" login(1)
.xx "" "pause \- stop until" "signal." "" pause(3C)
.xx "" "signal \- change the action for a" "signal." "" signal(3F)
.xx "" "" "signal \- change the action for a signal." "" signal(3F)
.xx "" "" "signal \- simplified software signal facilities." "" signal(3)
.xx "" "alarm \- schedule" "signal after specified time." "" alarm(3C)
.xx "" "signal \- simplified software" "signal facilities." "" signal(3)
.xx "" "sigvec \- software" "signal facilities." "" sigvec(2)
.xx "" "sigsetmask \- set current" "signal mask." "" sigsetmask(2)
.xx "" "psignal, sys_siglist \- system" "signal messages." "" psignal(3)
.xx "" "sigstack \- set and/or get" "signal stack context." "" sigstack(2)
.xx "" "kill \- send" "signal to a process." "" kill(2)
.xx "" "kill \- send a" "signal to a process." "" kill(3F)
.xx "" "killpg \- send" "signal to a process group." "" killpg(2)
.xx "" "kill \- send a" "signal to a process, or terminate a process." "" kill(1)
.xx "" "sigblock \- block" "signals." "" sigblock(2)
.xx "" "sigpause \- atomically release blocked" "signals and wait for interrupt." "" sigpause(2)
.xx "wait for interrupt." "" "sigpause \- atomically release blocked signals and" "" sigpause(2)
.xx "" "" "sigsetmask \- set current signal mask." "" sigsetmask(2)
.xx "" "" "sigstack \- set and/or get signal stack context." "" sigstack(2)
.xx "" "" "sigvec \- software signal facilities." "" sigvec(2)
.xx "" "signal \-" "simplified software signal facilities." "" signal(3)
.xx "trigonometric functions." "" "sin, cos, tan, asin, acos, atan, atan2 \-" "" sin(3M)
.xx "" "" "sinh, cosh, tanh \- hyperbolic functions." "" sinh(3M)
.xx "" "null \- data" "sink." "" null(4)
.xx "" "brk, sbrk \- change data segment" "size." "" brk(2)
.xx "" "getdtablesize \- get descriptor table" "size." "" getdtablesize(2)
.xx "" "getpagesize \- get system page" "size." "" getpagesize(2)
.xx "" "pagesize \- print system page" "size." "" pagesize(1)
.xx "" "" "size \- size of an object file." "" size(1)
.xx "" "size \-" "size of an object file." "" size(1)
.xx "" "skyversion \- print the" "SKYFFP board microcode version number ." "" skyversion(8)
.xx "version number ." "" "skyversion \- print the SKYFFP board microcode" "" skyversion(8)
.xx "" "" "sleep \- suspend execution for an interval." "" sleep(1)
.xx "" "" "sleep \- suspend execution for an interval." "" sleep(3F)
.xx "" "" "sleep \- suspend execution for interval." "" sleep(3)
.xx "" "sccs \- front end for the" ".SM SCCS subsystem." "" sccs(1)
.xx "" "ip \- Disk driver for Interphase 2180" "SMD Disk Controller." "" ip(4S)
.xx "" "xy \- Disk driver for Xylogics" "SMD Disk Controllers." "" xy(4S)
.xx "" "spline \- interpolate" "smooth curve." "" spline(1G)
.xx "" "" "snake, snscore \- display chase game." "" snake(6)
.xx "" "snake," "snscore \- display chase game." "" snake(6)
.xx "" "accept \- accept a connection on a" "socket." "" accept(2)
.xx "" "bind \- bind a name to a" "socket." "" bind(2)
.xx "" "connect \- initiate a connection on a" "socket." "" connect(2)
.xx "" "listen \- listen for connections on a" "socket." "" listen(2)
.xx "" "recv, recvfrom, recvmsg \- receive a message from a" "socket." "" recv(2)
.xx "" "send, sendto, sendmsg \- send a message from a" "socket." "" send(2)
.xx "" "" "socket \- create an endpoint for communication." "" socket(2)
.xx "" "getsockname \- get" "socket name." "" getsockname(2)
.xx "" "" "socketpair \- create a pair of connected sockets." "" socketpair(2)
.xx "" "getsockopt, setsockopt \- get and set options on" "sockets." "" getsockopt(2)
.xx "" "socketpair \- create a pair of connected" "sockets." "" socketpair(2)
.xx "" "" "soelim \- eliminate \&.so's from nroff input." "" soelim(1)
.xx "" "lo \-" "software loopback network interface." "" lo(4)
.xx "" "signal \- simplified" "software signal facilities." "" signal(3)
.xx "" "sigvec \-" "software signal facilities." "" sigvec(2)
.xx "" "canfield, cfscores \- the" "solitaire card game canfield." "" canfield(6)
.xx "" "qsort \- quicker" "sort." "" qsort(3)
.xx "" "qsort \- quick" "sort." "" qsort(3F)
.xx "" "tsort \- topological" "sort." "" tsort(1)
.xx "" "" "sort \- sort or merge files." "" sort(1)
.xx "" "sortbib \-" "sort bibliographic database." "" sortbib(1)
.xx "" "sort \-" "sort or merge files." "" sort(1)
.xx "" "" "sortbib \- sort bibliographic database." "" sortbib(1)
.xx "" "comm \- select or reject lines common to two" "sorted files." "" comm(1)
.xx "" "look \- find lines in a" "sorted list." "" look(1)
.xx "" "soelim \- eliminate \" "&.so's from nroff input." "" soelim(1)
.xx "" "indent \- indent and format C program" "source." "" indent(1)
.xx "" "\- create an error message file by massaging C" "source." "mkstr" mkstr(1)
.xx "" "whereis \- locate" "source, binary, and/or manual for program." "" whereis(1)
.xx "" "" "source: read commands from file." "" csh(1)
.xx "" "mbio, vme16, vme24 \- main memory and bus I/O" "space." "mem, kmem, mbmem," mem(4S)
.xx "" "line, circle, arc, move, cont, point, linemod," "space, closepl \- graphics interface." "/label," plot(3X)
.xx "" "df \- report free disk" "space on file systems." "" df(1)
.xx "" "expand, unexpand \- expand tabs to" "spaces, and vice versa." "" expand(1)
.xx "way." "vfork \-" "spawn new process in a virtual memory efficient" "" vfork(2)
.xx "" "exec: overlay shell with" "specified command." "" csh(1)
.xx "" "head \- display first few lines of" "specified files." "" head(1)
.xx "" "truncate, ftruncate \- truncate a file to a" "specified length." "" truncate(2)
.xx "" "alarm \- schedule signal after" "specified time." "" alarm(3C)
.xx "" "alarm \- execute a subroutine after a" "specified time." "" alarm(3F)
.xx "" "swapon \-" "specify additional device for paging and swapping." "" swapon(8)
.xx "" "" "spell, spellin, spellout \- find spelling errors." "" spell(1)
.xx "" "spell," "spellin, spellout \- find spelling errors." "" spell(1)
.xx "" "spell, spellin, spellout \- find" "spelling errors." "" spell(1)
.xx "" "spell, spellin," "spellout \- find spelling errors." "" spell(1)
.xx "" "" "spline \- interpolate smooth curve." "" spline(1G)
.xx "" "" "split \- split a file into pieces." "" split(1)
.xx "" "split \-" "split a file into pieces." "" split(1)
.xx "files." "fsplit \-" "split a multi-routine Fortran file into individual" "" fsplit(1)
.xx "" "frexp, ldexp, modf \-" "split into mantissa and exponent." "" frexp(3)
.xx "" "uuclean \- uucp" "spool directory clean-up." "" uuclean(8C)
.xx "" "lpq \-" "spool queue examination program." "" lpq(1)
.xx "" "lprm \- remove jobs from the line printer" "spooling queue." "" lprm(1)
.xx "" "printf, fprintf," "sprintf \- formatted output conversion." "" printf(3S)
.xx "" "exp, log, log10, pow," "sqrt \- exponential, logarithm, power, square root." "" exp(3M)
.xx "" "log10, pow, sqrt \- exponential, logarithm, power," "square root." "exp, log," exp(3M)
.xx "" "rand," "srand \- random number generator." "" rand(3C)
.xx "number generator; routines for changing/" "random," "srandom, initstate, setstate \- better random" "" random(3)
.xx "" "scanf, fscanf," "sscanf \- formatted input conversion." "" scanf(3S)
.xx "Controller." "" "st \- Driver for Sysgen SC 4000 (Archive) Tape" "" st(4S)
.xx "" "sd \- Disk driver for Adaptec" "ST-506 Disk Controllers." "" sd(4S)
.xx "" "popd: pop shell directory" "stack." "" csh(1)
.xx "" "pushd: push shell directory" "stack." "" csh(1)
.xx "" "sigstack \- set and/or get signal" "stack context." "" sigstack(2)
.xx "" "imemtest \-" "stand alone memory test." "" imemtest(8s)
.xx "" "gxtest \-" "stand alone test for the Sun video graphics board." "" gxtest(8s)
.xx "" "diag \-" "stand-alone disk initialization and diagnosis." "" diag(8s)
.xx "" "des \- encrypt/decrypt with Data Encryption" "Standard." "" des(1)
.xx "" "stdio \-" "standard buffered input/output package." "" intro(3S)
.xx "" "htable \- convert NIC" "standard format host tables." "" htable(8)
.xx "" "tee \- copy" "standard output to many files." "" tee(1)
.xx "" "" "stat, lstat, fstat \- get file status." "" stat(2)
.xx "" "" "stat, lstat, fstat \- get file status." "" stat(3F)
.xx "" "reset \- reset the teletype bits to a sensible" "state." "" reset(1)
.xx "" "stty, gtty \- set and get terminal" "state." "" stty(3C)
.xx "" "fsync \- synchronize a file's in-core" "state with that on disk." "" fsync(2)
.xx "" "if: conditional" "statement." "" csh(1)
.xx "" "construct test coverage analysis and statement-by-" "statement profile." "tcov \-" tcov(1)
.xx "" "tcov \- construct test coverage analysis and" "statement-by-statement profile." "" tcov(1)
.xx "" "" "statfs \- get file system statistics." "" statfs(2)
.xx "" "fstab \-" "static information about the filesystems." "" fstab(5)
.xx "" "rstatd \- kernel" "static server." "" rstatd(8C)
.xx "" "hashstat: print command hashing" "statistics." "" csh(1)
.xx "" "iostat \- report I/O" "statistics." "" iostat(8)
.xx "" "perfmon \- graphical display of general system" "statistics." "" perfmon(1)
.xx "" "statfs \- get file system" "statistics." "" statfs(2)
.xx "" "vmstat \- report virtual memory" "statistics." "" vmstat(8)
.xx "" "exit \- terminate process with" "status." "" exit(3F)
.xx "" "netstat \- show network" "status." "" netstat(8)
.xx "" "ps \- process" "status." "" ps(1)
.xx "" "stat, lstat, fstat \- get file" "status." "" stat(2)
.xx "" "stat, lstat, fstat \- get file" "status." "" stat(3F)
.xx "" "ferror, feof, clearerr, fileno \- stream" "status inquiries." "" ferror(3S)
.xx "" "ruptime \- show host" "status of local machines." "" ruptime(1C)
.xx "" "rwhod \- system" "status server." "" rwhod(8C)
.xx "" "" "stdio \- standard buffered input/output package." "" intro(3S)
.xx "" "" "sticky \- executable files with persistent text." "" sticky(8)
.xx "" "wait, wait3 \- wait for process to terminate or" "stop." "" wait(2)
.xx "" "" "stop: halt a job or process." "" csh(1)
.xx "" "halt \-" "stop the processor." "" halt(8)
.xx "" "pause \-" "stop until signal." "" pause(3C)
.xx "" "icheck \- file system" "storage consistency check." "" icheck(8)
.xx "subroutines." "dbminit, fetch," "store, delete, firstkey, nextkey \- data base" "" dbm(3X)
.xx "strlen, index, rindex \- string operations." "" "strcat, strncat, strcmp, strncmp, strcpy, strncpy," "" string(3)
.xx "rindex \- string operations." "strcat, strncat," "strcmp, strncmp, strcpy, strncpy, strlen, index," "" string(3)
.xx "operations." "strcat, strncat, strcmp, strncmp," "strcpy, strncpy, strlen, index, rindex \- string" "" string(3)
.xx "" "fclose, fflush \- close or flush a" "stream." "" fclose(3S)
.xx "" "fopen, freopen, fdopen \- open a" "stream." "" fopen(3S)
.xx "" "fseek, ftell, rewind \- reposition a" "stream." "" fseek(3S)
.xx "" "fgetc, getw \- get character or integer from" "stream." "getc, getchar," getc(3S)
.xx "" "gets, fgets \- get a string from a" "stream." "" gets(3S)
.xx "" "putchar, fputc, putw \- put character or word on a" "stream." "putc," putc(3S)
.xx "" "puts, fputs \- put a string on a" "stream." "" puts(3S)
.xx "" "setbuffer, setlinebuf \- assign buffering to a" "stream." "setbuf," setbuf(3S)
.xx "" "ungetc \- push character back into input" "stream." "" ungetc(3S)
.xx "" "sed \-" "stream editor." "" sed(1)
.xx "" "ferror, feof, clearerr, fileno \-" "stream status inquiries." "" ferror(3S)
.xx "" "rresvport, ruserok \- routines for returning a" "stream to a remote command." "rcmd," rcmd(3N)
.xx "" "rexec \- return" "stream to a remote command." "" rexec(3N)
.xx "" "ar \- Archive 1/4 inch" "Streaming Tape Drive." "" ar(4S)
.xx "" "fdate \- return date and time in an ASCII" "string." "" fdate(3F)
.xx "" "gets, fgets \- get a" "string from a stream." "" gets(3S)
.xx "" "puts, fputs \- put a" "string on a stream." "" puts(3S)
.xx "" "bcopy, bcmp, bzero, ffs \- bit and byte" "string operations." "" bstring(3)
.xx "" "strncmp, strcpy, strncpy, strlen, index, rindex \-" "string operations." "strcat, strncat, strcmp," string(3)
.xx "" "extract strings from C programs to implement shared" "strings." "xstr \-" xstr(1)
.xx "other binary, file." "" "strings \- find printable strings in an object, or" "" strings(1)
.xx "strings." "xstr \- extract" "strings from C programs to implement shared" "" xstr(1)
.xx "" "strings \- find printable" "strings in an object, or other binary, file." "" strings(1)
.xx "" "" "strip \- remove symbols and relocation bits." "" strip(1)
.xx "" "basename \-" "strip filename affixes." "" basename(1)
.xx "" "strcat, strncat, strcmp, strncmp, strcpy, strncpy," "strlen, index, rindex \- string operations." "" string(3)
.xx "index, rindex \- string operations." "strcat," "strncat, strcmp, strncmp, strcpy, strncpy, strlen," "" string(3)
.xx "string operations." "strcat, strncat, strcmp," "strncmp, strcpy, strncpy, strlen, index, rindex \-" "" string(3)
.xx "" "strcat, strncat, strcmp, strncmp, strcpy," "strncpy, strlen, index, rindex \- string/" "" string(3)
.xx "" "" "stty \- set terminal options." "" stty(1)
.xx "" "" "stty, gtty \- set and get terminal state." "" stty(3C)
.xx "" "" "su \- substitute user id temporarily." "" su(1)
.xx "" "inews \-" "submit news articles." "" inews(1)
.xx "" "postnews \-" "submit news articles." "" postnews(1)
.xx "" "alarm \- execute a" "subroutine after a specified time." "" alarm(3F)
.xx "" "store, delete, firstkey, nextkey \- data base" "subroutines." "dbminit, fetch," dbm(3X)
.xx "" "su \-" "substitute user id temporarily." "" su(1)
.xx "" "sccs \- front end for the .SM SCCS" "subsystem." "" sccs(1)
.xx "" "" "sum \- sum and count blocks in a file." "" sum(1)
.xx "" "sum \-" "sum and count blocks in a file." "" sum(1)
.xx "" "du \-" "summarize disk usage." "" du(1)
.xx "" "quot \-" "summarize file system ownership." "" quot(8)
.xx "" "" "sun \- is current machine a sun workstation." "" sun(1)
.xx "" "en \-" "Sun 3 Mb/s experimental Ethernet interface." "" en(4S)
.xx "" "colordemos \- demonstrate" "Sun Color Graphics Display." "" colordemos(6)
.xx "" "cons \- driver for" "Sun console." "" cons(4S)
.xx "" "fb \- driver for" "Sun console frame buffer." "" fb(4S)
.xx "" "kb \-" "Sun keyboard." "" kb(4S)
.xx "" "bsuncube \- view 3-D" "Sun logo." "" bsuncube(6)
.xx "" "bdemos \- demonstrate" "Sun Monochrome Bitmap Display." "" bdemos(6)
.xx "" "mouse \-" "Sun mouse." "" mouse(4S)
.xx "" "gxtest \- stand alone test for the" "Sun video graphics board." "" gxtest(8s)
.xx "" "win \-" "Sun window system." "" win(4S)
.xx "" "sun \- is current machine a" "sun workstation." "" sun(1)
.xx "" "bwone \-" "Sun-1 black and white frame buffer." "" bwone(4S)
.xx "" "cgone \-" "Sun-1 color graphics interface." "" cgone(4S)
.xx "" "ie \-" "Sun-2 10 Mb/s Ethernet interface." "" ie(4S)
.xx "" "bwtwo \-" "Sun-2 black and white frame buffer." "" bwtwo(4S)
.xx "" "cgtwo \-" "Sun-2 color graphics interface." "" cgtwo(4S)
.xx "" "" "suntools \- the Suntools window environment." "" suntools(1)
.xx "" "suntools \- the" "Suntools window environment." "" suntools(1)
.xx "" "sync \- update the" "super block." "" sync(1)
.xx "" "sync \- update the" "super block." "" sync(8)
.xx "" "update \- periodically update the" "super block." "" update(8)
.xx "" "sync \- update" "super-block." "" sync(2)
.xx "" "suspend: suspend a shell, resuming its" "superior." "" csh(1)
.xx "" "intro \- introduction to special files and hardware" "support." "" intro(4)
.xx "" "routing \- system" "supporting for local network packet routing." "" routing(4N)
.xx "" "suspend:" "suspend a shell, resuming its superior." "" csh(1)
.xx "" "sleep \-" "suspend execution for an interval." "" sleep(1)
.xx "" "sleep \-" "suspend execution for an interval." "" sleep(3F)
.xx "" "sleep \-" "suspend execution for interval." "" sleep(3)
.xx "" "" "suspend: suspend a shell, resuming its superior." "" csh(1)
.xx "" "" "swab \- swap bytes." "" swab(3)
.xx "" "swab \-" "swap bytes." "" swab(3)
.xx "" "swapon \- add a" "swap device for interleaved paging/swapping." "" swapon(2)
.xx "paging/swapping." "" "swapon \- add a swap device for interleaved" "" swapon(2)
.xx "swapping." "" "swapon \- specify additional device for paging and" "" swapon(8)
.xx "" "swapon \- add a swap device for interleaved paging/" "swapping." "" swapon(2)
.xx "" "swapon \- specify additional device for paging and" "swapping." "" swapon(8)
.xx "" "breaksw: exit from" "switch." "" csh(1)
.xx "" "case: selector in" "switch." "" csh(1)
.xx "" "default: catchall clause in" "switch." "" csh(1)
.xx "" "endsw: terminate" "switch." "" csh(1)
.xx "" "" "switch: multi-way command branch." "" csh(1)
.xx "" "readlink \- read value of a" "symbolic link." "" readlink(2)
.xx "" "symlink \- make" "symbolic link to a file." "" symlink(2)
.xx "" "strip \- remove" "symbols and relocation bits." "" strip(1)
.xx "" "" "symlink \- make symbolic link to a file." "" symlink(2)
.xx "" "link," "symlnk \- make a link to an existing file." "" link(3F)
.xx "" "" "sync \- update super-block." "" sync(2)
.xx "" "" "sync \- update the super block." "" sync(1)
.xx "" "" "sync \- update the super block." "" sync(8)
.xx "disk." "fsync \-" "synchronize a file's in-core state with that on" "" fsync(2)
.xx "" "select \-" "synchronous I/O multiplexing." "" select(2)
.xx "" "csh \- a shell (command interpreter) with C-like" "syntax." "" csh(1)
.xx "" "" "syscall \- indirect system call." "" syscall(2)
.xx "messages." "perror," "sys_errlist, sys_nerr, errno \- system error" "" perror(3)
.xx "" "st \- Driver for" "Sysgen SC 4000 (Archive) Tape Controller." "" st(4S)
.xx "" "" "syslog \- log systems messages." "" syslog(8)
.xx "" "" "syslog \- make system log entry." "" syslog(1)
.xx "" "" "syslog, openlog, closelog \- control system log." "" syslog(3)
.xx "" "perror, sys_errlist," "sys_nerr, errno \- system error messages." "" perror(3)
.xx "" "psignal," "sys_siglist \- system signal messages." "" psignal(3)
.xx "" "mti \-" "Systech MTI-800/1600 multi-terminal interface." "" mti(4S)
.xx "Centronics printer interface." "vpc \-" "Systech VPC-2200 Versatec printer/plotter and" "" vpc(4S)
.xx "" "domainname \- set or display name of current domain" "system." "" domainname(1)
.xx "" "hostid \- print identifier of current host" "system." "" hostid(1)
.xx "" "hostname \- set or print name of current host" "system." "" hostname(1)
.xx "" "mkfs \- construct a file" "system." "" mkfs(8)
.xx "" "mkproto \- construct a prototype file" "system." "" mkproto(8)
.xx "" "mount, umount \- mount or remove file" "system." "" mount(2)
.xx "" "mount, umount \- mount and dismount file" "system." "" mount(8)
.xx "" "newfs \- construct a new file" "system." "" newfs(8)
.xx "" "savecore \- save a core dump of the operating" "system." "" savecore(8)
.xx "" "setquota \- enable/disable quotas on a file" "system." "" setquota(2)
.xx "" "tip, cu \- connect to a remote" "system." "" tip(1C)
.xx "" "tunefs \- tune up an existing file" "system." "" tunefs(8)
.xx "" "users \- compact list of users who are on the" "system." "" users(1)
.xx "" "vadvise \- give advice to paging" "system." "" vadvise(2)
.xx "" "win \- Sun window" "system." "" win(4S)
.xx "" "df \- report free disk space on file" "systems." "" df(1)
.xx "" "syslog \- log" "systems messages." "" syslog(8)
.xx "" "kgmon \- generate a dump of the operating" "system's profile buffers." "" kgmon(8)
.xx "" "n .ti +0.5i alloca, malloc_debug, malloc_verify .if" "t .ti +0.5i \- memory allocator." "/valloc, .if" malloc(3)
.xx "" "rehash: recompute command hash" "table." "" csh(1)
.xx "" "unhash: discard command hash" "table." "" csh(1)
.xx "" "\- keyboard translation table format and default" "table." "kbd" kbd(5)
.xx "" "mtab \- mounted file system" "table." "" mtab(5)
.xx "" "kbd \- keyboard translation" "table format and default table." "" kbd(5)
.xx "" "crontab \-" "table of times to run periodic jobs." "" crontab(5)
.xx "" "getdtablesize \- get descriptor" "table size." "" getdtablesize(2)
.xx "" "htable \- convert NIC standard format host" "tables." "" htable(8)
.xx "" "route \- manually manipulate the routing" "tables." "" route(8C)
.xx "" "term \- terminal driving" "tables for nroff." "" term(5)
.xx "" "tbl \- format" "tables for nroff or troff." "" tbl(1)
.xx "" "gettable \- get NIC format host" "tables from a host ." "" gettable(8C)
.xx "" "expand, unexpand \- expand" "tabs to spaces, and vice versa." "" expand(1)
.xx "" "ctags \- create a" "tags file." "" ctags(1)
.xx "" "" "tail \- display the last part of a file." "" tail(1)
.xx "" "" "talk \- talk to another user." "" talk(1)
.xx "" "talk \-" "talk to another user." "" talk(1)
.xx "functions." "sin, cos," "tan, asin, acos, atan, atan2 \- trigonometric" "" sin(3M)
.xx "" "sinh, cosh," "tanh \- hyperbolic functions." "" sinh(3M)
.xx "" "tar \-" "tape archive file format." "" tar(5)
.xx "" "tar \-" "tape archiver." "" tar(1)
.xx "" "st \- Driver for Sysgen SC 4000 (Archive)" "Tape Controller." "" st(4S)
.xx "" "xt \- Driver for Xylogics 472" "Tape Controllers." "" xt(4S)
.xx "" "ar \- Archive 1/4 inch Streaming" "Tape Drive." "" ar(4S)
.xx "" "tm \- tapemaster 1/2 inch" "tape drive." "" tm(4S)
.xx "" "tp \- DEC/mag" "tape formats." "" tp(5)
.xx "" "mtio \- UNIX system magnetic" "tape interface." "" mtio(4)
.xx "" "tread, twrite, trewin, tskipf, tstate \- f77" "tape I/O." "topen, tclose," topen(3F)
.xx "" "mt \- magnetic" "tape manipulating program." "" mt(1)
.xx "" "tm \-" "tapemaster 1/2 inch tape drive." "" tm(4S)
.xx "" "" "tar \- tape archive file format." "" tar(5)
.xx "" "" "tar \- tape archiver." "" tar(1)
.xx "" "" "tbl \- format tables for nroff or troff." "" tbl(1)
.xx "" "deroff \- remove nroff, troff," "tbl and eqn constructs." "" deroff(1)
.xx "f77 tape I/O." "topen," "tclose, tread, twrite, trewin, tskipf, tstate \-" "" topen(3F)
.xx "statement-by-statement profile." "" "tcov \- construct test coverage analysis and" "" tcov(1)
.xx "" "" "tcp \- Internet Transmission Control Protocol." "" tcp(4P)
.xx "" "" "tee \- copy standard output to many files." "" tee(1)
.xx "" "" "tektool \- Tektronix 4014 terminal emulator tool." "" tektool(1)
.xx "" "tektool \-" "Tektronix 4014 terminal emulator tool." "" tektool(1)
.xx "" "reset \- reset the" "teletype bits to a sensible state." "" reset(1)
.xx "" "last \- indicate last logins of users and" "teletypes." "" last(1)
.xx "" "lseek," "tell \- move read/write pointer." "" lseek(2)
.xx "" "index, rindex, lnblnk, len \-" "tell about character objects." "" index(3F)
.xx "operations." "opendir, readdir," "telldir, seekdir, rewinddir, closedir \- directory" "" directory(3)
.xx "" "" "telnet \- user interface to the TELNET protocol." "" telnet(1C)
.xx "" "telnet \- user interface to the" "TELNET protocol." "" telnet(1C)
.xx "" "telnetd \- DARPA" "TELNET protocol server." "" telnetd(8C)
.xx "" "" "telnetd \- DARPA TELNET protocol server." "" telnetd(8C)
.xx "" "su \- substitute user id" "temporarily." "" su(1)
.xx "" "tmpnam \- create a name for a" "temporary file." "" tmpnam(3C)
.xx "" "" "term \- terminal driving tables for nroff." "" term(5)
.xx "" "" "termcap \- terminal capability data base." "" termcap(5)
.xx "" "ttyname, isatty, ttyslot \- find name of a" "terminal." "" ttyname(3)
.xx "" "vhangup \- virtually ``hangup'' the current control" "terminal." "" vhangup(2)
.xx "" "worms  \-  animate worms on a display" "terminal." "" worms(6)
.xx "" "termcap \-" "terminal capability data base." "" termcap(5)
.xx "" "tset \- establish" "terminal characteristics for the environment." "" tset(1)
.xx "" "gettytab \-" "terminal configuration data base." "" gettytab(5)
.xx "" "pty \- pseudo" "terminal driver." "" pty(4)
.xx "" "term \-" "terminal driving tables for nroff." "" term(5)
.xx "" "tektool \- Tektronix 4014" "terminal emulator tool." "" tektool(1)
.xx "" "tgetnum, tgetflag, tgetstr, tgoto, tputs \-" "terminal independent operation routines." "tgetent," termcap(3X)
.xx "" "ttys \-" "terminal initialization data." "" ttys(5)
.xx "" "mti \- Systech MTI-800/1600 multi-" "terminal interface." "" mti(4S)
.xx "" "tty \- general" "terminal interface." "" tty(4)
.xx "" "getty  \- set" "terminal mode." "" getty(8)
.xx "" "tty \- get" "terminal name." "" tty(1)
.xx "" "stty \- set" "terminal options." "" stty(1)
.xx "" "ttynam, isatty \- find name of a" "terminal port." "" ttynam(3F)
.xx "" "clear \- clear workstation or" "terminal screen." "" clear(1)
.xx "" "script \- make typescript of" "terminal session." "" script(1)
.xx "" "stty, gtty \- set and get" "terminal state." "" stty(3C)
.xx "" "ttytype \- data base of" "terminal types by port." "" ttytype(5)
.xx "" "wait \- wait for a process to" "terminate." "" wait(3F)
.xx "" "_exit \-" "terminate a process." "" exit(2)
.xx "" "kill \- send a signal to a process, or" "terminate a process." "" kill(1)
.xx "output." "exit \-" "terminate a process after flushing any pending" "" exit(3)
.xx "" "abort \-" "terminate abruptly with memory image." "" abort(3F)
.xx "" "endif:" "terminate conditional." "" csh(1)
.xx "" "end:" "terminate loop." "" csh(1)
.xx "" "wait, wait3 \- wait for process to" "terminate or stop." "" wait(2)
.xx "" "exit \-" "terminate process with status." "" exit(3F)
.xx "" "endsw:" "terminate switch." "" csh(1)
.xx "" "imemtest \- stand alone memory" "test." "" imemtest(8s)
.xx "" "" "test \- condition command." "" test(1)
.xx "profile." "tcov \- construct" "test coverage analysis and statement-by-statement" "" tcov(1)
.xx "" "isinf, isnan \-" "test for indeterminate floating point values." "" isinf(3)
.xx "" "gxtest \- stand alone" "test for the Sun video graphics board." "" gxtest(8s)
.xx "" "quiz \-" "test your knowledge." "" quiz(6)
.xx "" "sticky \- executable files with persistent" "text." "" sticky(8)
.xx "" "ed \-" "text editor." "" ed(1)
.xx "" "ex, edit \-" "text editor." "" ex(1)
.xx "" "more, page \- browse through a" "text file." "" more(1)
.xx "" "fmt \- simple" "text formatter." "" fmt(1)
.xx "" "nroff \-" "text formatting and typesetting." "" nroff(1)
.xx "" "ms \-" "text formatting macros." "" ms(7)
.xx "server." "" "tftpd \- DARPA Trivial File Transfer Protocol" "" tftpd(8C)
.xx "\- terminal independent operation routines." "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs" "" termcap(3X)
.xx "independent operation routines." "tgetent, tgetnum," "tgetflag, tgetstr, tgoto, tputs \- terminal" "" termcap(3X)
.xx "terminal independent operation routines." "tgetent," "tgetnum, tgetflag, tgetstr, tgoto, tputs \-" "" termcap(3X)
.xx "operation routines." "tgetent, tgetnum, tgetflag," "tgetstr, tgoto, tputs \- terminal independent" "" termcap(3X)
.xx "routines." "tgetent, tgetnum, tgetflag, tgetstr," "tgoto, tputs \- terminal independent operation" "" termcap(3X)
.xx "" "fsync \- synchronize a file's in-core state with" "that on disk." "" fsync(2)
.xx "" "ccat \- compress and uncompress files, and cat" "them." "compact, uncompact," compact(1)
.xx "" "w \- who is on and what" "they are doing." "" w(1)
.xx "" "more, page \- browse" "through a text file." "" more(1)
.xx "" ".ti +0.5i alloca, malloc_debug, malloc_verify .if t" ".ti +0.5i \- memory allocator." "/valloc, .if n" malloc(3)
.xx "" "/realloc, calloc, cfree, memalign, valloc, .if n" ".ti +0.5i alloca, malloc_debug, malloc_verify .if t/" "" malloc(3)
.xx "" "alarm \- schedule signal after specified" "time." "" alarm(3C)
.xx "" "alarm \- execute a subroutine after a specified" "time." "" alarm(3F)
.xx "" "at \- execute commands at a later" "time." "" at(1)
.xx "" "etime, dtime \- return elapsed execution" "time." "" etime(3F)
.xx "" "gettimeofday, settimeofday \- get/set date and" "time." "" gettimeofday(2)
.xx "" "shutdown \- close down the system at a given" "time." "" shutdown(8)
.xx "" "time, ftime \- get date and" "time." "" time(3C)
.xx "" "time, ctime, ltime, gmtime \- return system" "time." "" time(3F)
.xx "" "" "time \- time a command." "" time(1)
.xx "" "time \-" "time a command." "" time(1)
.xx "" "getdate \- convert" "time and date from ASCII." "" getdate(3)
.xx "" "time:" "time command." "" csh(1)
.xx "" "" "time, ctime, ltime, gmtime \- return system time." "" time(3F)
.xx "" "" "time, ftime \- get date and time." "" time(3C)
.xx "" "fdate \- return date and" "time in an ASCII string." "" fdate(3F)
.xx "" "idate, itime \- return date or" "time in numerical form." "" idate(3F)
.xx "" "profil \- execution" "time profile." "" profil(2)
.xx "" "timed \- DARPA" "Time server." "" timed(8C)
.xx "" "" "time: time command." "" csh(1)
.xx "" "asctime, timezone, dysize \-  convert date and" "time to ASCII." "ctime, localtime, gmtime," ctime(3)
.xx "" "" "timed \- DARPA Time server." "" timed(8C)
.xx "" "getitimer, setitimer \- get/set value of interval" "timer." "" getitimer(2)
.xx "" "rastrepl \- magnify a raster image by 2" "times." "" rastrepl(1)
.xx "" "times \- get process" "times." "" times(3C)
.xx "" "utime \- set file" "times." "" utime(3C)
.xx "" "utimes \- set file" "times." "" utimes(2)
.xx "" "" "times \- get process times." "" times(3C)
.xx "" "crontab \- table of" "times to run periodic jobs." "" crontab(5)
.xx "" "/export, login, newgrp, read, readonly, set, shift," "times, trap, umask, wait \- command language." "" sh(1)
.xx "ASCII." "ctime, localtime, gmtime, asctime," "timezone, dysize \-  convert date and time to" "" ctime(3)
.xx "" "" "tip, cu \- connect to a remote system." "" tip(1C)
.xx "" "" "tm \- tapemaster 1/2 inch tape drive." "" tm(4S)
.xx "" "" "tmpnam \- create a name for a temporary file." "" tmpnam(3C)
.xx "" "/iscntrl, isascii, isgraph, toupper, tolower," "toascii \- character classification and conversion/" "" ctype(3)
.xx "" "/isprint, iscntrl, isascii, isgraph, toupper," "tolower, toascii \- character classification and/" "" ctype(3)
.xx "" "tektool \- Tektronix 4014 terminal emulator" "tool." "" tektool(1)
.xx "tstate \- f77 tape I/O." "" "topen, tclose, tread, twrite, trewin, tskipf," "" topen(3F)
.xx "" "tsort \-" "topological sort." "" tsort(1)
.xx "" "" "touch \- update date last modified of a file." "" touch(1)
.xx "" "ispunct, isprint, iscntrl, isascii, isgraph," "toupper, tolower, toascii \- character/" "/isspace," ctype(3)
.xx "" "" "tp \- DEC/mag tape formats." "" tp(5)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto," "tputs \- terminal independent operation routines." "" termcap(3X)
.xx "" "" "tr \- translate characters." "" tr(1)
.xx "" "ptrace \- process" "trace." "" ptrace(2)
.xx "" "trpt \- transliterate protocol" "trace." "" trpt(8C)
.xx "" "goto: command" "transfer." "" csh(1)
.xx "" "ftp \- file" "transfer program." "" ftp(1C)
.xx "" "ftpd \- DARPA Internet File" "Transfer Protocol server." "" ftpd(8C)
.xx "" "tftpd \- DARPA Trivial File" "Transfer Protocol server." "" tftpd(8C)
.xx "" "tr \-" "translate characters." "" tr(1)
.xx "" "kbd \- keyboard" "translation table format and default table." "" kbd(5)
.xx "" "pi \- Pascal interpreter code" "translator." "" pi(1)
.xx "" "trpt \-" "transliterate protocol trace." "" trpt(8C)
.xx "" "tcp \- Internet" "Transmission Control Protocol." "" tcp(4P)
.xx "" "\- encode/decode a binary file for" "transmission via mail." "uuencode,uudecode" uuencode(1C)
.xx "" "trpfpe, fpecnt \-" "trap and repair floating point faults." "" trpfpe(3F)
.xx "" "login, newgrp, read, readonly, set, shift, times," "trap, umask, wait \- command language." "/export," sh(1)
.xx "I/O." "topen, tclose," "tread, twrite, trewin, tskipf, tstate \- f77 tape" "" topen(3F)
.xx "" "" "trek \- trekkie game." "" trek(6)
.xx "" "trek \-" "trekkie game." "" trek(6)
.xx "" "topen, tclose, tread, twrite," "trewin, tskipf, tstate \- f77 tape I/O." "" topen(3F)
.xx "" "sin, cos, tan, asin, acos, atan, atan2 \-" "trigonometric functions." "" sin(3M)
.xx "" "tftpd \- DARPA" "Trivial File Transfer Protocol server." "" tftpd(8C)
.xx "" "tbl \- format tables for nroff or" "troff." "" tbl(1)
.xx "" "" "troff \- typeset or format documents." "" troff(1)
.xx "" "checknr \- check nroff/" "troff files." "" checknr(1)
.xx "" "deroff \- remove nroff," "troff, tbl and eqn constructs." "" deroff(1)
.xx "faults." "" "trpfpe, fpecnt \- trap and repair floating point" "" trpfpe(3F)
.xx "" "" "trpt \- transliterate protocol trace." "" trpt(8C)
.xx "" "false," "true \- provide truth values." "" false(1)
.xx "" "" "true, false \- provide truth values." "" true(1)
.xx "" "truncate, ftruncate \-" "truncate a file to a specified length." "" truncate(2)
.xx "specified length." "" "truncate, ftruncate \- truncate a file to a" "" truncate(2)
.xx "" "false, true \- provide" "truth values." "" false(1)
.xx "" "true, false \- provide" "truth values." "" true(1)
.xx "" "chase \-" "Try to escape to killer robots." "" chase(6)
.xx "environment." "" "tset \- establish terminal characteristics for the" "" tset(1)
.xx "" "topen, tclose, tread, twrite, trewin," "tskipf, tstate \- f77 tape I/O." "" topen(3F)
.xx "" "" "tsort \- topological sort." "" tsort(1)
.xx "" "topen, tclose, tread, twrite, trewin, tskipf," "tstate \- f77 tape I/O." "" topen(3F)
.xx "" "" "tty \- general terminal interface." "" tty(4)
.xx "" "" "tty \- get terminal name." "" tty(1)
.xx "" "" "ttynam, isatty \- find name of a terminal port." "" ttynam(3F)
.xx "terminal." "" "ttyname, isatty, ttyslot \- find name of a" "" ttyname(3)
.xx "" "" "ttys \- terminal initialization data." "" ttys(5)
.xx "" "ttyname, isatty," "ttyslot \- find name of a terminal." "" ttyname(3)
.xx "" "" "ttytype \- data base of terminal types by port." "" ttytype(5)
.xx "" "tunefs \-" "tune up an existing file system." "" tunefs(8)
.xx "" "" "tunefs \- tune up an existing file system." "" tunefs(8)
.xx "" "topen, tclose, tread," "twrite, trewin, tskipf, tstate \- f77 tape I/O." "" topen(3F)
.xx "" "file \- determine file" "type." "" file(1)
.xx "" "types \- primitive system data" "types." "" types(5)
.xx "" "" "types \- primitive system data types." "" types(5)
.xx "" "ttytype \- data base of terminal" "types by port." "" ttytype(5)
.xx "" "script \- make" "typescript of terminal session." "" script(1)
.xx "" "man \- macros to" "typeset manual." "" man(7)
.xx "" "eqn, neqn, checkeq \-" "typeset mathematics." "" eqn(1)
.xx "" "troff \-" "typeset or format documents." "" troff(1)
.xx "" "nroff \- text formatting and" "typesetting." "" nroff(1)
.xx "" "" "udp \- Internet User Datagram Protocol." "" udp(4P)
.xx "" "getpw \- get name from" "uid." "" getpw(3)
.xx "" "" "ul \- do underlining." "" ul(1)
.xx "" "" "ulimit \- get and set user limits." "" ulimit(3C)
.xx "" "" "umask \- set file creation mode mask." "" umask(2)
.xx "" "" "umask: change or display file creation mask." "" csh(1)
.xx "" "newgrp, read, readonly, set, shift, times, trap," "umask, wait \- command language." "/export, login," sh(1)
.xx "" "mount," "umount \- mount and dismount file system." "" mount(8)
.xx "" "mount," "umount \- mount or remove file system." "" mount(2)
.xx "" "" "unalias: remove aliases." "" csh(1)
.xx "and cat them." "compact," "uncompact, ccat \- compress and uncompress files," "" compact(1)
.xx "" "compact, uncompact, ccat \- compress and" "uncompress files, and cat them." "" compact(1)
.xx "" "ul \- do" "underlining." "" ul(1)
.xx "" "unget \-" "undo a previous get of an SCCS file." "" unget(1)
.xx "" "expand," "unexpand \- expand tabs to spaces, and vice versa." "" expand(1)
.xx "" "" "unget \- undo a previous get of an SCCS file." "" unget(1)
.xx "" "" "ungetc \- push character back into input stream." "" ungetc(3S)
.xx "" "" "unhash: discard command hash table." "" csh(1)
.xx "" "" "uniq \- report repeated lines in a file." "" uniq(1)
.xx "" "mktemp \- make a" "unique file name." "" mktemp(3)
.xx "" "gethostid \- get" "unique identifier of current host." "" gethostid(2)
.xx "" "flush \- flush output to a logical" "unit." "" flush(3F)
.xx "" "fseek, ftell \- reposition a file on a logical" "unit." "" fseek(3F)
.xx "" "getc, fgetc \- get a character from a logical" "unit." "" getc(3F)
.xx "" "fputc \- write a character to a FORTRAN logical" "unit." "putc," putc(3F)
.xx "" "getfd \- get the file descriptor of an external" "unit number." "" getfd(3F)
.xx "" "" "units \- conversion program." "" units(1)
.xx "" "reboot \-" "UNIX bootstrapping procedures." "" reboot(8)
.xx "" "system \- execute a" "UNIX command." "" system(3F)
.xx "" "uux \- unix to" "unix command execution." "" uux(1C)
.xx "" "uucp, uulog \- unix to" "unix copy." "" uucp(1C)
.xx "" "analyze \- Virtual" "UNIX postmortem crash analyzer." "" analyze(8)
.xx "" "mtio \-" "UNIX system magnetic tape interface." "" mtio(4)
.xx "" "uux \-" "unix to unix command execution." "" uux(1C)
.xx "" "uucp, uulog \-" "unix to unix copy." "" uucp(1C)
.xx "" "" "unlimit: remove resource limitiations." "" csh(1)
.xx "" "" "unlink \- remove a directory entry." "" unlink(3F)
.xx "" "" "unlink \- remove directory entry." "" unlink(2)
.xx "" "rmdir, rm  \- remove (" "unlink) directories or files." "" rmdir(1)
.xx "" "rm, rmdir  \- remove (" "unlink) files or directories." "" rm(1)
.xx "" "munmap \-" "unmap pages of memory." "" munmap(2)
.xx "" "recnews \- receive" "unprocessed articles via mail." "" recnews(1)
.xx "" "recnews \- receive" "unprocessed articles via mail." "" recnews(8)
.xx "" "" "unset: discard shell variables." "" csh(1)
.xx "" "" "unsetenv: remove environment variables." "" csh(1)
.xx "" "uptime \- show how long system has been" "up." "" uptime(1)
.xx "" "uuclean \- uucp spool directory clean-" "up." "" uuclean(8C)
.xx "" "tunefs \- tune" "up an existing file system." "" tunefs(8)
.xx "" "" "update \- periodically update the super block." "" update(8)
.xx "" "touch \-" "update date last modified of a file." "" touch(1)
.xx "" "sync \-" "update super-block." "" sync(2)
.xx "" "sync \-" "update the super block." "" sync(1)
.xx "" "sync \-" "update the super block." "" sync(8)
.xx "" "update \- periodically" "update the super block." "" update(8)
.xx "" "" "uptime \- show how long system has been up." "" uptime(1)
.xx "" "du \- summarize disk" "usage." "" du(1)
.xx "" "miscellaneous \- miscellaneous" "useful information pages." "" intro(7)
.xx "" "news \-" "USENET network news article, utility files." "" news(5)
.xx "" "checknews \- check if user has news on the" "USENET news network." "" checknews(1)
.xx "" "login: login new" "user." "" csh(1)
.xx "" "talk \- talk to another" "user." "" talk(1)
.xx "" "write \- write to another" "user." "" write(1)
.xx "" "seteuid, setruid, setgid, setegid, setrgid \- set" "user and group ID." "setuid," setuid(3)
.xx "" "udp \- Internet" "User Datagram Protocol." "" udp(4P)
.xx "" "environ \-" "user environment." "" environ(5)
.xx "" "checknews \- check if" "user has news on the USENET news network." "" checknews(1)
.xx "" "su \- substitute" "user id temporarily." "" su(1)
.xx "" "getuid, geteuid \- get" "user identity." "" getuid(2)
.xx "" "setreuid \- set real and effective" "user ID's." "" setreuid(2)
.xx "" "telnet \-" "user interface to the TELNET protocol." "" telnet(1C)
.xx "" "ulimit \- get and set" "user limits." "" ulimit(3C)
.xx "" "getuid, getgid \- get" "user or group ID of the caller." "" getuid(3F)
.xx "" "sail \- multi-" "user wooden ships and iron men." "" sail(6)
.xx "" "whoami \- display effective current" "username." "" whoami(1)
.xx "" "adduser \- procedure for adding new" "users." "" adduser(8)
.xx "" "/bin/mail \- send or receive mail among" "users." "" binmail(1)
.xx "" "wall \- write to all" "users." "" wall(1)
.xx "system." "" "users \- compact list of users who are on the" "" users(1)
.xx "" "last \- indicate last logins of" "users and teletypes." "" last(1)
.xx "" "getlog \- get" "user's login name." "" getlog(3F)
.xx "" "ftpusers \- list of" "users prohibited by ftp." "" ftpusers(5)
.xx "" "users \- compact list of" "users who are on the system." "" users(1)
.xx "" "vi \- view a file without changing it" "using the vi visual editor." "" view(1)
.xx "" "news \- USENET network news article," "utility files." "" news(5)
.xx "" "getrusage \- get information about resource" "utilization." "" getrusage(2)
.xx "" "vtimes \- get information about resource" "utilization." "" vtimes(3C)
.xx "" "" "utime \- set file times." "" utime(3C)
.xx "" "" "utimes \- set file times." "" utimes(2)
.xx "" "" "utmp, wtmp \- login records." "" utmp(5)
.xx "" "" "uuclean \- uucp spool directory clean-up." "" uuclean(8C)
.xx "" "rmail \- handle remote mail received via" "uucp." "" rmail(8)
.xx "" "uuclean \-" "uucp spool directory clean-up." "" uuclean(8C)
.xx "" "" "uucp, uulog \- unix to unix copy." "" uucp(1C)
.xx "transmission via mail." "uuencode," "uudecode \- encode/decode a binary file for" "" uuencode(1C)
.xx "" "" "uuencode \- format of an encoded uuencode file." "" uuencode(5)
.xx "" "uuencode \- format of an encoded" "uuencode file." "" uuencode(5)
.xx "for transmission via mail." "" "uuencode,uudecode \- encode/decode a binary file" "" uuencode(1C)
.xx "" "uucp," "uulog \- unix to unix copy." "" uucp(1C)
.xx "" "" "uurec \- receive processed news articles via mail." "" uurec(8)
.xx "" "" "uusend \- send a file to a remote host." "" uusend(1C)
.xx "" "" "uux \- unix to unix command execution." "" uux(1C)
.xx "" "" "vadvise \- give advice to paging system." "" vadvise(2)
.xx "" "" "val \- validate SCCS file." "" val(1)
.xx "" "val \-" "validate SCCS file." "" val(1)
.xx "" "" "valloc \- aligned memory allocator." "" valloc(3)
.xx "" "malloc, free, realloc, calloc, cfree, memalign," "valloc, .if n .ti +0.5i alloca, malloc_debug,/" "" malloc(3)
.xx "" "abs \- integer absolute" "value." "" abs(3)
.xx "" "fabs, floor, ceil \- absolute" "value, floor, ceiling functions." "" floor(3M)
.xx "" "getenv \-" "value for environment name." "" getenv(3)
.xx "" "readlink \- read" "value of a symbolic link." "" readlink(2)
.xx "" "getenv \- get" "value of environment variables." "" getenv(3F)
.xx "" "getitimer, setitimer \- get/set" "value of interval timer." "" getitimer(2)
.xx "" "set: change" "value of shell variable." "" csh(1)
.xx "" "false, true \- provide truth" "values." "" false(1)
.xx "" "isnan \- test for indeterminate floating point" "values." "isinf," isinf(3)
.xx "" "perfmeter \- meter display of system performance" "values." "" perfmeter(1)
.xx "" "rand, drand, irand \- return random" "values." "" rand(3F)
.xx "" "flmax, dflmin, dflmax, inmax \- return extreme" "values." "flmin," range(3F)
.xx "" "true, false \- provide truth" "values." "" true(1)
.xx "" "htonl, htons, ntohl, ntohs \- convert" "values between host and network byte order." "" byteorder(3N)
.xx "" "" "varargs \- variable argument list." "" varargs(3)
.xx "" "set: change value of shell" "variable." "" csh(1)
.xx "" "varargs \-" "variable argument list." "" varargs(3)
.xx "" "setenv: set" "variable in environment." "" csh(1)
.xx "" "@: arithmetic on shell" "variables." "" csh(1)
.xx "" "unset: discard shell" "variables." "" csh(1)
.xx "" "unsetenv: remove environment" "variables." "" csh(1)
.xx "" "getenv \- get value of environment" "variables." "" getenv(3F)
.xx "" "vax \- is current machine a" "vax." "" vax(1)
.xx "" "" "vax \- is current machine a vax." "" vax(1)
.xx "" "assert \- program" "verification." "" assert(3)
.xx "" "lint \- a C program" "verifier." "" lint(1)
.xx "" "expand, unexpand \- expand tabs to spaces, and vice" "versa." "" expand(1)
.xx "" "vplot \- plot graphics on the" "Versatec." "" vplot(1)
.xx "" "vp \- Ikon 10071-5" "Versatec parallel printer interface." "" vp(4S)
.xx "interface." "vpc \- Systech VPC-2200" "Versatec printer/plotter and Centronics printer" "" vpc(4S)
.xx "" "skyversion \- print the SKYFFP board microcode" "version number ." "" skyversion(8)
.xx "" "get \- get a" "version of an SCCS file." "" get(1)
.xx "" "what \- identify the" "version of files." "" what(1)
.xx "" "hangman \- Computer" "version of the game hangman." "" hangman(6)
.xx "" "sccsdiff \- compare two" "versions of an SCCS file." "" sccsdiff(1)
.xx "" "" "vfont \- font formats." "" vfont(5)
.xx "" ".PP fonttool \- a" "vfont screen-font editor." "" fonttool(1)
.xx "efficient way." "" "vfork \- spawn new process in a virtual memory" "" vfork(2)
.xx "" "" "vgrind \- grind nice listings of programs." "" vgrind(1)
.xx "terminal." "" "vhangup \- virtually ``hangup'' the current control" "" vhangup(2)
.xx "on ex." "" "vi \- screen oriented (visual) display editor based" "" vi(1)
.xx "visual editor." "" "vi \- view a file without changing it using the vi" "" view(1)
.xx "" "vi \- view a file without changing it using the" "vi visual editor." "" view(1)
.xx "" "recnews \- receive unprocessed articles" "via mail." "" recnews(1)
.xx "" "recnews \- receive unprocessed articles" "via mail." "" recnews(8)
.xx "" "sendnews \- send news articles" "via mail." "" sendnews(8)
.xx "" "\- encode/decode a binary file for transmission" "via mail." "uuencode,uudecode" uuencode(1C)
.xx "" "uurec \- receive processed news articles" "via mail." "" uurec(8)
.xx "" "rmail \- handle remote mail received" "via uucp." "" rmail(8)
.xx "" "expand, unexpand \- expand tabs to spaces, and" "vice versa." "" expand(1)
.xx "" "gxtest \- stand alone test for the Sun" "video graphics board." "" gxtest(8s)
.xx "" "bsuncube \-" "view 3-D Sun logo." "" bsuncube(6)
.xx "editor." "vi \-" "view a file without changing it using the vi visual" "" view(1)
.xx "" "" "vipw \- edit the password file." "" vipw(8)
.xx "" "vfork \- spawn new process in a" "virtual memory efficient way." "" vfork(2)
.xx "" "vmstat \- report" "virtual memory statistics." "" vmstat(8)
.xx "" "analyze \-" "Virtual UNIX postmortem crash analyzer." "" analyze(8)
.xx "" "vhangup \-" "virtually ``hangup'' the current control terminal." "" vhangup(2)
.xx "" "vi \- screen oriented (" "visual) display editor based on ex." "" vi(1)
.xx "" "vi \- view a file without changing it using the vi" "visual editor." "" view(1)
.xx "consumption." "" "vlimit \- control maximum system resource" "" vlimit(3C)
.xx "" "mem, kmem, mbmem, mbio," "vme16, vme24 \- main memory and bus I/O space." "" mem(4S)
.xx "" "mem, kmem, mbmem, mbio, vme16," "vme24 \- main memory and bus I/O space." "" mem(4S)
.xx "" "" "vmstat \- report virtual memory statistics." "" vmstat(8)
.xx "" "fs, inode \- format of file system" "volume." "" fs(5)
.xx "interface." "" "vp \- Ikon 10071-5 Versatec parallel printer" "" vp(4S)
.xx "and Centronics printer interface." "" "vpc \- Systech VPC-2200 Versatec printer/plotter" "" vpc(4S)
.xx "printer interface." "vpc \- Systech" "VPC-2200 Versatec printer/plotter and Centronics" "" vpc(4S)
.xx "" "" "vplot \- plot graphics on the Versatec." "" vplot(1)
.xx "" "" "vswap \- convert a foreign font file." "" vswap(1)
.xx "utilization." "" "vtimes \- get information about resource" "" vtimes(3C)
.xx "" "" "w \- who is on and what they are doing." "" w(1)
.xx "" "" "wait \- await completion of process." "" wait(1)
.xx "" "read, readonly, set, shift, times, trap, umask," "wait \- command language." "/export, login, newgrp," sh(1)
.xx "" "" "wait \- wait for a process to terminate." "" wait(3F)
.xx "" "wait \-" "wait for a process to terminate." "" wait(3F)
.xx "" "wait:" "wait for background processes to complete." "" csh(1)
.xx "" "sigpause \- atomically release blocked signals and" "wait for interrupt." "" sigpause(2)
.xx "" "wait, wait3 \-" "wait for process to terminate or stop." "" wait(2)
.xx "" "" "wait: wait for background processes to complete." "" csh(1)
.xx "stop." "" "wait, wait3 \- wait for process to terminate or" "" wait(2)
.xx "" "wait," "wait3 \- wait for process to terminate or stop." "" wait(2)
.xx "" "prmail \- print out" "waiting mail." "" prmail(1)
.xx "" "" "wall \- write to all users." "" wall(1)
.xx "" "\- spawn new process in a virtual memory efficient" "way." "vfork" vfork(2)
.xx "" "" "wc \- word count." "" wc(1)
.xx "" "" "what \- identify the version of files." "" what(1)
.xx "" "whatis \- describe" "what a command is." "" whatis(1)
.xx "" "crash \-" "what happens when the system crashes." "" crash(8s)
.xx "" "w \- who is on and" "what they are doing." "" w(1)
.xx "" "" "whatis \- describe what a command is." "" whatis(1)
.xx "" "crash \- what happens" "when the system crashes." "" crash(8s)
.xx "" "leave \- remind you" "when you have to leave." "" leave(1)
.xx "program." "" "whereis \- locate source, binary, and/or manual for" "" whereis(1)
.xx "and paths (csh only)." "" "which \- locate a program file including aliases" "" which(1)
.xx "export, login, newgrp, read,/" "sh, for, case, if," "while, :, ., break, continue, cd, eval, exec, exit," "" sh(1)
.xx "" "" "while: repeat commands conditionally." "" csh(1)
.xx "" "break: exit" "while/foreach loop." "" csh(1)
.xx "" "bwone \- Sun-1 black and" "white frame buffer." "" bwone(4S)
.xx "" "bwtwo \- Sun-2 black and" "white frame buffer." "" bwtwo(4S)
.xx "" "users \- compact list of users" "who are on the system." "" users(1)
.xx "" "from \-" "who is my mail from?." "" from(1)
.xx "" "w \-" "who is on and what they are doing." "" w(1)
.xx "" "" "whoami \- display effective current username." "" whoami(1)
.xx "" "rwho \-" "who's logged in on local machines." "" rwho(1C)
.xx "" "fold \- fold long lines for finite" "width output device." "" fold(1)
.xx "" "" "win \- Sun window system." "" win(4S)
.xx "" "lockscreen \- maintain" "window context until ``login''." "" lockscreen(1)
.xx "screens." "adjacentscreens \- notify the" "window driver of the physical relationships of" "" adjacentscreens(1)
.xx "" "suntools \- the Suntools" "window environment." "" suntools(1)
.xx "" "win \- Sun" "window system." "" win(4S)
.xx "" "chesstool \-" "window-based front-end to chess program." "" chesstool(6)
.xx "" "vi \- view a file" "without changing it using the vi visual editor." "" view(1)
.xx "" "fastboot, fasthalt \- reboot/halt the system" "without checking the disks." "" fastboot(8)
.xx "" "sail \- multi-user" "wooden ships and iron men." "" sail(6)
.xx "" "wc \-" "word count." "" wc(1)
.xx "" "putc, putchar, fputc, putw \- put character or" "word on a stream." "" putc(3S)
.xx "" "cd \- change" "working directory." "" cd(1)
.xx "" "chdir \- change current" "working directory." "" chdir(2)
.xx "" "getcwd \- get pathname of current" "working directory." "" getcwd(3F)
.xx "" "pwd \- print" "working directory name." "" pwd(1)
.xx "" "getwd \- get current" "working directory pathname." "" getwd(3)
.xx "" "sun \- is current machine a sun" "workstation." "" sun(1)
.xx "" "clear \- clear" "workstation or terminal screen." "" clear(1)
.xx "" "" "worm \- Play the growing worm game." "" worm(6)
.xx "" "worm \- Play the growing" "worm game." "" worm(6)
.xx "" "" "worms  \-  animate worms on a display terminal." "" worms(6)
.xx "" "worms  \-  animate" "worms on a display terminal." "" worms(6)
.xx "" "" "write \- write to another user." "" write(1)
.xx "" "putc, fputc \-" "write a character to a FORTRAN logical unit." "" putc(3F)
.xx "" "write, writev \-" "write on a file." "" write(2)
.xx "" "lseek, tell \- move read/" "write pointer." "" lseek(2)
.xx "" "wall \-" "write to all users." "" wall(1)
.xx "" "write \-" "write to another user." "" write(1)
.xx "" "" "write, writev \- write on a file." "" write(2)
.xx "" "write," "writev \- write on a file." "" write(2)
.xx "" "open \- open a file for reading or" "writing, or create a new file." "" open(2)
.xx "" "utmp," "wtmp \- login records." "" utmp(5)
.xx "" "" "wump \- the game of hunt-the-wumpus." "" wump(6)
.xx "" "wump \- the game of hunt-the-" "wumpus." "" wump(6)
.xx "" "xsend," "xget, enroll \- secret mail." "" xsend(1)
.xx "functions." "bit \- and, or," "xor, not, rshift, lshift, bic, bis, bit, setbit" "" bit(3F)
.xx "" "" "xsend, xget, enroll \- secret mail." "" xsend(1)
.xx "implement shared strings." "" "xstr \- extract strings from C programs to" "" xstr(1)
.xx "" "" "xt \- Driver for Xylogics 472 Tape Controllers." "" xt(4S)
.xx "Controllers." "" "xy \- Disk driver for Xylogics SMD Disk" "" xy(4S)
.xx "" "xt \- Driver for" "Xylogics 472 Tape Controllers." "" xt(4S)
.xx "" "xy \- Disk driver for" "Xylogics SMD Disk Controllers." "" xy(4S)
.xx "" "j0, j1, jn," "y0, y1, yn \- bessel functions." "" j0(3M)
.xx "" "j0, j1, jn, y0," "y1, yn \- bessel functions." "" j0(3M)
.xx "" "" "yacc \- yet another compiler-compiler." "" yacc(1)
.xx "" "eyacc \- modified" "yacc allowing much improved error recovery." "" eyacc(1)
.xx "" "" "yes \- be repetitively affirmative." "" yes(1)
.xx "" "j0, j1, jn, y0, y1," "yn \- bessel functions." "" j0(3M)
.xx "" "leave \- remind you when" "you have to leave." "" leave(1)
.xx "" "leave \- remind" "you when you have to leave." "" leave(1)
.xx "" "zs \-" "zilog 8530 SCC serial comunications driver." "" zs(4S)
.xx "" "" "zs \- zilog 8530 SCC serial comunications driver." "" zs(4S)
