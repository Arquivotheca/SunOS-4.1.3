.SE PAGINATE NEW-PAGE 1
.CE MAN-PAGE 1 INTRO(2) 1
.IE	ENTRY	system calls	introduction to			PAGE	START	1
.IE	ENTRY	introduction	system calls			PAGE	START	1
.IE	ENTRY	system error numbers	introduction to			PAGE	START	1
.IE	ENTRY	introduction	system error numbers			PAGE	START	1
.IE	ENTRY	EPERM error number		\fLEPERM\fP error number				1
.IE	ENTRY	ENOENT error number		\fLENOENT\fP error number				1
.IE	ENTRY	ESRCH error number		\fLESRCH\fP error number				1
.IE	ENTRY	EINTR error number		\fLEINTR\fP error number				1
.IE	ENTRY	EIO error number		\fLEIO\fP error number				1
.IE	ENTRY	ENXIO error number		\fLENXIO\fP error number				1
.IE	ENTRY	E2BIG error number		\fLE2BIG\fP error number				1
.IE	ENTRY	ENOEXEC error number		\fLENOEXEC\fP error number				1
.IE	ENTRY	EBADF error number		\fLEBADF\fP error number				1
.SE PAGINATE NEW-PAGE 2
.IE	ENTRY	ECHILD error number		\fLECHILD\fP error number				2
.IE	ENTRY	EAGAIN error number		\fLEAGAIN\fP error number				2
.IE	ENTRY	ENOMEM error number		\fLENOMEM\fP error number				2
.IE	ENTRY	EACCES error number		\fLEACCES\fP error number				2
.IE	ENTRY	EFAULT error number		\fLEFAULT\fP error number				2
.IE	ENTRY	ENOTBLK error number		\fLENOTBLK\fP error number				2
.IE	ENTRY	EBUSY error number		\fLEBUSY\fP error number				2
.IE	ENTRY	EEXIST error number		\fLEEXIST\fP error number				2
.IE	ENTRY	EXDEV error number		\fLEXDEV\fP error number				2
.IE	ENTRY	ENODEV error number		\fLENODEV\fP error number				2
.IE	ENTRY	ENOTDIR error number		\fLENOTDIR\fP error number				2
.IE	ENTRY	EISDIR error number		\fLEISDIR\fP error number				2
.IE	ENTRY	EINVAL error number		\fLEINVAL\fP error number				2
.IE	ENTRY	ENFILE error number		\fLENFILE\fP error number				2
.IE	ENTRY	EMFILE error number		\fLEMFILE\fP error number				2
.IE	ENTRY	ENOTTY error number		\fLENOTTY\fP error number				2
.SE PAGINATE NEW-PAGE 3
.IE	ENTRY	ETXTBSY error number		\fLETXTBSY\fP error number				3
.IE	ENTRY	EFBIG error number		\fLEFBIG\fP error number				3
.IE	ENTRY	ENOSPC error number		\fLENOSPC\fP error number				3
.IE	ENTRY	ESPIPE error number		\fLESPIPE\fP error number				3
.IE	ENTRY	EROFS error number		\fLEROFS\fP error number				3
.IE	ENTRY	EMLINK error number		\fLEMLINK\fP error number				3
.IE	ENTRY	EPIPE error number		\fLEPIPE\fP error number				3
.IE	ENTRY	EDOM error number		\fLEDOM\fP error number				3
.IE	ENTRY	ERANGE error number		\fLERANGE\fP error number				3
.IE	ENTRY	EWOULDBLOCK error number		\fLEWOULDBLOCK\fP error number				3
.IE	ENTRY	EINPROGRESS error number		\fLEINPROGRESS\fP error number				3
.IE	ENTRY	EALREADY error number		\fLEALREADY\fP error number				3
.IE	ENTRY	ENOTSOCK error number		\fLENOTSOCK\fP error number				3
.IE	ENTRY	EDESTADDRREQ error number		\fLEDESTADDRREQ\fP error number				3
.IE	ENTRY	EMSGSIZE error number		\fLEMSGSIZE\fP error number				3
.IE	ENTRY	EPROTOTYPE error number		\fLEPROTOTYPE\fP error number				3
.IE	ENTRY	ENOPROTOOPT error number		\fLENOPROTOOPT\fP error number				3
.IE	ENTRY	EPROTONOSUPPORT error number		\fLEPROTONOSUPPORT\fP error number				3
.SE PAGINATE NEW-PAGE 4
.IE	ENTRY	ESOCKTNOSUPPORT error number		\fLESOCKTNOSUPPORT\fP error number				4
.IE	ENTRY	EOPNOTSUPP error number		\fLEOPNOTSUPP\fP error number				4
.IE	ENTRY	EPFNOSUPPORT error number		\fLEPFNOSUPPORT\fP error number				4
.IE	ENTRY	EAFNOSUPPORT error number		\fLEAFNOSUPPORT\fP error number				4
.IE	ENTRY	EADDRINUSE error number		\fLEADDRINUSE\fP error number				4
.IE	ENTRY	EADDRNOTAVAIL error number		\fLEADDRNOTAVAIL\fP error number				4
.IE	ENTRY	ENETDOWN error number		\fLENETDOWN\fP error number				4
.IE	ENTRY	ENETUNREACH error number		\fLENETUNREACH\fP error number				4
.IE	ENTRY	ENETRESET error number		\fLENETRESET\fP error number				4
.IE	ENTRY	ECONNABORTED error number		\fLECONNABORTED\fP error number				4
.IE	ENTRY	ECONNRESET error number		\fLECONNRESET\fP error number				4
.IE	ENTRY	ENOBUFS error number		\fLENOBUFS\fP error number				4
.IE	ENTRY	EISCONN error number		\fLEISCONN\fP error number				4
.IE	ENTRY	ENOTCONN error number		\fLENOTCONN\fP error number				4
.IE	ENTRY	ESHUTDOWN error number		\fLESHUTDOWN\fP error number				4
.IE	ENTRY	ETIMEDOUT error number		\fLETIMEDOUT\fP error number				4
.IE	ENTRY	ECONNREFUSED error number		\fLECONNREFUSED\fP error number				4
.IE	ENTRY	ELOOP error number		\fLELOOP\fP error number				4
.SE PAGINATE NEW-PAGE 5
.IE	ENTRY	ENAMETOOLONG error number		\fLENAMETOOLONG\fP error number				5
.IE	ENTRY	EHOSTDOWN error number		\fLEHOSTDOWN\fP error number				5
.IE	ENTRY	EHOSTUNREACH error number		\fLEHOSTUNREACH\fP error number				5
.IE	ENTRY	ENOTEMPTY error number		\fLENOTEMPTY\fP error number				5
.IE	ENTRY	EDQUOT error number		\fLEDQUOT\fP error number				5
.IE	ENTRY	ESTALE error number		\fLESTALE\fP error number				5
.IE	ENTRY	EREMOTE error number		\fLEREMOTE\fP error number				5
.IE	ENTRY	ENOMSG error number		\fLENOMSG\fP error number				5
.IE	ENTRY	EIDRM error number		\fLEIDRM\fP error number				5
.IE	ENTRY	system error numbers	introduction to			PAGE	END	5
.IE	ENTRY	introduction	system error numbers			PAGE	END	5
.SE PAGINATE NEW-PAGE 6
.SE PAGINATE NEW-PAGE 7
.SE PAGINATE NEW-PAGE 8
.SE PAGINATE NEW-PAGE 9
.SE PAGINATE NEW-PAGE 10
.IE	ENTRY	system calls	introduction to			PAGE	END	10
.IE	ENTRY	introduction	system calls			PAGE	END	10
.SE PAGINATE NEW-PAGE 11
.CE MAN-PAGE 1 ACCEPT(2) 11
.IE	ENTRY	accept		\fLaccept\fP				11
.IE	ENTRY	socket operations	accept		\fLaccept\fP			11
.IE	ENTRY	interprocess communication	accept		\fLaccept\fP			11
.IE	ENTRY	connection	accept on socket					11
.SE PAGINATE NEW-PAGE 12
.CE MAN-PAGE 1 ACCESS(2) 12
.IE	ENTRY	access		\fLaccess\fP				12
.IE	ENTRY	file system	access		\fLaccess\fP			12
.IE	ENTRY	file	determine accessibility of					12
.SE PAGINATE NEW-PAGE 13
.SE PAGINATE NEW-PAGE 14
.CE MAN-PAGE 1 ACCT(2) 14
.IE	ENTRY	acct		\fLacct\fP				14
.IE	ENTRY	system operation support	accounting					14
.IE	ENTRY	accounting	turn on or off					14
.SE PAGINATE NEW-PAGE 15
.CE MAN-PAGE 1 ADJTIME(2) 15
.IE	ENTRY	adjtime		\fLadjtime\fR \(em ajdust time				15
.IE	ENTRY	time	adjust adjtime		adjust \(em \fLadjtime\fR			15
.SE PAGINATE NEW-PAGE 16
.CE MAN-PAGE 1 BIND(2) 16
.IE	ENTRY	bind		\fLbind\fP				16
.IE	ENTRY	socket operations	bind		\fLbind\fP			16
.IE	ENTRY	interprocess communication	bind		\fLbind\fP			16
.SE PAGINATE NEW-PAGE 17
.SE PAGINATE NEW-PAGE 18
.CE MAN-PAGE 1 BRK(2) 18
.IE	ENTRY	brk		\fLbrk\fP				18
.IE	ENTRY	memory management	brk		\fLbrk\fP			18
.IE	ENTRY	sbrk		\fLsbrk\fP				18
.IE	ENTRY	memory management	sbrk		\fLsbrk\fP			18
.IE	ENTRY	change data segment size						18
.IE	ENTRY	data segment size	change					18
.SE PAGINATE NEW-PAGE 19
.CE MAN-PAGE 1 CHDIR(2) 19
.IE	ENTRY	chdir		\fLchdir\fP				19
.IE	ENTRY	file system	chdir		\fLchdir\fP			19
.IE	ENTRY	change	current working directory					19
.IE	ENTRY	current directory	change					19
.IE	ENTRY	working directory	change					19
.IE	ENTRY	directory	change current					19
.SE PAGINATE NEW-PAGE 20
.CE MAN-PAGE 1 CHMOD(2) 20
.IE	ENTRY	chmod		\fLchmod\fP				20
.IE	ENTRY	file system	chmod		\fLchmod\fP			20
.IE	ENTRY	fchmod		\fLfchmod\fP				20
.IE	ENTRY	file system	fchmod		\fLfchmod\fP			20
.IE	ENTRY	change file mode						20
.IE	ENTRY	sticky bit \(em \fLchmod\fP						20
.SE PAGINATE NEW-PAGE 21
.SE PAGINATE NEW-PAGE 22
.CE MAN-PAGE 1 CHOWN(2) 22
.IE	ENTRY	chown		\fLchown\fP				22
.IE	ENTRY	file system	chown		\fLchown\fP			22
.IE	ENTRY	fchown		\fLfchown\fP				22
.IE	ENTRY	file system	fchown		\fLfchown\fP			22
.IE	ENTRY	change owner and group of file						22
.SE PAGINATE NEW-PAGE 23
.SE PAGINATE NEW-PAGE 24
.CE MAN-PAGE 1 CHROOT(2) 24
.IE	ENTRY	chroot		\fLchroot\fP				24
.IE	ENTRY	file system	chroot		\fLchroot\fP			24
.IE	ENTRY	change	root directory					24
.IE	ENTRY	root directory	change					24
.IE	ENTRY	directory	change root					24
.SE PAGINATE NEW-PAGE 25
.CE MAN-PAGE 1 CLOSE(2) 25
.IE	ENTRY	close		\fLclose\fP				25
.IE	ENTRY	descriptors	close		\fLclose\fP			25
.IE	ENTRY	descriptors	delete					25
.IE	ENTRY	delete descriptor						25
.SE PAGINATE NEW-PAGE 26
.CE MAN-PAGE 1 CONNECT(2) 26
.IE	ENTRY	connect		\fLconnect\fP				26
.IE	ENTRY	socket operations	connect		\fLconnect\fP			26
.IE	ENTRY	interprocess communication	connect		\fLconnect\fP			26
.IE	ENTRY	initiate	connection on socket					26
.SE PAGINATE NEW-PAGE 27
.SE PAGINATE NEW-PAGE 28
.CE MAN-PAGE 1 CREAT(2) 28
.IE	ENTRY	creat		\fLcreat\fP				28
.IE	ENTRY	file	create new					28
.SE PAGINATE NEW-PAGE 29
.SE PAGINATE NEW-PAGE 30
.CE MAN-PAGE 1 DUP(2) 30
.IE	ENTRY	dup		\fLdup\fP				30
.IE	ENTRY	descriptors	dup		\fLdup\fP			30
.IE	ENTRY	dup2		\fLdup2\fP				30
.IE	ENTRY	descriptors	dup2		\fLdup2\fP			30
.IE	ENTRY	duplicate descriptor						30
.SE PAGINATE NEW-PAGE 31
.CE MAN-PAGE 1 EXECVE(2) 31
.IE	ENTRY	execve		\fLexecve\fP				31
.IE	ENTRY	processes and protection	execve		\fLexecve\fP			31
.IE	ENTRY	file	execute					31
.IE	ENTRY	execute file						31
.SE PAGINATE NEW-PAGE 32
.SE PAGINATE NEW-PAGE 33
.SE PAGINATE NEW-PAGE 34
.CE MAN-PAGE 1 EXIT(2) 34
.IE	ENTRY	exit		\fLexit\fP				34
.IE	ENTRY	processes and protection	exit		\fLexit\fP			34
.IE	ENTRY	process	terminate					34
.IE	ENTRY	terminate process						34
.SE PAGINATE NEW-PAGE 35
.CE MAN-PAGE 1 FCNTL(2) 35
.IE	ENTRY	fcntl		\fLfcntl\fP				35
.IE	ENTRY	descriptors	fcntl		\fLfcntl\fP			35
.IE	ENTRY	file control						35
.IE	ENTRY	lock	record	lock	record \(em \fLfcntl\fP			35
.SE PAGINATE NEW-PAGE 36
.SE PAGINATE NEW-PAGE 37
.SE PAGINATE NEW-PAGE 38
.CE MAN-PAGE 1 FLOCK(2) 38
.IE	ENTRY	flock		\fLflock\fP				38
.IE	ENTRY	descriptors	flock		\fLflock\fP			38
.IE	ENTRY	lock	file	lock	file \(em \fLflock\fP			38
.SE PAGINATE NEW-PAGE 39
.CE MAN-PAGE 1 FORK(2) 39
.IE	ENTRY	fork		\fLfork\fP				39
.IE	ENTRY	processes and protection	fork		\fLfork\fP			39
.IE	ENTRY	process	create					39
.IE	ENTRY	create new process						39
.SE PAGINATE NEW-PAGE 40
.CE MAN-PAGE 1 FSYNC(2) 40
.IE	ENTRY	fsync		\fLfsync\fP				40
.IE	ENTRY	file	synchronize state					40
.IE	ENTRY	synchronize file state						40
.SE PAGINATE NEW-PAGE 41
41
.CE MAN-PAGE 1 GETDIRENTRIES(2) 41
.IE	ENTRY	getdirentries		\fLgetdirentries\fP				41
.IE	ENTRY	file system	getdirentries		\fLgetdirentries\fP			41
.IE	ENTRY	directory	get entries					41
.SE PAGINATE NEW-PAGE 42
.CE MAN-PAGE 1 GETDOMAINNAME(2) 42
.IE	ENTRY	getdomainname		\fLgetdomainname\fP				42
.IE	ENTRY	processes and protection	getdomainname		\fLgetdomainname\fP			42
.IE	ENTRY	domain	get name of current					42
.IE	ENTRY	get current domain name						42
.IE	ENTRY	setdomainname		\fLsetdomainname\fP				42
.IE	ENTRY	processes and protection	setdomainname		\fLsetdomainname\fP			42
.IE	ENTRY	domain	set name of current					42
.IE	ENTRY	set current domain name						42
.SE PAGINATE NEW-PAGE 43
.CE MAN-PAGE 1 GETDTABLESIZE(2) 43
.IE	ENTRY	getdtablesize		\fLgetdtablesize\fP				43
.IE	ENTRY	descriptors	getdtablesize		\fLgetdtablesize\fP			43
.SE PAGINATE NEW-PAGE 44
.CE MAN-PAGE 1 GETGID(2) 44
.IE	ENTRY	getgid		\fLgetgid\fP				44
.IE	ENTRY	processes and protection	getgid		\fLgetgid\fP			44
.IE	ENTRY	getegid		\fLgetegid\fP				44
.IE	ENTRY	processes and protection	getegid		\fLgetegid\fP			44
.IE	ENTRY	group identity	get					44
.IE	ENTRY	group identity	get effective					44
.IE	ENTRY	effective group identity	get					44
.SE PAGINATE NEW-PAGE 45
.CE MAN-PAGE 1 GETGROUPS(2) 45
.IE	ENTRY	getgroups		\fLgetgroups\fP				45
.IE	ENTRY	processes and protection	getgroups		\fLgetgroups\fP			45
.IE	ENTRY	group access list	get					45
.SE PAGINATE NEW-PAGE 46
.CE MAN-PAGE 1 GETHOSTID(2) 46
.IE	ENTRY	gethostid		\fLgethostid\fP				46
.IE	ENTRY	processes and protection	gethostid		\fLgethostid\fP			46
.IE	ENTRY	host	get identifier of					46
.IE	ENTRY	current host	get identifier of					46
.IE	ENTRY	identifier	of current host					46
.SE PAGINATE NEW-PAGE 47
.CE MAN-PAGE 1 GETHOSTNAME(2) 47
.IE	ENTRY	gethostname		\fLgethostname\fP				47
.IE	ENTRY	processes and protection	gethostname		\fLgethostname\fP			47
.IE	ENTRY	sethostname		\fLsethostname\fP				47
.IE	ENTRY	processes and protection	sethostname		\fLsethostname\fP			47
.IE	ENTRY	host name	get					47
.IE	ENTRY	host name	set					47
.SE PAGINATE NEW-PAGE 48
.CE MAN-PAGE 1 GETITIMER(2) 48
.IE	ENTRY	getitimer		\fLgetitimer\fP				48
.IE	ENTRY	timing and statistics	getitimer		\fLgetitimer\fP			48
.IE	ENTRY	setitimer		\fLsetitimer\fP				48
.IE	ENTRY	timing and statistics	setitimer		\fLsetitimer\fP			48
.IE	ENTRY	interval timers	get					48
.IE	ENTRY	interval timers	set					48
.IE	ENTRY	timerclear		\fLtimerclear\fP macro				48
.IE	ENTRY	timing and statistics	timerclear		\fLtimerclear\fP macro			48
.IE	ENTRY	interval timers	timerclear		\fLtimerclear\fP macro			48
.IE	ENTRY	timerisset		\fLtimerisset\fP macro				48
.IE	ENTRY	timing and statistics	timerisset		\fLtimerisset\fP macro			48
.IE	ENTRY	interval timers	timerisset		\fLtimerisset\fP macro			48
.IE	ENTRY	timercmp		\fLtimercmp\fP macro				48
.IE	ENTRY	timing and statistics	timercmp		\fLtimercmp\fP macro			48
.IE	ENTRY	interval timers	timercmp		\fLtimercmp\fP macro			48
.SE PAGINATE NEW-PAGE 49
.SE PAGINATE NEW-PAGE 50
.CE MAN-PAGE 1 GETPAGESIZE(2) 50
.IE	ENTRY	getpagesize		\fLgetpagesize\fP				50
.IE	ENTRY	memory management	getpagesize		\fLgetpagesize\fP			50
.IE	ENTRY	page size	get					50
.IE	ENTRY	system page size	get					50
.SE PAGINATE NEW-PAGE 51
.CE MAN-PAGE 1 GETPEERNAME(2) 51
.IE	ENTRY	getpeername		\fLgetpeername\fP				51
.IE	ENTRY	socket operations	getpeername		\fLgetpeername\fP			51
.IE	ENTRY	peer name	get					51
.IE	ENTRY	connected peer	get name of					51
.SE PAGINATE NEW-PAGE 52
.CE MAN-PAGE 1 GETPGRP(2) 52
.IE	ENTRY	getpgrp		\fLgetpgrp\fP				52
.IE	ENTRY	processes and protection	getpgrp		\fLgetpgrp\fP			52
.IE	ENTRY	process group	get					52
.SE PAGINATE NEW-PAGE 53
.CE MAN-PAGE 1 GETPID(2) 53
.IE	ENTRY	getpid		\fLgetpid\fP				53
.IE	ENTRY	processes and protection	getpid		\fLgetpid\fP			53
.IE	ENTRY	getppid		\fLgetppid\fP				53
.IE	ENTRY	processes and protection	getppid		\fLgetppid\fP			53
.IE	ENTRY	get process identification						53
.IE	ENTRY	get parent process identification						53
.IE	ENTRY	process identification	get					53
.IE	ENTRY	parent process identification	get					53
.SE PAGINATE NEW-PAGE 54
.CE MAN-PAGE 1 GETPRIORITY(2) 54
.IE	ENTRY	getpriority		\fLgetpriority\fP				54
.IE	ENTRY	resource controls	getpriority		\fLgetpriority\fP			54
.IE	ENTRY	setpriority		\fLsetpriority\fP				54
.IE	ENTRY	resource controls	setpriority		\fLsetpriority\fP			54
.IE	ENTRY	get scheduling priority						54
.IE	ENTRY	set scheduling priority						54
.IE	ENTRY	scheduling priority	get					54
.IE	ENTRY	scheduling priority	set					54
.IE	ENTRY	priority	get					54
.IE	ENTRY	priority	set					54
.SE PAGINATE NEW-PAGE 55
.CE MAN-PAGE 1 GETRLIMIT(2) 55
.IE	ENTRY	getrlimit		\fLgetrlimit\fP				55
.IE	ENTRY	resource control	getrlimit		\fLgetrlimit\fP			55
.IE	ENTRY	setrlimit		\fLsetrlimit\fP				55
.IE	ENTRY	resource control	setrlimit		\fLsetrlimit\fP			55
.SE PAGINATE NEW-PAGE 56
.SE PAGINATE NEW-PAGE 57
.CE MAN-PAGE 1 GETRUSAGE(2) 57
.IE	ENTRY	getrusage		\fLgetrusage\fP				57
.IE	ENTRY	resource control	getrusage		\fLgetrusage\fP			57
.IE	ENTRY	resource utilization	get information about					57
.SE PAGINATE NEW-PAGE 58
.SE PAGINATE NEW-PAGE 59
.CE MAN-PAGE 1 GETSOCKNAME(2) 59
.IE	ENTRY	getsockname		\fLgetsockname\fP				59
.IE	ENTRY	socket operations	getsockname		\fLgetsockname\fP			59
.IE	ENTRY	interprocess communication	getsockname		\fLgetsockname\fP			59
.SE PAGINATE NEW-PAGE 60
.CE MAN-PAGE 1 GETSOCKOPT(2) 60
.IE	ENTRY	getsockopt		\fLgetsockopt\fP				60
.IE	ENTRY	socket operations	getsockopt		\fLgetsockopt\fP			60
.IE	ENTRY	interprocess communication	getsockopt		\fLgetsockopt\fP			60
.IE	ENTRY	setsockopt		\fLsetsockopt\fP				60
.IE	ENTRY	socket operations	setsockopt		\fLsetsockopt\fP			60
.IE	ENTRY	interprocess communication	setsockopt		\fLsetsockopt\fP			60
.IE	ENTRY	socket options	get					60
.IE	ENTRY	socket options	set					60
.IE	ENTRY	options on sockets	get					60
.IE	ENTRY	options on sockets	set					60
.IE	ENTRY	get options sockets						60
.IE	ENTRY	set options sockets						60
.SE PAGINATE NEW-PAGE 61
.CE MAN-PAGE 1 GETTIMEOFDAY(2) 61
.IE	ENTRY	gettimeofday		\fLgettimeofday\fP				61
.IE	ENTRY	timing and statistics	gettimeofday		\fLgettimeofday\fP			61
.IE	ENTRY	get date and time						61
.IE	ENTRY	time	and date, get					61
.IE	ENTRY	date	and time, get					61
.IE	ENTRY	settimeofday		\fLsettimeofday\fP				61
.IE	ENTRY	timing and statistics	settimeofday		\fLsettimeofday\fP			61
.IE	ENTRY	set date and time						61
.IE	ENTRY	time	and date, set					61
.IE	ENTRY	date	and time, set					61
.SE PAGINATE NEW-PAGE 62
.CE MAN-PAGE 1 GETUID(2) 62
.IE	ENTRY	getuid		\fLgetuid\fP				62
.IE	ENTRY	processes and protection	getuid		\fLgetuid\fP			62
.IE	ENTRY	user ID	get					62
.IE	ENTRY	real user ID	get					62
.IE	ENTRY	geteuid		\fLgeteuid\fP				62
.IE	ENTRY	processes and protection	geteuid		\fLgeteuid\fP			62
.IE	ENTRY	effective user ID	get					62
.SE PAGINATE NEW-PAGE 63
.CE MAN-PAGE 1 IOCTL(2) 63
.IE	ENTRY	ioctl		\fLioctl\fP				63
.IE	ENTRY	generic operations	ioctl		\fLioctl\fP			63
.IE	ENTRY	control devices	ioctl		\fLioctl\fP			63
.IE	ENTRY	device control	ioctl		\fLioctl\fP			63
.SE PAGINATE NEW-PAGE 64
.CE MAN-PAGE 1 KILL(2) 64
.IE	ENTRY	kill		\fLkill\fP				64
.IE	ENTRY	signals	kill		\fLkill\fP			64
.IE	ENTRY	process	send signal to					64
.IE	ENTRY	send signal to process						64
.SE PAGINATE NEW-PAGE 65
.CE MAN-PAGE 1 KILLPG(2) 65
.IE	ENTRY	killpg		\fLkillpg\fP				65
.IE	ENTRY	signals	killpg		\fLkillpg\fP			65
.IE	ENTRY	process group	send signal to					65
.IE	ENTRY	send signal to process group						65
.SE PAGINATE NEW-PAGE 66
.CE MAN-PAGE 1 LINK(2) 66
.IE	ENTRY	link		\fLlink\fP				66
.IE	ENTRY	file system	link		\fLlink\fP			66
.IE	ENTRY	make hard link to file						66
.IE	ENTRY	file	make hard link to					66
.IE	ENTRY	hard link to file						66
.SE PAGINATE NEW-PAGE 67
.CE MAN-PAGE 1 LISTEN(2) 67
.IE	ENTRY	listen		\fLlisten\fP				67
.IE	ENTRY	socket operations	listen		\fLlisten\fP			67
.IE	ENTRY	interprocess communication	listen		\fLlisten\fP			67
.IE	ENTRY	connections	listen for on socket					67
.SE PAGINATE NEW-PAGE 68
.CE MAN-PAGE 1 LSEEK(2) 68
.IE	ENTRY	lseek		\fLlseek\fP				68
.IE	ENTRY	file system	lseek		\fLlseek\fP			68
.IE	ENTRY	file position	move					68
.IE	ENTRY	move file position						68
.IE	ENTRY	read/write pointer	move					68
.IE	ENTRY	tell		\fLtell\fP				68
.IE	ENTRY	file system	tell		\fLtell\fP			68
.SE PAGINATE NEW-PAGE 69
.CE MAN-PAGE 1 MKDIR(2) 69
.IE	ENTRY	mkdir		\fLmkdir\fP				69
.IE	ENTRY	file system	mkdir		\fLmkdir\fP			69
.IE	ENTRY	directory	make					69
.IE	ENTRY	make directory						69
.IE	ENTRY	create directory						69
.SE PAGINATE NEW-PAGE 70
.SE PAGINATE NEW-PAGE 71
.CE MAN-PAGE 1 MKNOD(2) 71
.IE	ENTRY	mknod		\fLmknod\fP				71
.IE	ENTRY	file system	mknod		\fLmknod\fP			71
.IE	ENTRY	make special file						71
.IE	ENTRY	create special file						71
.IE	ENTRY	special file	make					71
.SE PAGINATE NEW-PAGE 72
.SE PAGINATE NEW-PAGE 73
.CE MAN-PAGE 1 MMAP(2) 73
.IE	ENTRY	mmap		\fLmmap\fP				73
.IE	ENTRY	memory management	mmap		\fLmmap\fP			73
.IE	ENTRY	map memory pages						73
.SE PAGINATE NEW-PAGE 74
.CE MAN-PAGE 1 MOUNT(2) 74
.IE	ENTRY	mount		\fLmount\fP				74
.IE	ENTRY	file system	mount		\fLmount\fP			74
.IE	ENTRY	system operation support	mount		\fLmount\fP			74
.SE PAGINATE NEW-PAGE 75
.SE PAGINATE NEW-PAGE 76
.CE MAN-PAGE 1 MSGCTL(2) 76
.IE	ENTRY	msgctl		\fLmsgctl\fR				76
.IE	ENTRY	message control operations	msgctl		\fLmsgctl\fR			76
.SE PAGINATE NEW-PAGE 77
.CE MAN-PAGE 1 MSGGET(2) 77
.IE	ENTRY	msgget		\fLmsgget\fR				77
.IE	ENTRY	message control operations	msgget		\fLmsgget\fR			77
.SE PAGINATE NEW-PAGE 78
.CE MAN-PAGE 1 MSGOP(2) 78
.IE	ENTRY	msgsnd		\fLmsgsnd\fR				78
.IE	ENTRY	message control operations	msgsnd		\fLmsgsnd\fR			78
.SE PAGINATE NEW-PAGE 79
.SE PAGINATE NEW-PAGE 80
.SE PAGINATE NEW-PAGE 81
.CE MAN-PAGE 1 MUNMAP(2) 81
.IE	ENTRY	unmap		\fLunmap\fP				81
.IE	ENTRY	memory management	unmap		\fLunmap\fP			81
.IE	ENTRY	unmap memory pages						81
.SE PAGINATE NEW-PAGE 82
.CE MAN-PAGE 1 NFSSVC(2) 82
.IE	ENTRY	nfssvc		\fLnfssvc\fP				82
.IE	ENTRY	socket operations	nfssvc		\fLnfssvc\fP			82
.IE	ENTRY	network file system daemons						82
.IE	ENTRY	daemons	network file system					82
.IE	ENTRY	async_daemon		\fLasync_daemon\fP				82
.IE	ENTRY	socket operations	async_daemon		\fLasync_daemon\fP			82
.SE PAGINATE NEW-PAGE 83
.CE MAN-PAGE 1 OPEN(2V) 83
.IE	ENTRY	open		\fLopen\fP				83
.IE	ENTRY	file system	open		\fLopen\fP			83
.IE	ENTRY	file system	create file		create file \(em \fLopen\fP			83
.IE	ENTRY	create file open		create file \(em \fLopen\fP				83
.SE PAGINATE NEW-PAGE 84
.SE PAGINATE NEW-PAGE 85
.SE PAGINATE NEW-PAGE 86
.CE MAN-PAGE 1 PIPE(2) 86
.IE	ENTRY	pipe		\fLpipe\fP				86
.IE	ENTRY	interprocess communication	pipe		\fLpipe\fP			86
.IE	ENTRY	create interprocess communication channel pipe		create interprocess communication channel \(em \fLpipe\fP				86
.IE	ENTRY	make interprocess communication channel pipe		make interprocess communication channel \(em \fLpipe\fP				86
.SE PAGINATE NEW-PAGE 87
.CE MAN-PAGE 1 PROFIL(2) 87
.IE	ENTRY	profil		\fLprofil\fP				87
.IE	ENTRY	timing and statistics	profil		\fLprofil\fP			87
.IE	ENTRY	statistics	profil		\fLprofil\fP			87
.SE PAGINATE NEW-PAGE 88
.CE MAN-PAGE 1 PTRACE(2) 88
.IE	ENTRY	ptrace		\fLptrace\fP		PAGE	START	88
.IE	ENTRY	processes and protection	ptrace		\fLptrace\fP	PAGE	START	88
.IE	ENTRY	process tracing ptrace		process tracing \(em \fLptrace\fP		PAGE	START	88
.IE	ENTRY	trace process ptrace		trace process \(em \fLptrace\fP		PAGE	START	88
.SE PAGINATE NEW-PAGE 89
.SE PAGINATE NEW-PAGE 90
.IE	ENTRY	ptrace		\fLptrace\fP		PAGE	END	90
.IE	ENTRY	processes and protection	ptrace		\fLptrace\fP	PAGE	END	90
.IE	ENTRY	process tracing ptrace		process tracing \(em \fLptrace\fP		PAGE	END	90
.IE	ENTRY	trace process ptrace		trace process \(em \fLptrace\fP		PAGE	END	90
.SE PAGINATE NEW-PAGE 91
.CE MAN-PAGE 1 QUOTACTL(2) 91
.IE	ENTRY	file system	quotactl disk quotas		\fLquotactl\fP \(em disk quotas			91
.IE	ENTRY	quotactl disk quotas		\fLquotactl\fP \(em disk quotas				91
.IE	ENTRY	disk quotas quotactl		disk quotas \(em \fLquotactl\fP				91
.SE PAGINATE NEW-PAGE 92
.SE PAGINATE NEW-PAGE 93
93
.CE MAN-PAGE 1 READ(2V) 93
.IE	ENTRY	read		\fLread\fP				93
.IE	ENTRY	generic operations	read		\fLread\fP			93
.IE	ENTRY	read scattered readv		read scattered \(em \fLreadv\fP				93
.IE	ENTRY	generic operations	scatter read readv		scatter read \(em \fLreadv\fP			93
.IE	ENTRY	scatter read readv		scatter read \(em \fLreadv\fP				93
.SE PAGINATE NEW-PAGE 94
.SE PAGINATE NEW-PAGE 95
.CE MAN-PAGE 1 READLINK(2) 95
.IE	ENTRY	readlink		\fLreadlink\fP				95
.IE	ENTRY	file system	readlink		\fLreadlink\fP			95
.IE	ENTRY	symbolic link	read value of					95
.IE	ENTRY	link	read value of symbolic					95
.SE PAGINATE NEW-PAGE 96
.CE MAN-PAGE 1 REBOOT(2) 96
.IE	ENTRY	reboot		\fLreboot\fP				96
.IE	ENTRY	system operation support	reboot		\fLreboot\fP			96
.IE	ENTRY	halt processor						96
.IE	ENTRY	stop processor						96
.SE PAGINATE NEW-PAGE 97
.CE MAN-PAGE 1 RECV(2) 97
.IE	ENTRY	recv		\fLrecv\fP				97
.IE	ENTRY	socket operations	recv		\fLrecv\fP			97
.IE	ENTRY	interprocess communication	recv		\fLrecv\fP			97
.IE	ENTRY	recvfrom		\fLrecvfrom\fP				97
.IE	ENTRY	socket operations	recvfrom		\fLrecvfrom\fP			97
.IE	ENTRY	interprocess communication	recvfrom		\fLrecvfrom\fP			97
.IE	ENTRY	recvmsg		\fLrecvmsg\fP				97
.IE	ENTRY	socket operations	recvmsg		\fLrecvmsg\fP			97
.IE	ENTRY	interprocess communication	recvmsg		\fLrecvmsg\fP			97
.IE	ENTRY	receive message from socket						97
.IE	ENTRY	message	receive from socket					97
.SE PAGINATE NEW-PAGE 98
.SE PAGINATE NEW-PAGE 99
.CE MAN-PAGE 1 RENAME(2) 99
.IE	ENTRY	rename file		rename file \(em \fLrename\fP				99
.IE	ENTRY	file system	rename file		rename file \(em \fLrename\fP			99
.IE	ENTRY	change file name rename		change file name \(em \fLrename\fP				99
.IE	ENTRY	filename	change rename		change \(em \fLrename\fP			99
.SE PAGINATE NEW-PAGE 100
.SE PAGINATE NEW-PAGE 101
.CE MAN-PAGE 1 RMDIR(2) 101
.IE	ENTRY	rmdir		\fLrmdir\fP \(em remove directory				101
.IE	ENTRY	file system	remove directory rmdir		remove directory \(em \fLrmdir\fP			101
.IE	ENTRY	file system	erase directory rmdir		erase directory \(em \fLrmdir\fP			101
.IE	ENTRY	file system	delete directory rmdir		delete directory \(em \fLrmdir\fP			101
.IE	ENTRY	directory	remove rmdir		remove \(em \fLrmdir\fP			101
.IE	ENTRY	directory	delete rmdir		delete \(em \fLrmdir\fP			101
.IE	ENTRY	directory	erase rmdir		erase \(em \fLrmdir\fP			101
.IE	ENTRY	remove directory rmdir		remove directory \(em \fLrmdir\fP				101
.IE	ENTRY	delete directory rmdir		delete directory \(em \fLrmdir\fP				101
.IE	ENTRY	erase directory rmdir		erase directory \(em \fLrmdir\fP				101
.SE PAGINATE NEW-PAGE 102
.CE MAN-PAGE 1 SELECT(2) 102
.IE	ENTRY	select		\fLselect\fP				102
.IE	ENTRY	descriptors	select		\fLselect\fP			102
.IE	ENTRY	synchronous I/O multiplexing						102
.SE PAGINATE NEW-PAGE 103
.CE MAN-PAGE 1 SEMCTL(2) 103
.IE	ENTRY	semctl		\fLsemctl\fR				103
.IE	ENTRY	semaphore control operations	semctl		\fLsemctl\fR			103
.SE PAGINATE NEW-PAGE 104
.SE PAGINATE NEW-PAGE 105
.CE MAN-PAGE 1 SEMGET(2) 105
.IE	ENTRY	semget		\fLsemget\fR				105
.IE	ENTRY	semaphores, get set of	semget		\fLsemget\fR			105
.SE PAGINATE NEW-PAGE 106
.CE MAN-PAGE 1 SEMOP(2) 106
.IE	ENTRY	semop		\fLsemop\fR				106
.IE	ENTRY	semaphore operations	semop		\fLsemop\fR			106
.SE PAGINATE NEW-PAGE 107
.SE PAGINATE NEW-PAGE 108
.SE PAGINATE NEW-PAGE 109
.CE MAN-PAGE 1 SEND(2) 109
.IE	ENTRY	send		\fLsend\fP				109
.IE	ENTRY	socket operations	send		\fLsend\fP			109
.IE	ENTRY	interprocess communication	send		\fLsend\fP			109
.IE	ENTRY	sendto		\fLsendto\fP				109
.IE	ENTRY	socket operations	sendto		\fLsendto\fP			109
.IE	ENTRY	interprocess communication	sendto		\fLsendto\fP			109
.IE	ENTRY	sendmsg		\fLsendmsg\fP				109
.IE	ENTRY	socket operations	sendmsg		\fLsendmsg\fP			109
.IE	ENTRY	interprocess communication	sendmsg		\fLsendmsg\fP			109
.IE	ENTRY	send message from socket						109
.IE	ENTRY	message	send from socket					109
.SE PAGINATE NEW-PAGE 110
.CE MAN-PAGE 1 SETGROUPS(2) 110
.IE	ENTRY	setgroups		\fLsetgroups\fP				110
.IE	ENTRY	processes and protection	setgroups		\fLsetgroups\fP			110
.IE	ENTRY	groups access list	set					110
.SE PAGINATE NEW-PAGE 111
.CE MAN-PAGE 1 SETPGRP(2) 111
.IE	ENTRY	setpgrp		\fLsetpgrp\fP				111
.IE	ENTRY	processes and protection	setpgrp		\fLsetpgrp\fP			111
.IE	ENTRY	processes group	set					111
.SE PAGINATE NEW-PAGE 112
.CE MAN-PAGE 1 SETREGID(2) 112
.IE	ENTRY	setregid		\fLsetregid\fP				112
.IE	ENTRY	processes and protection	setregid		\fLsetregid\fP			112
.IE	ENTRY	group ID	set real and effective					112
.IE	ENTRY	real group ID	set					112
.IE	ENTRY	effective group ID	set					112
.SE PAGINATE NEW-PAGE 113
.CE MAN-PAGE 1 SETREUID(2) 113
.IE	ENTRY	setreuid		\fLsetreuid\fP				113
.IE	ENTRY	processes and protection	setreuid		\fLsetreuid\fP			113
.IE	ENTRY	user ID	set real and effective					113
.IE	ENTRY	real user ID	set					113
.IE	ENTRY	effective user ID	set					113
.SE PAGINATE NEW-PAGE 114
.CE MAN-PAGE 1 SHMCTL(2) 114
.IE	ENTRY	shmctl		\fLshmctl\fR				114
.IE	ENTRY	shared memory control operations	shmctl		\fLshmctl\fR			114
.SE PAGINATE NEW-PAGE 115
.CE MAN-PAGE 1 SHMGET(2) 115
.IE	ENTRY	shmget		\fLshmget\fR				115
.IE	ENTRY	shared memory segment	shmget		\fLshmget\fR			115
.SE PAGINATE NEW-PAGE 116
.SE PAGINATE NEW-PAGE 117
.CE MAN-PAGE 1 SHMOP(2) 117
.IE	ENTRY	shmop		\fLshmop\fR				117
.IE	ENTRY	shmat		\fLshmat\fR				117
.IE	ENTRY	shmdt		\fLshmdt\fR				117
.IE	ENTRY	shared memory control operations	shmop		\fLshmop\fR			117
.IE	ENTRY	shared memory attach	shmat		\fLshmat\fR			117
.IE	ENTRY	shared memory detach	shmdt		\fLshmdt\fR			117
.SE PAGINATE NEW-PAGE 118
.SE PAGINATE NEW-PAGE 119
.CE MAN-PAGE 1 SHUTDOWN(2) 119
.IE	ENTRY	shutdown		\fLshutdown\fP				119
.IE	ENTRY	socket operations	shutdown		\fLshutdown\fP			119
.IE	ENTRY	interprocess communication	shutdown		\fLshutdown\fP			119
.IE	ENTRY	full-duplex connection	shut down					119
.SE PAGINATE NEW-PAGE 120
.CE MAN-PAGE 1 SIGBLOCK(2) 120
.IE	ENTRY	sigblock		\fLsigblock\fP				120
.IE	ENTRY	signals	sigblock		\fLsigblock\fP			120
.IE	ENTRY	block signals						120
.SE PAGINATE NEW-PAGE 121
.CE MAN-PAGE 1 SIGPAUSE(2) 121
.IE	ENTRY	sigpause		\fLsigpause\fP				121
.IE	ENTRY	signals	sigpause		\fLsigpause\fP			121
.IE	ENTRY	release blocked signals						121
.IE	ENTRY	blocked signals	release					121
.IE	ENTRY	interrupts	release blocked signals					121
.SE PAGINATE NEW-PAGE 122
.CE MAN-PAGE 1 SIGSETMASK(2) 122
.IE	ENTRY	sigsetmask		\fLsigsetmask\fP				122
.IE	ENTRY	signals	sigsetmask		\fLsigsetmask\fP			122
.IE	ENTRY	set current signal mask						122
.IE	ENTRY	mask	set current signal					122
.SE PAGINATE NEW-PAGE 123
.CE MAN-PAGE 1 SIGSTACK(2) 123
.IE	ENTRY	sigstack		\fLsigstack\fP				123
.IE	ENTRY	signals	sigstack		\fLsigstack\fP			123
.IE	ENTRY	set signal stack context						123
.IE	ENTRY	get signal stack context						123
.SE PAGINATE NEW-PAGE 124
.CE MAN-PAGE 1 SIGVEC(2) 124
.IE	ENTRY	sigvec software signals		\fLsigvec\fP \(em software signals		PAGE	START	124
.IE	ENTRY	signals	sigvec		\fLsigvec\fP	PAGE	START	124
.IE	ENTRY	software signals	sigvec		\fLsigvec\fP	PAGE	START	124
.IE	ENTRY	processes	software signals sigvec		software signals \(em \fLsigvec\fP	PAGE	START	124
.SE PAGINATE NEW-PAGE 125
.SE PAGINATE NEW-PAGE 126
.SE PAGINATE NEW-PAGE 127
.IE	ENTRY	sigvec software signals		\fLsigvec\fP \(em software signals		PAGE	END	127
.IE	ENTRY	signals	sigvec		\fLsigvec\fP	PAGE	END	127
.IE	ENTRY	software signals	sigvec		\fLsigvec\fP	PAGE	END	127
.IE	ENTRY	processes	software signals sigvec		software signals \(em \fLsigvec\fP	PAGE	END	127
.SE PAGINATE NEW-PAGE 128
.CE MAN-PAGE 1 SOCKET(2) 128
.IE	ENTRY	socket		\fLsocket\fP				128
.IE	ENTRY	socket operations	socket		\fLsocket\fP			128
.IE	ENTRY	interprocess communication	socket		\fLsocket\fP			128
.IE	ENTRY	create interprocess communication endpoint						128
.IE	ENTRY	make interprocess communication endpoint						128
.SE PAGINATE NEW-PAGE 129
.SE PAGINATE NEW-PAGE 130
.CE MAN-PAGE 1 SOCKETPAIR(2) 130
.IE	ENTRY	socketpair		\fLsocketpair\fP				130
.IE	ENTRY	socket operations	socketpair		\fLsocketpair\fP			130
.IE	ENTRY	interprocess communication	socketpair		\fLsocketpair\fP			130
.IE	ENTRY	create pair of connected sockets						130
.IE	ENTRY	make pair of connected sockets						130
.SE PAGINATE NEW-PAGE 131
.CE MAN-PAGE 1 STAT(2) 131
.IE	ENTRY	stat		\fLstat\fP \(em obtain file attributes				131
.IE	ENTRY	file attributes stat		file attributes \fLstat\fP				131
.IE	ENTRY	attributes of file stat		attributes of file \fLstat\fP				131
.IE	ENTRY	lstat		\fLlstat\fP \(em obtain file attributes				131
.IE	ENTRY	file attributes lstat		file attributes \fLlstat\fP				131
.IE	ENTRY	attributes of file lstat		attributes of file \fLlstat\fP				131
.IE	ENTRY	fstat		\fLfstat\fP \(em obtain file attributes				131
.IE	ENTRY	file attributes fstat		file attributes \fLfstat\fP				131
.IE	ENTRY	attributes of file fstat		attributes of file \fLfstat\fP				131
.SE PAGINATE NEW-PAGE 132
.SE PAGINATE NEW-PAGE 133
.CE MAN-PAGE 1 STATFS(2) 133
.IE	ENTRY	statfs		\fLstatfs\fP \(em obtain file system statistics				133
.IE	ENTRY	file system statistics statfs		file system statistics \(em \fLstatfs\fP				133
.IE	ENTRY	statistics of file system statfs		statistics of file system \(em \fLstatfs\fP				133
.IE	ENTRY	fstatfs		\fLfstatfs\fP \(em obtain file system statistics				133
.IE	ENTRY	file system statistics fstatfs		file system statistics \(em \fLfstatfs\fP				133
.IE	ENTRY	statistics of file system fstatfs		statistics of file system \(em \fLfstatfs\fP				133
.SE PAGINATE NEW-PAGE 134
.SE PAGINATE NEW-PAGE 135
.CE MAN-PAGE 1 SWAPON(2) 135
.IE	ENTRY	system operation support	swapon		\fLswapon\fP \(em specify paging device			135
.IE	ENTRY	swapon		\fLswapon\fP \(em specify paging device				135
.IE	ENTRY	paging device		paging device \(em \fLswapon\fP				135
.IE	ENTRY	swapping device		swapping device \(em \fLswapon\fP				135
.IE	ENTRY	specify paging/swapping device		specify paging/swapping device \(em \fLswapon\fP				135
.SE PAGINATE NEW-PAGE 136
.CE MAN-PAGE 1 SYMLINK(2) 136
.IE	ENTRY	symlink		\fLsymlink\fP				136
.IE	ENTRY	file system	symlink		\fLsymlink\fP			136
.IE	ENTRY	create symbolic link						136
.IE	ENTRY	make symbolic link						136
.IE	ENTRY	symbolic link	create					136
.IE	ENTRY	link	make symbolic					136
.SE PAGINATE NEW-PAGE 137
.CE MAN-PAGE 1 SYNC(2) 137
.IE	ENTRY	sync		\fLsync\fP				137
.IE	ENTRY	system operation support	sync		\fLsync\fP			137
.IE	ENTRY	super block	update					137
.IE	ENTRY	update super block						137
.SE PAGINATE NEW-PAGE 138
.CE MAN-PAGE 1 SYSCALL(2) 138
.IE	ENTRY	syscall		\fLsyscall\fP				138
.IE	ENTRY	indirect system call						138
.SE PAGINATE NEW-PAGE 139
.CE MAN-PAGE 1 TRUNCATE(2) 139
.IE	ENTRY	truncate		\fLtruncate\fP				139
.IE	ENTRY	file system	truncate		\fLtruncate\fP			139
.IE	ENTRY	ftruncate		\fLftruncate\fP				139
.IE	ENTRY	file system	ftruncate		\fLftruncate\fP			139
.SE PAGINATE NEW-PAGE 140
.CE MAN-PAGE 1 UMASK(2) 140
.IE	ENTRY	umask		\fLumask\fP				140
.IE	ENTRY	file system	umask		\fLumask\fP			140
.IE	ENTRY	set file creation mode mask						140
.IE	ENTRY	set user mask						140
.IE	ENTRY	user mask	set					140
.SE PAGINATE NEW-PAGE 141
.CE MAN-PAGE 1 UNLINK(2) 141
.IE	ENTRY	unlink		\fLunlink\fP \(em remove directory entry				141
.IE	ENTRY	file system	remove directory entry unlink		remove directory entry \(em \fLunlink\fP			141
.IE	ENTRY	file system	delete directory entry unlink		delete directory entry \(em \fLunlink\fP			141
.IE	ENTRY	file system	erase directory entry unlink		erase directory entry \(em \fLunlink\fP			141
.IE	ENTRY	remove directory entry unlink		remove directory entry \(em \fLunlink\fP				141
.IE	ENTRY	delete directory entry unlink		delete directory entry \(em \fLunlink\fP				141
.IE	ENTRY	erase directory entry unlink		erase directory entry \(em \fLunlink\fP				141
.SE PAGINATE NEW-PAGE 142
.CE MAN-PAGE 1 UNMOUNT(2) 142
.IE	ENTRY	unmount		\fLunmount\fP \(em demount file system				142
.IE	ENTRY	file system	unmount		\fLunmount\fP \(em demount file system			142
.IE	ENTRY	file system	demount		\fLunmount\fP \(em demount file system			142
.IE	ENTRY	remove file system unmount		remove file system \(em \fLunmount\fP				142
.IE	ENTRY	demount file system unmount		demount file system \(em \fLunmount\fP				142
.SE PAGINATE NEW-PAGE 143
.CE MAN-PAGE 1 UTIMES(2) 143
.IE	ENTRY	utimes		\fLutimes\fP				143
.IE	ENTRY	file system	utimes		\fLutimes\fP			143
.IE	ENTRY	change file access times						143
.IE	ENTRY	access times of file	change					143
.SE PAGINATE NEW-PAGE 144
.CE MAN-PAGE 1 VADVISE(2) 144
.IE	ENTRY	vadvise		\fLvadvise\fP				144
.IE	ENTRY	system operation support	vadvise		\fLvadvise\fP			144
.IE	ENTRY	advise paging system						144
.IE	ENTRY	paging system	advise					144
.SE PAGINATE NEW-PAGE 145
.CE MAN-PAGE 1 VFORK(2) 145
.IE	ENTRY	vfork		\fLvfork\fP				145
.IE	ENTRY	processes and protection	vfork		\fLvfork\fP			145
.IE	ENTRY	spawn process						145
.SE PAGINATE NEW-PAGE 146
.CE MAN-PAGE 1 VHANGUP(2) 146
.IE	ENTRY	vhangup		\fLvhangup\fP				146
.IE	ENTRY	processes and protection	vhangup		\fLvhangup\fP			146
.IE	ENTRY	control terminal	hangup					146
.IE	ENTRY	hangup control terminal						146
.SE PAGINATE NEW-PAGE 147
.CE MAN-PAGE 1 WAIT(2) 147
.IE	ENTRY	wait		\fLwait\fP				147
.IE	ENTRY	processes and protection	wait		\fLwait\fP			147
.IE	ENTRY	wait3		\fLwait3\fP				147
.IE	ENTRY	processes and protection	wait3		\fLwait3\fP			147
.SE PAGINATE NEW-PAGE 148
.SE PAGINATE NEW-PAGE 149
.CE MAN-PAGE 1 WRITE(2V) 149
.IE	ENTRY	write		\fLwrite\fP				149
.IE	ENTRY	generic operations	write		\fLwrite\fP			149
.IE	ENTRY	write gathered writev		write gathered \(em \fLwritev\fP				149
.IE	ENTRY	generic operations	gather write writev		gather write \(em \fLwritev\fP			149
.IE	ENTRY	gather write writev		gather write \(em \fLwritev\fP				149
.SE PAGINATE NEW-PAGE 150
.SE PAGINATE NEW-PAGE 151
151
.CE MAN-PAGE 1 INTRO(3) 151
.IE	ENTRY	introduction	C library functions			PAGE	START	151
.IE	ENTRY	C library functions	introduction to			PAGE	START	151
.IE	ENTRY	library functions	introduction to C			PAGE	START	151
.SE PAGINATE NEW-PAGE 152
.SE PAGINATE NEW-PAGE 153
.SE PAGINATE NEW-PAGE 154
.SE PAGINATE NEW-PAGE 155
.SE PAGINATE NEW-PAGE 156
.SE PAGINATE NEW-PAGE 157
.IE	ENTRY	introduction	C library functions			PAGE	END	157
.IE	ENTRY	C library functions	introduction to			PAGE	END	157
.IE	ENTRY	library functions	introduction to C			PAGE	END	157
.SE PAGINATE NEW-PAGE 158
.CE MAN-PAGE 1 A64L(3) 158
.IE	ENTRY	a64l function		\fLa64l\fP \(em convert long integer to base-64 \s-2ASCII\s0				158
.IE	ENTRY	l64a function		\fLl64a\fP \(em convert base-64 \s-2ASCII\s0				158
.IE	ENTRY	convert long integer to base-64 \s-2ASCII\s0 \(em \fLl64a\fP						158
.IE	ENTRY	convert base-64 \s-2ASCII\s0 to long integer \(em \fLl64a\fP						158
.SE PAGINATE NEW-PAGE 159
.CE MAN-PAGE 1 ABORT(3) 159
.IE	ENTRY	abort function		\fLabort\fP \(em generate fault				159
.IE	ENTRY	generate fault		generate fault \(em \fLabort\fP				159
.IE	ENTRY	terminate program	terminate program \(em \fLabort\fP					159
.SE PAGINATE NEW-PAGE 160
.CE MAN-PAGE 1 ABS(3) 160
.IE	ENTRY	abs function		\fLabs\fP \(em integer absolute value				160
.IE	ENTRY	integer absolute value		integer absolute value \(em \fLabs\fP				160
.IE	ENTRY	absolute value		absolute value \(em \fLabs\fP				160
.SE PAGINATE NEW-PAGE 161
.CE MAN-PAGE 1 ASSERT(3) 161
.IE	ENTRY	assert function		\fLassert\fP \(em program verification				161
.IE	ENTRY	program verification		program verification \(em \fLassert\fP				161
.IE	ENTRY	debugging support		debugging support \(em \fLassert\fP				161
.SE PAGINATE NEW-PAGE 162
.CE MAN-PAGE 1 BSEARCH(3) 162
.IE	ENTRY	bsearch function		\fLbsearch\fR \(em binary search of a sorted table				162
.IE	ENTRY	binary search of sorted table \(em \fLbsearch\fR						162
.IE	ENTRY	search functions	bsearch		\fLbsearch\fR binary search			162
.SE PAGINATE NEW-PAGE 163
.SE PAGINATE NEW-PAGE 164
.CE MAN-PAGE 1 BSTRING(3) 164
.IE	ENTRY	bcopy function		\fLbcopy\fP \(em copy byte strings				164
.IE	ENTRY	byte string functions	bcopy		\fLbcopy\fP			164
.IE	ENTRY	copy byte strings \(em bcopy		copy byte strings \(em \fLbcopy\fP				164
.IE	ENTRY	bcmp function		\fLbcmp\fP \(em compare byte strings				164
.IE	ENTRY	byte string functions	bcmp		\fLbcmp\fP			164
.IE	ENTRY	compare byte strings \(em bcmp		compare byte strings \(em \fLbcmp\fP				164
.IE	ENTRY	bzero function		\fLbzero\fP \(em zero byte strings				164
.IE	ENTRY	byte string functions	bzero		\fLbzero\fP			164
.IE	ENTRY	zero byte strings \(em bzero		zero byte strings \(em \fLbzero\fP				164
.IE	ENTRY	ffs function		\fLffs\fP \(em find first one bit				164
.IE	ENTRY	bit string functions	ffs		\fLffs\fP			164
.IE	ENTRY	find first one bit \(em \fLffs\fP						164
.SE PAGINATE NEW-PAGE 165
.CE MAN-PAGE 1 CRYPT(3) 165
.IE	ENTRY	crypt function		\fLcrypt\fP \(em encryption				165
.IE	ENTRY	encryption	crypt		\fLcrypt\fP			165
.IE	ENTRY	setkey function		\fLsetkey\fP \(em encryption				165
.IE	ENTRY	encryption	setkey		\fLsetkey\fP			165
.IE	ENTRY	encrypt function		\fLencrypt\fP \(em encryption				165
.IE	ENTRY	encryption	encrypt		\fLencrypt\fP			165
.SE PAGINATE NEW-PAGE 166
.CE MAN-PAGE 1 CTIME(3) 166
.IE	ENTRY	ctime function		\fLctime\fP \(em date and time conversion				166
.IE	ENTRY	date and time conversion	ctime		\fLctime\fP			166
.IE	ENTRY	time and date conversion	ctime		\fLctime\fP			166
.IE	ENTRY	convert time and date	ctime		\fLctime\fP			166
.IE	ENTRY	localtime function		\fLlocaltime\fP \(em date and time conversion				166
.IE	ENTRY	date and time conversion	localtime		\fLlocaltime\fP			166
.IE	ENTRY	time and date conversion	localtime		\fLlocaltime\fP			166
.IE	ENTRY	convert time and date	localtime		\fLlocaltime\fP			166
.IE	ENTRY	gmtime function		\fLgmtime\fP \(em date and time conversion				166
.IE	ENTRY	date and time conversion	gmtime		\fLgmtime\fP			166
.IE	ENTRY	time and date conversion	gmtime		\fLgmtime\fP			166
.IE	ENTRY	convert time and date	gmtime		\fLgmtime\fP			166
.IE	ENTRY	asctime function		\fLasctime\fP \(em date and time conversion				166
.IE	ENTRY	date and time conversion	asctime		\fLasctime\fP			166
.IE	ENTRY	time and date conversion	asctime		\fLasctime\fP			166
.IE	ENTRY	convert time and date	asctime		\fLasctime\fP			166
.IE	ENTRY	timezone function		\fLtimezone\fP \(em date and time conversion				166
.IE	ENTRY	date and time conversion	timezone		\fLtimezone\fP			166
.IE	ENTRY	time and date conversion	timezone		\fLtimezone\fP			166
.IE	ENTRY	convert time and date	timezone		\fLtimezone\fP			166
.SE PAGINATE NEW-PAGE 167
.IE	ENTRY	dysize function		\fLdysize\fP \(em date and time conversion				167
.IE	ENTRY	date and time conversion	dysize		\fLdysize\fP			167
.IE	ENTRY	time and date conversion	dysize		\fLdysize\fP			167
.IE	ENTRY	convert time and date	dysize		\fLdysize\fP			167
.SE PAGINATE NEW-PAGE 168
.CE MAN-PAGE 1 CTYPE(3) 168
.IE	ENTRY	character classification	isalpha		\fLisalpha\fP			168
.IE	ENTRY	isalpha macro		\fLisalpha\fP \(em is character letter				168
.IE	ENTRY	character classification	isupper		\fLisupper\fP			168
.IE	ENTRY	isupper macro		\fLisupper\fP \(em is character upper-case				168
.IE	ENTRY	character classification	islower		\fLislower\fP			168
.IE	ENTRY	islower macro		\fLislower\fP \(em is character lower-case				168
.IE	ENTRY	character classification	isdigit		\fLisdigit\fP			168
.IE	ENTRY	isdigit macro		\fLisdigit\fP \(em is character digit				168
.IE	ENTRY	character classification	isxdigit		\fLisxdigit\fP			168
.IE	ENTRY	isxdigit macro		\fLisxdigit\fP \(em is character hex digit				168
.IE	ENTRY	character classification	isalnum		\fLisalnum\fP			168
.IE	ENTRY	isalnum macro		\fLisalnum\fP \(em is character alphanumeric				168
.IE	ENTRY	character classification	isspace		\fLisspace\fP			168
.IE	ENTRY	isspace macro		\fLisspace\fP \(em is character whitespace				168
.IE	ENTRY	character classification	ispunct		\fLispunct\fP			168
.IE	ENTRY	ispunct macro		\fLispunct\fP \(em is character punctuation				168
.IE	ENTRY	character classification	isprint		\fLisprint\fP			168
.IE	ENTRY	isprint macro		\fLisprint\fP \(em is character printable				168
.IE	ENTRY	character classification	iscntrl		\fLiscntrl\fP			168
.IE	ENTRY	iscntrl macro		\fLiscntrl\fP \(em is character control				168
.IE	ENTRY	character classification	isascii		\fLisascii\fP			168
.IE	ENTRY	isascii macro		\fLisascii\fP \(em is character ASCII				168
.IE	ENTRY	character classification	isgraph		\fLisgraph\fP			168
.IE	ENTRY	isgraph macro		\fLisgraph\fP \(em is character graphic				168
.IE	ENTRY	character conversion	toupper		\fLtoupper\fP			168
.IE	ENTRY	toupper macro		\fLtoupper\fP \(em convert character to upper-case				168
.IE	ENTRY	convert character to upper-case \(em \fLtoupper\fP						168
.IE	ENTRY	character conversion	tolower		\fLtolower\fP			168
.IE	ENTRY	tolower macro		\fLtolower\fP \(em convert character to lower-case				168
.IE	ENTRY	convert character to lower-case \(em \fLtolower\fP						168
.IE	ENTRY	character conversion	toascii		\fLtoascii\fP			168
.IE	ENTRY	toascii macro		\fLtoascii\fP \(em convert character to ASCII				168
.IE	ENTRY	convert character to ASCII \(em \fLtoascii\fP						168
.SE PAGINATE NEW-PAGE 169
.CE MAN-PAGE 1 DES_CRYPT(3) 169
.IE	ENTRY		"DES	encryption"	ecb_crypt		\fLecb_crypt\fP		169
.IE	ENTRY		"encryption"	cbc_crypt		\fLcbc_crypt\fP			169
.IE	ENTRY		"DES	encryption"	cbc_crypt		\fLcbc_crypt\fP		169
.IE	ENTRY		"encryption"	des_setparity		\fLdes_setparity\fP			169
.IE	ENTRY		"DES	encryption"	des_setparity		\fLdes_setparity\fP		169
.SE PAGINATE NEW-PAGE 170
.CE MAN-PAGE 1 DIRECTORY(3) 170
.IE	ENTRY	opendir function		\fLopendir\fP \(em open directory stream				170
.IE	ENTRY	open directory stream \(em \fLopendir\fP						170
.IE	ENTRY	directory operations	opendir		\fLopendir\fP			170
.IE	ENTRY	readdir function		\fLreaddir\fP \(em read directory stream				170
.IE	ENTRY	read directory stream \(em \fLreaddir\fP						170
.IE	ENTRY	directory operations	readdir		\fLreaddir\fP			170
.IE	ENTRY	telldir function		\fLtelldir\fP \(em position of directory stream				170
.IE	ENTRY	position of directory stream \(em \fLtelldir\fP						170
.IE	ENTRY	directory operations	telldir		\fLtelldir\fP			170
.IE	ENTRY	seekdir function		\fLseekdir\fP \(em seek in directory stream				170
.IE	ENTRY	seek in directory stream \(em \fLseekdir\fP						170
.IE	ENTRY	directory operations	seekdir		\fLseekdir\fP			170
.IE	ENTRY	rewinddir function		\fLrewinddir\fP \(em rewind directory stream				170
.IE	ENTRY	rewind directory stream \(em \fLrewinddir\fP						170
.IE	ENTRY	directory operations	rewinddir		\fLrewinddir\fP			170
.IE	ENTRY	closedir function		\fLclosedir\fP \(em close directory stream				170
.IE	ENTRY	close directory stream \(em \fLclosedir\fP						170
.IE	ENTRY	directory operations	closedir		\fLclosedir\fP			170
.SE PAGINATE NEW-PAGE 171
.CE MAN-PAGE 1 DRAND48(3) 171
.IE	ENTRY	drand48 function		\fLdrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	erand48 function		\fLerand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	lrand48 function		\fLlrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	nrand48 function		\fLnrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	mrand48 function		\fLmrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	jrand48 function		\fLjrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	srand48 function		\fLsrand48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	seed48 function		\fLseed48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	lcong48  function		\fLlcong48\fR \(em generate uniformly distributed random numbers				171
.IE	ENTRY	random number generator drand48		random number generator \fLdrand48\fR				171
.IE	ENTRY	random number generator erand48		random number generator \fLerand48\fR				171
.IE	ENTRY	random number generator jrand48		random number generator \fLjrand48\fR				171
.IE	ENTRY	random number generator lrand48		random number generator \fLlrand48\fR				171
.IE	ENTRY	random number generator mrand48		random number generator \fLmrand48\fR				171
.IE	ENTRY	random number generator nrand48		random number generator \fLnrand48\fR				171
.IE	ENTRY	random number generator srand48		random number generator \fLsrand48\fR				171
.IE	ENTRY	random number generator seed48		random number generator \fLseed48\fR				171
.IE	ENTRY	random number generator lcong48		random number generator \fLlcong48\fR				171
.IE	ENTRY	generate random numbers	drand48		\fLdrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	erand48		\fLerand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	jrand48		\fLjrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	lrand48		\fLlrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	mrand48		\fLmrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	nrand48		\fLnrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	srand48		\fLsrand48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	seed48		\fLseed48\fR \(em uniformly distributed random number routines			171
.IE	ENTRY	generate random numbers	lcong48		\fLlcong48\fR \(em uniformly distributed random number routines			171
.SE PAGINATE NEW-PAGE 172
.SE PAGINATE NEW-PAGE 173
.CE MAN-PAGE 1 ECVT(3) 173
.IE	ENTRY	numbers	convert to strings					173
.IE	ENTRY	strings	convert from numbers					173
.IE	ENTRY	ecvt function		\fLecvt\fP \(em convert number to ASCII				173
.IE	ENTRY	convert numbers to strings	ecvt		\fLecvt\fP			173
.IE	ENTRY	fcvt function		\fLfcvt\fP \(em convert number to ASCII				173
.IE	ENTRY	convert numbers to strings	fcvt		\fLfcvt\fP			173
.IE	ENTRY	gcvt function		\fLgcvt\fP \(em convert number to ASCII				173
.IE	ENTRY	convert numbers to strings	gcvt		\fLgcvt\fP			173
.SE PAGINATE NEW-PAGE 174
.CE MAN-PAGE 1 END(3) 174
.IE	ENTRY	last locations in program						174
.IE	ENTRY	end locations in program						174
.IE	ENTRY	end location		\fLend\fP \(em end of program				174
.IE	ENTRY	etext location		\fLetext\fP \(em end of program text				174
.IE	ENTRY	edata location		\fLedata\fP \(em end of program data				174
.SE PAGINATE NEW-PAGE 175
.CE MAN-PAGE 1 EXECL(3) 175
.IE	ENTRY	execl function		\fLexecl\fP \(em execute file				175
.IE	ENTRY	execute file	execl function		\fLexecl\fP			175
.IE	ENTRY	execv function		\fLexecv\fP \(em execute file				175
.IE	ENTRY	execute file	execv function		\fLexecv\fP			175
.IE	ENTRY	execle function		\fLexecle\fP \(em execute file				175
.IE	ENTRY	execute file	execle function		\fLexecle\fP			175
.IE	ENTRY	execlp function		\fLexeclp\fP \(em execute file				175
.IE	ENTRY	execute file	execlp function		\fLexeclp\fP			175
.IE	ENTRY	execvp function		\fLexecvp\fP \(em execute file				175
.IE	ENTRY	execute file	execvp function		\fLexecvp\fP			175
.IE	ENTRY	environ function		\fLenviron\fP \(em execute file				175
.IE	ENTRY	execute file	environ function		\fLenviron\fP			175
.IE	ENTRY	execute file						175
.SE PAGINATE NEW-PAGE 176
.SE PAGINATE NEW-PAGE 177
.CE MAN-PAGE 1 EXIT(3) 177
.IE	ENTRY	exit function		\fLexit\fP \(em terminate process				177
.IE	ENTRY	terminate process		terminate process \(em \fLexit\fP				177
.IE	ENTRY	process	terminate and cleanup	process	terminate and cleanup \(em \fLexit\fP			177
.SE PAGINATE NEW-PAGE 178
.CE MAN-PAGE 1 FREXP(3) 178
.IE	ENTRY	frexp function		\fLfrexp\fP \(em split into mantissa and exponent				178
.IE	ENTRY	ldexp function		\fLldexp\fP \(em split into mantissa and exponent				178
.IE	ENTRY	modf function		\fLmodf\fP \(em split into mantissa and exponent				178
.IE	ENTRY	split into mantissa and exponent						178
.IE	ENTRY	mantissa and exponent	split into					178
.IE	ENTRY	exponent and mantissa	split into					178
.SE PAGINATE NEW-PAGE 179
.CE MAN-PAGE 1 FTOK(3) 179
.SE PAGINATE NEW-PAGE 180
.CE MAN-PAGE 1 FTW(3) 180
.SE PAGINATE NEW-PAGE 181
.CE MAN-PAGE 1 GETCWD(3) 181
.IE	ENTRY	get pathname of current working directory getcwd		get pathname of current working directory \(em \fLgetcwd\fR				181
.IE	ENTRY	getcwd function		\fLgetcwd\fR \(em get pathname of current directory				181
.IE	ENTRY	current working directory getcwd		current working directory \(em \fLgetcwd\fR				181
.SE PAGINATE NEW-PAGE 182
.CE MAN-PAGE 1 GETENV(3) 182
.IE	ENTRY	getenv function		\fLgetenv\fP \(em get value from environment				182
.IE	ENTRY	get environment value		get environment value \(em \fLgetenv\fP				182
.IE	ENTRY	environment	get value		get value \(em \fLgetenv\fP			182
.SE PAGINATE NEW-PAGE 183
.CE MAN-PAGE 1 GETFSENT(3) 183
.IE	ENTRY	getfsent function		\fLgetfsent\fP \(em get file system descriptor file entry				183
.IE	ENTRY	getfsspec function		\fLgetfsspec\fP \(em get file system descriptor file entry				183
.IE	ENTRY	getfsfile function		\fLgetfsfile\fP \(em get file system descriptor file entry				183
.IE	ENTRY	getfstype function		\fLgetfstype\fP \(em get file system descriptor file entry				183
.IE	ENTRY	setfsent function		\fLsetfsent\fP \(em get file system descriptor file entry				183
.IE	ENTRY	endfsent function		\fLendfsent\fP \(em get file system descriptor file entry				183
.IE	ENTRY	file system	get file descriptor entry					183
.IE	ENTRY	get file system descriptor file entry						183
.SE PAGINATE NEW-PAGE 184
.CE MAN-PAGE 1 GETGRENT(3) 184
.IE	ENTRY	getgrent function		\fLgetgrent\fP \(em get group file entry				184
.IE	ENTRY	getgrgid function		\fLgetgrgid\fP \(em get group file entry				184
.IE	ENTRY	getgrnam function		\fLgetgrnam\fP \(em get group file entry				184
.IE	ENTRY	setgrent function		\fLsetgrent\fP \(em get group file entry				184
.IE	ENTRY	endgrent function		\fLendgrent\fP \(em get group file entry				184
.IE	ENTRY	fgetgrent function		\fLfgetgrent\fP \(em get group file entry				184
.IE	ENTRY	get group file entry	getgrent		\fLgetgrent\fP			184
.IE	ENTRY	get group file entry	getgrgid		\fLgetgrgid\fP			184
.IE	ENTRY	get group file entry	getgrnam		\fLgetgrnam\fP			184
.IE	ENTRY	get group file entry	setgrent		\fLsetgrent\fP			184
.IE	ENTRY	get group file entry	endgrent		\fLendgrent\fP			184
.IE	ENTRY	get group file entry	fgetgrent		\fLfgetgrent\fP			184
.IE	ENTRY	group file entry	get					184
.SE PAGINATE NEW-PAGE 185
.SE PAGINATE NEW-PAGE 186
.CE MAN-PAGE 1 GETLOGIN(3) 186
.IE	ENTRY	getlogin function		\fLgetlogin\fP \(em get login name				186
.IE	ENTRY	get login name		get login name \(em \fLgetlogin\fP				186
.IE	ENTRY	login name	get		get \(em \fLgetlogin\fP			186
.SE PAGINATE NEW-PAGE 187
.CE MAN-PAGE 1 GETMNTENT(3) 187
.IE	ENTRY	setmntent function		\fLsetmntent\fP \(em get filesystem descriptor file entry				187
.IE	ENTRY	getmntent function		\fLgetmntent\fP \(em get filesystem descriptor file entry				187
.IE	ENTRY	addmntent function		\fLaddmntent\fP \(em get filesystem descriptor file entry				187
.IE	ENTRY	endmntent function		\fLendmntent\fP \(em get filesystem descriptor file entry				187
.IE	ENTRY	hasmntopt function		\fLhasmntopt\fP \(em get filesystem descriptor file entry				187
.IE	ENTRY	get filesystem descriptor file entry	setmntent		\fLsetmntent\fP			187
.IE	ENTRY	get filesystem descriptor file entry	getmntent		\fLgetmntent\fP			187
.IE	ENTRY	get filesystem descriptor file entry	addmntent		\fLaddmntent\fP			187
.IE	ENTRY	get filesystem descriptor file entry	endmntent		\fLendmntent\fP			187
.IE	ENTRY	get filesystem descriptor file entry	hasmntopt		\fLhasmntopt\fP			187
.IE	ENTRY	filesystem descriptor	get file entry					187
.SE PAGINATE NEW-PAGE 188
.SE PAGINATE NEW-PAGE 189
.CE MAN-PAGE 1 GETOPT(3) 189
.IE	ENTRY	get option letter from argument vector		get option letter from argument vector \(em \fLgetopt\fP				189
.IE	ENTRY	option letter	get from argument vector		get from argument vector \(em \fLgetopt\fP			189
.IE	ENTRY	argument	vector	get option letter	argument	vector	get option letter \(em \fLgetopt\fP	189
.IE	ENTRY	getopt function		\fLgetopt\fP \(em get option letter				189
.IE	ENTRY	optarg		\fLoptarg\fP \(em get option letter				189
.IE	ENTRY	optind		\fLoptind\fP \(em get option letter				189
.SE PAGINATE NEW-PAGE 190
.SE PAGINATE NEW-PAGE 191
.CE MAN-PAGE 1 GETPASS(3) 191
.IE	ENTRY	getpass function		\fLgetpass\fP \(em read password				191
.IE	ENTRY	read password		read password \(em \fLgetpass\fP				191
.IE	ENTRY	password	read		read \(em \fLgetpass\fP			191
.SE PAGINATE NEW-PAGE 192
.CE MAN-PAGE 1 GETPW(3) 192
.IE	ENTRY	getpw function		\fLgetpw\fP \(em get name from uid				192
.SE PAGINATE NEW-PAGE 193
.CE MAN-PAGE 1 GETPWENT(3) 193
.IE	ENTRY	getpwent function		\fLgetpwent\fP \(em get password file entry				193
.IE	ENTRY	getpwuid function		\fLgetpwuid\fP \(em get password file entry				193
.IE	ENTRY	getpwnam function		\fLgetpwnam\fP \(em get password file entry				193
.IE	ENTRY	setpwent function		\fLsetpwent\fP \(em get password file entry				193
.IE	ENTRY	endpwent function		\fLendpwent\fP \(em get password file entry				193
.IE	ENTRY	fgetpwent function		\fLfgetpwent\fP \(em get password file entry				193
.IE	ENTRY	get password file entry	getpwent		\fLgetpwent\fP			193
.IE	ENTRY	get password file entry	getpwuid		\fLgetpwuid\fP			193
.IE	ENTRY	get password file entry	getpwnam		\fLgetpwnam\fP			193
.IE	ENTRY	get password file entry	setpwent		\fLsetpwent\fP			193
.IE	ENTRY	get password file entry	endpwent		\fLendpwent\fP			193
.IE	ENTRY	get password file entry	fgetpwent		\fLfgetpwent\fP			193
.IE	ENTRY	password file	get entry getpwent		get entry \(em \fLgetpwent\fP			193
.IE	ENTRY	password file	get entry getpwuid		get entry \(em \fLgetpwuid\fP			193
.IE	ENTRY	password file	get entry getpwnam		get entry \(em \fLgetpwnam\fP			193
.IE	ENTRY	password file	get entry setpwent		get entry \(em \fLsetpwent\fP			193
.IE	ENTRY	password file	get entry endpwent		get entry \(em \fLendpwent\fP			193
.IE	ENTRY	password file	get entry fgetpwent		get entry \(em \fLfgetpwent\fP			193
.SE PAGINATE NEW-PAGE 194
.SE PAGINATE NEW-PAGE 195
.CE MAN-PAGE 1 GETWD(3) 195
.IE	ENTRY	getwd function		\fLgetwd\fP \(em get current working directory pathname				195
.IE	ENTRY	get current working directory pathname		get current working directory pathname \(em \fLgetwd\fP				195
.IE	ENTRY	current directory	get pathname		get pathname \(em \fLgetwd\fP			195
.IE	ENTRY	working directory	get pathname		get pathname \(em \fLgetwd\fP			195
.SE PAGINATE NEW-PAGE 196
.CE MAN-PAGE 1 HSEARCH(3) 196
.IE	ENTRY	hsearch function		\fLhsearch\fR \(em hash table search routine				196
.IE	ENTRY	hash table search routine \(em \fLhsearch\fR						196
.IE	ENTRY	search functions	hsearch		\fLhsearch\fR \(em hash table search			196
.IE	ENTRY	hcreate function		\fLhcreate\fR \(em create hash table				196
.IE	ENTRY	create hash table \(em \fLhcreate\fR						196
.IE	ENTRY	hdestroy function		\fLhdestroy\fR \(em destroy hash table				196
.IE	ENTRY	destroy hash table \(em \fLhdestroy\fR						196
.SE PAGINATE NEW-PAGE 197
.SE PAGINATE NEW-PAGE 198
.CE MAN-PAGE 1 INITGROUPS(3) 198
.IE	ENTRY	initgroups function		\fLinitgroups\fP \(em initialize group access list				198
.IE	ENTRY	initialize group access list		initialize group access list \(em \fLinitgroups\fP				198
.IE	ENTRY	group access list	initialize		initialize \(em \fLinitgroups\fP			198
.SE PAGINATE NEW-PAGE 199
.CE MAN-PAGE 1 INSQUE(3) 199
.IE	ENTRY	insque function		\fLinsque\fP \(em insert element in queue				199
.IE	ENTRY	remque function		\fLremque\fP \(em remove element from queue				199
.IE	ENTRY	insert element in queue		insert element in queue \(em \fLinsque\fP				199
.IE	ENTRY	remove element from queue		remove element from queue \(em \fLremque\fP				199
.IE	ENTRY	queue	insert element in	queue	insert element in \(em \fLinsque\fP			199
.IE	ENTRY	queue	remove element from	queue	remove element from \(em \fLremque\fP			199
.SE PAGINATE NEW-PAGE 200
.CE MAN-PAGE 1 ISINF(3) 200
.IE	ENTRY	isinf function		\fLisinf\fP \(em test infinite value				200
.IE	ENTRY	isnan function		\fLisnan\fP \(em test not a number				200
.IE	ENTRY	test for indeterminate floating values	isinf		\fLisinf\fP \(em test infinite value			200
.IE	ENTRY	test for indeterminate floating values	isnan		\fLisnan\fP \(em test not a number			200
.IE	ENTRY	floating point	isinf test infinite value		\fLisinf\fP \(em test infinite value			200
.IE	ENTRY	floating point	isnan test not a number		\fLisnan\fP \(em test not a number			200
.IE	ENTRY	indeterminate floating point values	test for					200
.SE PAGINATE NEW-PAGE 201
.CE MAN-PAGE 1 LOCKF(3) 201
.IE	ENTRY	lockf		\fLlockf\fP				201
.IE	ENTRY	descriptors	lockf		\fLlockf\fP			201
.IE	ENTRY	lock	record	lock	record \(em \fLlockf\fP			201
.SE PAGINATE NEW-PAGE 202
.SE PAGINATE NEW-PAGE 203
.CE MAN-PAGE 1 LSEARCH(3) 203
.IE	ENTRY	lsearch function		\fLlsearch\fR \(em linear search and update routine				203
.IE	ENTRY	linear search and update routine \(em \fLlsearch\fR						203
.IE	ENTRY	search functions	lsearch		\fLlsearch\fR \(em linear search and update			203
.IE	ENTRY	lfind function		\fLlfind\fR \(em linear search routine				203
.IE	ENTRY	linear search routine \(em \fLlfind\fR						203
.SE PAGINATE NEW-PAGE 204
.SE PAGINATE NEW-PAGE 205
.CE MAN-PAGE 1 MALLOC(3) 205
.IE	ENTRY	memory management				PAGE	START	205
.IE	ENTRY	storage allocation				PAGE	START	205
.IE	ENTRY	storage management				PAGE	START	205
.IE	ENTRY	memory management	malloc		\fLmalloc\fP \(em allocate memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	malloc		\fLmalloc\fP \(em allocate memory	PAGE	MAJOR	205
.IE	ENTRY	malloc		\fLmalloc\fP \(em allocate memory		PAGE	MAJOR	205
.IE	ENTRY	allocate memory malloc		allocate memory \(em \fLmalloc\fP		PAGE	MAJOR	205
.IE	ENTRY	memory management	free		\fLfree\fP \(em free memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	free		\fLfree\fP \(em free memory	PAGE	MAJOR	205
.IE	ENTRY	free		\fLfree\fP \(em free memory		PAGE	MAJOR	205
.IE	ENTRY	free memory free		free memory \(em \fLfree\fP		PAGE	MAJOR	205
.IE	ENTRY	memory management	realloc		\fLrealloc\fP \(em reallocate memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	realloc		\fLrealloc\fP \(em reallocate memory	PAGE	MAJOR	205
.IE	ENTRY	realloc		\fLrealloc\fP \(em reallocate memory		PAGE	MAJOR	205
.IE	ENTRY	reallocate memory realloc		reallocate memory \(em \fLrealloc\fP		PAGE	MAJOR	205
.IE	ENTRY	memory management	calloc		\fLcalloc\fP \(em allocate memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	calloc		\fLcalloc\fP \(em allocate memory	PAGE	MAJOR	205
.IE	ENTRY	calloc		\fLcalloc\fP \(em allocate memory		PAGE	MAJOR	205
.IE	ENTRY	allocate memory calloc		allocate memory \(em \fLcalloc\fP		PAGE	MAJOR	205
.IE	ENTRY	memory management	cfree		\fLcfree\fP \(em free memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	cfree		\fLcfree\fP \(em free memory	PAGE	MAJOR	205
.IE	ENTRY	cfree		\fLcfree\fP \(em free memory		PAGE	MAJOR	205
.IE	ENTRY	free memory cfree		free memory \(em \fLcfree\fP		PAGE	MAJOR	205
.IE	ENTRY	memory management	memalign		\fLmemalign\fP \(em allocate aligned memory	PAGE	MAJOR	205
.IE	ENTRY	storage allocation	memalign		\fLmemalign\fP \(em allocate aligned memory	PAGE	MAJOR	205
.IE	ENTRY	memalign		\fLmemalign\fP \(em allocate aligned memory		PAGE	MAJOR	205
.IE	ENTRY	allocate aligned memory memalign		allocate aligned memory \(em \fLmemalign\fP		PAGE	MAJOR	205
.SE PAGINATE NEW-PAGE 206
.IE	ENTRY	memory management	valloc		\fLvalloc\fP \(em allocate aligned memory	PAGE	MAJOR	206
.IE	ENTRY	storage allocation	valloc		\fLvalloc\fP \(em allocate aligned memory	PAGE	MAJOR	206
.IE	ENTRY	valloc		\fLvalloc\fP \(em allocate aligned memory		PAGE	MAJOR	206
.IE	ENTRY	allocate aligned memory valloc		allocate aligned memory \(em \fLvalloc\fP		PAGE	MAJOR	206
.IE	ENTRY	memory management	alloca		\fLalloca\fP \(em allocate on stack	PAGE	MAJOR	206
.IE	ENTRY	storage allocation	alloca		\fLalloca\fP \(em allocate on stack	PAGE	MAJOR	206
.IE	ENTRY	alloca		\fLalloca\fP \(em allocate on stack		PAGE	MAJOR	206
.IE	ENTRY	allocate on stack alloca		allocate on stack \(em \fLalloca\fP		PAGE	MAJOR	206
.IE	ENTRY	memory management debugging				PAGE	START	206
.IE	ENTRY	memory allocation debugging				PAGE	START	206
.IE	ENTRY	storage management debugging				PAGE	START	206
.IE	ENTRY	debugging	memory management				PAGE	206
.IE	ENTRY	memory management	malloc_debug		\fLmalloc_debug\fP \(em set debug level	PAGE	MAJOR	206
.IE	ENTRY	storage allocation	malloc_debug		\fLmalloc_debug\fP \(em set debug level	PAGE	MAJOR	206
.IE	ENTRY	debugging memory management	malloc_debug		\fLmalloc_debug\fP \(em set debug level	PAGE	MAJOR	206
.IE	ENTRY	malloc_debug		\fLmalloc_debug\fP \(em set debug level		PAGE	MAJOR	206
.IE	ENTRY	set memory management debug level malloc_debug		set memory management debug level \(em \fLmalloc_debug\fP		PAGE	MAJOR	206
.IE	ENTRY	memory management	malloc_verify		\fLmalloc_verify\fP \(em verify heap	PAGE	MAJOR	206
.IE	ENTRY	storage allocation	malloc_verify		\fLmalloc_verify\fP \(em verify heap	PAGE	MAJOR	206
.IE	ENTRY	debugging memory management	malloc_verify		\fLmalloc_verify\fP \(em verify heap	PAGE	MAJOR	206
.IE	ENTRY	malloc_verify		\fLmalloc_verify\fP \(em verify heap		PAGE	MAJOR	206
.IE	ENTRY	verify heap malloc_verify		verify heap \(em \fLmalloc_verify\fP		PAGE	MAJOR	206
.IE	ENTRY	check heap malloc_verify		check heap \(em \fLmalloc_verify\fP		PAGE	MAJOR	206
.SE PAGINATE NEW-PAGE 207
.IE	ENTRY	memory management debugging				PAGE	END	207
.IE	ENTRY	memory allocation debugging				PAGE	END	207
.IE	ENTRY	storage management debugging				PAGE	END	207
.IE	ENTRY	debugging	memory management				PAGE	207
.IE	ENTRY	memory management				PAGE	END	207
.IE	ENTRY	storage allocation				PAGE	END	207
.IE	ENTRY	storage management				PAGE	END	207
.SE PAGINATE NEW-PAGE 208
.CE MAN-PAGE 1 MEMORY(3) 208
.IE	ENTRY	memccpy function		\fLmemccpy\fR \(em copy memory character strings				208
.IE	ENTRY	copy memory character strings memccpy		copy memory character strings \(em \fLmemccpy\fR				208
.IE	ENTRY	memchr function		\fLmemchr\fR \(em index memory characters				208
.IE	ENTRY	index memory characters memchr		index memory characters \(em \fLmemchr\fR				208
.IE	ENTRY	memcmp function		\fLmemcmp\fR compare memory characters				208
.IE	ENTRY	compare memory characters memcmp		compare memory characters \(em \fLmemcmp\fR				208
.IE	ENTRY	memcpy function		\fLmemcpy\fR copy memory character fields				208
.IE	ENTRY	copy memory character fields memcpy		copy memory character fields \fLmemcpy\fR				208
.IE	ENTRY	memset  function		\fLmemset\fR assign to memory characters				208
.IE	ENTRY	assign to memory characters memset		assign to memory characters				208
.IE	ENTRY	memory operations						208
.SE PAGINATE NEW-PAGE 209
.CE MAN-PAGE 1 MKTEMP(3) 209
.IE	ENTRY	mktemp function		\fLmktemp\fP \(em make unique file name				209
.IE	ENTRY	make unique file name		make unique file name \(em \fLmktemp\fP				209
.IE	ENTRY	create unique file name		create unique file name \(em \fLmktemp\fP				209
.IE	ENTRY	unique file name	create	unique file name	create \(em \fLmktemp\fP			209
.SE PAGINATE NEW-PAGE 210
.CE MAN-PAGE 1 MONITOR(3) 210
.IE	ENTRY	monitor function		\fLmonitor\fP \(em make execution profile				210
.IE	ENTRY	monstartup function		\fLmonstartup\fP \(em make execution profile				210
.IE	ENTRY	moncontrol function		\fLmoncontrol\fP \(em make execution profile				210
.IE	ENTRY	prepare execution profile	monitor		\fLmonitor\fP \(em make execution profile			210
.IE	ENTRY	prepare execution profile	monstartup		\fLmonstartup\fP \(em make execution profile			210
.IE	ENTRY	prepare execution profile	moncontrol		\fLmoncontrol\fP \(em make execution profile			210
.IE	ENTRY	execution profile	prepare					210
.IE	ENTRY	profile	prepare execution					210
.SE PAGINATE NEW-PAGE 211
.SE PAGINATE NEW-PAGE 212
.CE MAN-PAGE 1 NLIST(3) 212
.IE	ENTRY	nlist function		\fLnlist\fP \(em get entries from name list				212
.IE	ENTRY	get entries from name list		get entries from name list \(em \fLnlist\fP				212
.IE	ENTRY	name list	get entries from					212
.SE PAGINATE NEW-PAGE 213
.CE MAN-PAGE 1 ON_EXIT(3) 213
.IE	ENTRY	on_exit function		\fLon_exit\fP \(em name termination handler				213
.IE	ENTRY	name termination handler		name termination handler \(em \fLon_exit\fP				213
.IE	ENTRY	termination handler	name		name\(em \fLon_exit\fP			213
.SE PAGINATE NEW-PAGE 214
.CE MAN-PAGE 1 PERROR(3) 214
.IE	ENTRY	perror function		\fLperror\fP \(em system error messages				214
.IE	ENTRY	sys_errlist function		\fLsys_errlist\fP \(em system error messages				214
.IE	ENTRY	sys_nerr function		\fLsys_nerr\fP \(em system error messages				214
.IE	ENTRY	errno function		\fLerrno\fP \(em system error messages				214
.IE	ENTRY	system error messages	perror		\fLperror\fP \(em system error messages			214
.IE	ENTRY	system error messages	sys_errlist		\fLsys_errlist\fP \(em system error messages			214
.IE	ENTRY	system error messages	sys_nerr		\fLsys_nerr\fP \(em system error messages			214
.IE	ENTRY	system error messages	errno		\fLerrno\fP \(em system error messages			214
.IE	ENTRY	error messages						214
.IE	ENTRY	messages	system error					214
.SE PAGINATE NEW-PAGE 215
.CE MAN-PAGE 1 PROF(3) 215
.IE	ENTRY	prof		\fLprof\fR \(em profile within a function				215
.IE	ENTRY	profiling, within a function		\fLprof\fR				215
.SE PAGINATE NEW-PAGE 216
.CE MAN-PAGE 1 PSIGNAL(3) 216
.IE	ENTRY	psignal function		\fLpsignal\fP \(em system signal messages				216
.IE	ENTRY	sys_siglist function		\fLsys_siglist\fP \(em system signal messages				216
.IE	ENTRY	system signal messages	psignal		system signal messages \(em \fLpsignal\fP			216
.IE	ENTRY	system signal messages	sys_siglist		system signal messages \(em \fLsys_siglist\fP			216
.IE	ENTRY	signal messages	psignal		signal messages \(em \fLpsignal\fP			216
.IE	ENTRY	signal messages	sys_siglist		signal messages \(em \fLsys_siglist\fP			216
.IE	ENTRY	messages	system signal					216
.SE PAGINATE NEW-PAGE 217
.CE MAN-PAGE 1 PUTENV(3) 217
.IE	ENTRY	putenv function		\fLputenv\fP \(em set environment value				217
.IE	ENTRY	set environment value		set environment value \(em \fLputenv\fP				217
.IE	ENTRY	environment	set value		set value \(em \fLputenv\fP			217
.SE PAGINATE NEW-PAGE 218
.CE MAN-PAGE 1 PUTPWENT(3) 218
.IE	ENTRY	putpwent function		\fLputpwent\fP \(em add password file entry				218
.IE	ENTRY	add password file entry	putpwent		\fLputpwent\fP			218
.IE	ENTRY	password file	add entry putpwent		add entry \(em \fLputpwent\fP			218
.SE PAGINATE NEW-PAGE 219
.CE MAN-PAGE 1 QSORT(3) 219
.IE	ENTRY	qsort function		\fLqsort\fP \(em quicker sort				219
.IE	ENTRY	quicker sort		quicker sort \(em \fLqsort\fP				219
.IE	ENTRY	sort quicker		sort quicker \(em \fLqsort\fP				219
.SE PAGINATE NEW-PAGE 220
.CE MAN-PAGE 1 RANDOM(3) 220
.IE	ENTRY	random function		\fLrandom\fP \(em generate random number				220
.IE	ENTRY	srandom function		\fLsrandom\fP \(em generate random number				220
.IE	ENTRY	initstate function		\fLinitstate\fP \(em random number routines				220
.IE	ENTRY	setstate function		\fLsetstate\fP \(em random number routines				220
.IE	ENTRY	random number generator	random		\fLrandom\fP \(em generate random number			220
.IE	ENTRY	random number generator	srandom		\fLsrandom\fP \(em generate random number			220
.IE	ENTRY	random number generator	initstate		\fLinitstate\fP \(em random number routines			220
.IE	ENTRY	random number generator	setstate		\fLsetstate\fP \(em random number routines			220
.IE	ENTRY	generate random numbers	random		\fLrandom\fP \(em generate random number			220
.IE	ENTRY	generate random numbers	srandom		\fLsrandom\fP \(em generate random number			220
.IE	ENTRY	generate random numbers	initstate		\fLinitstate\fP \(em random number routines			220
.IE	ENTRY	generate random numbers	setstate		\fLsetstate\fP \(em random number routines			220
.SE PAGINATE NEW-PAGE 221
.SE PAGINATE NEW-PAGE 222
.CE MAN-PAGE 1 REGEX(3) 222
.IE	ENTRY	re_comp function		\fLre_comp\fP \(em compile regular expression				222
.IE	ENTRY	re_exec function		\fLre_exec\fP \(em execute regular expression				222
.IE	ENTRY	regular expressions	compile	regular expressions	compile \(em\fLre_comp\fP			222
.IE	ENTRY	regular expressions	execute	regular expressions	execute \(em \fLre_exec\fP			222
.IE	ENTRY	compile regular expression		compile regular expression \(em \fLre_comp\fP				222
.IE	ENTRY	execute regular expression		execute regular expression \(em \fLre_exec\fP				222
.SE PAGINATE NEW-PAGE 223
.CE MAN-PAGE 1 REGEXP(3) 223
.IE	ENTRY	regexp		\fLregexp\fR \(em regular expression compile and match routines				223
.IE	ENTRY	regular expression compile and match routines	regexp		\fLregexp\fR			223
.SE PAGINATE NEW-PAGE 224
.SE PAGINATE NEW-PAGE 225
.SE PAGINATE NEW-PAGE 226
.CE MAN-PAGE 1 RESOLVER(3) 226
.IE	ENTRY	Internet name server routines						226
.IE	ENTRY	name server routines, Internet						226
.IE	ENTRY	res_mkquery		\fLres_mkquery\fR \(em Internet name servers				226
.IE	ENTRY	res_send		\fLres_send\fR \(em Internet name server routines				226
.IE	ENTRY	res_init		\fLres_init\fR \(em Internet name server routines				226
.IE	ENTRY	dn_comp		\fLdn_comp\fR \(em Internet name server routines				226
.IE	ENTRY	dn_expand		\fLdn_expand\fR \(em Internet name server routines				226
.SE PAGINATE NEW-PAGE 227
.SE PAGINATE NEW-PAGE 228
.CE MAN-PAGE 1 SCANDIR(3) 228
.IE	ENTRY	scandir function		\fLscandir\fP \(em scan directory				228
.IE	ENTRY	alphasort function		\fLalphasort\fP \(em sort directory				228
.IE	ENTRY	scan directory scandir		scan directory \(em \fLscandir\fP				228
.IE	ENTRY	scan directory alphasort		scan directory \(em \fLalphasort\fP				228
.IE	ENTRY	directory	scan					228
.SE PAGINATE NEW-PAGE 229
.CE MAN-PAGE 1 SETJMP(3) 229
.IE	ENTRY	setjmpa function		\fLsetjmp\fP \(em save stack environment				229
.IE	ENTRY	setjmpb function		\fLsetjmp\fP \(em non-local goto				229
.IE	ENTRY	longjmp function		\fLlongjmp\fP \(em non-local goto				229
.IE	ENTRY	save stack environment		save stack environment \(em \fLsetjmp\fP				229
.IE	ENTRY	return to saved environment		return to saved environment \(em \fLlongjmp\fP				229
.IE	ENTRY	non-local goto	setjmp		non-local goto \(em \fLsetjmp\fP			229
.IE	ENTRY	non-local goto	longjmp		non-local goto \(em \fLlongjmp\fP			229
.SE PAGINATE NEW-PAGE 230
.SE PAGINATE NEW-PAGE 231
.CE MAN-PAGE 1 SETUID(3) 231
.IE	ENTRY	setuid function		\fLsetuid\fP \(em set user ID				231
.IE	ENTRY	seteuid function		\fLseteuid\fP \(em set effective user ID				231
.IE	ENTRY	setruid function		\fLsetruid\fP \(em set real user ID				231
.IE	ENTRY	setgid function		\fLsetgid\fP \(em set group ID				231
.IE	ENTRY	setegid function		\fLsetegid\fP \(em set effective group ID				231
.IE	ENTRY	setrgid function		\fLsetrgid\fP \(em set real group ID				231
.IE	ENTRY	user and group ID						231
.IE	ENTRY	real user ID	set					231
.IE	ENTRY	real group ID	set					231
.IE	ENTRY	effective user ID	set					231
.IE	ENTRY	effective group ID	set					231
.IE	ENTRY	set real user ID						231
.IE	ENTRY	set real group ID						231
.IE	ENTRY	set effective user ID						231
.IE	ENTRY	set effective group ID						231
.SE PAGINATE NEW-PAGE 232
.CE MAN-PAGE 1 SIGNAL(3) 232
.IE	ENTRY	signal function		\fLsignal\fP \(em software signals				232
.IE	ENTRY	software signal		software signal \(em \fLsignal\fP				232
.SE PAGINATE NEW-PAGE 233
.SE PAGINATE NEW-PAGE 234
.SE PAGINATE NEW-PAGE 235
.CE MAN-PAGE 1 SLEEP(3) 235
.IE	ENTRY	sleep function		\fLsleep\fP \(em suspend execution				235
.IE	ENTRY	suspend execution for interval		suspend execution \(em \fLsleep\fP				235
.IE	ENTRY	execution	suspend for interval					235
.SE PAGINATE NEW-PAGE 236
.CE MAN-PAGE 1 SSIGNAL(3) 236
.IE	ENTRY	signal function		\fLssignal\fP \(em software signals				236
.IE	ENTRY	software signal		software signal \(em \fLssignal\fP				236
.IE	ENTRY	signal function		\fLgsignal\fP \(em software signals				236
.IE	ENTRY	software signal		software signal \(em \fLgsignal\fP				236
.SE PAGINATE NEW-PAGE 237
.CE MAN-PAGE 1 STRING(3) 237
.IE	ENTRY	strcat function		\fLstrcat\fP \(em concatenate strings				237
.IE	ENTRY	strncat function		\fLstrncat\fP \(em concatenate strings				237
.IE	ENTRY	strcmp function		\fLstrcmp\fP \(em compare strings				237
.IE	ENTRY	strncmp function		\fLstrncmp\fP \(em compare strings				237
.IE	ENTRY	strcpy function		\fLstrcpy\fP \(em copy strings				237
.IE	ENTRY	strncpy function		\fLstrncpy\fP \(em copy strings				237
.IE	ENTRY	strlen function		\fLstrlen\fP \(em get length of string				237
.IE	ENTRY	strchr function		\fLindex\fP \(em find character in string				237
.IE	ENTRY	strrchr function		\fLrindex\fP \(em find character in string				237
.IE	ENTRY	index function		\fLindex\fP \(em find character in string				237
.IE	ENTRY	rindex function		\fLrindex\fP \(em find character in string				237
.IE	ENTRY	string operations	concatenate strcat		concatenate \(em \fLstrcat\fP			237
.IE	ENTRY	string operations	concatenate strncat		concatenate \(em \fLstrncat\fP			237
.IE	ENTRY	string operations	copy		copy \(em \fLstrcpy\fP			237
.IE	ENTRY	string operations	copyn		copy \(em \fLstrncpy\fP			237
.IE	ENTRY	string operations	compare		compare \(em \fLstrcmp\fP			237
.IE	ENTRY	string operations	comparen		compare \(em \fLstrncmp\fP			237
.IE	ENTRY	string operations	index		index \(em \fLnndex\fP			237
.IE	ENTRY	string operations	rindex		reverse index \(em \fLrindex\fP			237
.IE	ENTRY	string operations	reverse index		reverse index \(em \fLrindex\fP			237
.IE	ENTRY	concatenate strings strcat		concatenate strings \(em \fLstrcat\fP				237
.IE	ENTRY	concatenate strings strncat		concatenate strings \(em \fLstrncat\fP				237
.IE	ENTRY	copy strings strcpy		copy strings \(em \fLstrcpy\fP				237
.IE	ENTRY	copy strings strncpy		copy strings \(em \fLstrncpy\fP				237
.IE	ENTRY	compare strings strcmp		compare string \(em \fLstrcmp\fP				237
.IE	ENTRY	compare strings strncmp		compare string \(em \fLstrncmp\fP				237
.IE	ENTRY	index strings index		index strings \(em \fLindex\fP				237
.IE	ENTRY	index strings rindex		index strings \(em \fLrindex\fP				237
.IE	ENTRY	reverse index strings		reverse index strings \(em \fLrindex\fP				237
.IE	ENTRY	null-terminated strings	concatenate		concatenate \(em \fLstrcat\fP			237
.IE	ENTRY	null-terminated strings	concatenaten		concatenate \(em \fLstrncat\fP			237
.IE	ENTRY	null-terminated strings	copy		copy \(em \fLstrcpy\fP			237
.IE	ENTRY	null-terminated strings	copyn		copy \(em \fLstrncpy\fP			237
.IE	ENTRY	null-terminated strings	compare		compare \(em \fLstrcmp\fP			237
.IE	ENTRY	null-terminated strings	comparen		compare \(em \fLstrncmp\fP			237
.IE	ENTRY	null-terminated strings	index		index \(em \fLindex\fP			237
.IE	ENTRY	null-terminated strings	indexr		index \(em \fLrindex\fP			237
.IE	ENTRY	null-terminated strings	reverse index		reverse index \(em \fLrindex\fP			237
.SE PAGINATE NEW-PAGE 238
.SE PAGINATE NEW-PAGE 239
.CE MAN-PAGE 1 STRTOD(3) 239
.IE	ENTRY	strtod function		\fLstrtod\fP \(em ASCII string to double				239
.IE	ENTRY	ASCII string to double \(em \fLstrtod\fP						239
.IE	ENTRY	convert strings to numbers	strtod		\fLstrtod\fP			239
.IE	ENTRY	atof function		\fLatof\fP \(em ASCII to float				239
.IE	ENTRY	ASCII to float \(em \fLatof\fP						239
.IE	ENTRY	convert strings to numbers	atof		\fLatof\fP			239
.SE PAGINATE NEW-PAGE 240
.CE MAN-PAGE 1 STRTOL(3) 240
.IE	ENTRY	strtol function		\fLstrtol\fP \(em ASCII string to long integer				240
.IE	ENTRY	convert strings to numbers	strtol		\fLstrtol\fP			240
.IE	ENTRY	ASCII string to long integer \(em \fLstrtol\fP						240
.IE	ENTRY	atoi function		\fLatoi\fP \(em ASCII to integer				240
.IE	ENTRY	convert strings to numbers	atoi		\fLatoi\fP			240
.IE	ENTRY	ASCII to integer \(em \fLatoi\fP						240
.IE	ENTRY	atol function		\fLatol\fP \(em ASCII to long				240
.IE	ENTRY	convert strings to numbers	atol		\fLatol\fP			240
.IE	ENTRY	ASCII to long \(em \fLatol\fP						240
.SE PAGINATE NEW-PAGE 241
.CE MAN-PAGE 1 SWAB(3) 241
.IE	ENTRY	swab function		\fLswab\fP \(em swap bytes				241
.IE	ENTRY	swap bytes		swap bytes \(em \fLswab\fP				241
.SE PAGINATE NEW-PAGE 242
.CE MAN-PAGE 1 SYSLOG(3) 242
.IE	ENTRY	syslog function		\fLsyslog\fP \(em write message to system log				242
.IE	ENTRY	openlog function		\fLopenlog\fP \(em initialize system log file				242
.IE	ENTRY	closelog function		\fLcloselog\fP \(em close system log file				242
.IE	ENTRY	control system log syslog		control system log \(em \fLsyslog\fP				242
.IE	ENTRY	control system log openlog		control system log \(em \fLopenlog\fP				242
.IE	ENTRY	control system log closelog		control system log \(em \fLcloselog\fP				242
.IE	ENTRY	system log	control					242
.SE PAGINATE NEW-PAGE 243
.CE MAN-PAGE 1 SYSTEM(3) 243
.IE	ENTRY	system function		\fLsystem\fP \(em issue shell command				243
.IE	ENTRY	issue shell command		issue shell command \(em \fLsystem\fP				243
.IE	ENTRY	shell command issuing		shell command, issuing \(em \fLsystem\fP				243
.SE PAGINATE NEW-PAGE 244
.CE MAN-PAGE 1 TSEARCH(3) 244
.SE PAGINATE NEW-PAGE 245
.SE PAGINATE NEW-PAGE 246
.SE PAGINATE NEW-PAGE 247
.CE MAN-PAGE 1 TTYNAME(3) 247
.IE	ENTRY	ttyname function		\fLttyname\fP \(em find terminal name				247
.IE	ENTRY	isatty function		\fLisatty\fP \(em test if device is terminal				247
.IE	ENTRY	ttyslot function		\fLttyslot\fP \(em get tty entry number				247
.IE	ENTRY	find name of terminal						247
.IE	ENTRY	name of terminal	find					247
.IE	ENTRY	terminal	find name of					247
.SE PAGINATE NEW-PAGE 248
.CE MAN-PAGE 1 VALUES(3) 248
.IE	ENTRY	values		\fLvalues\fR \(em machine-dependent values				248
.IE	ENTRY	machine dependent		machine-dependent values \(em \fLvalues\fR				248
.SE PAGINATE NEW-PAGE 249
.CE MAN-PAGE 1 VARARGS(3) 249
.IE	ENTRY	varargs function		\fLvarargs\fP \(em variable argument list				249
.IE	ENTRY	va_start function		\fLva_start\fP \(em initialize varargs				249
.IE	ENTRY	va_arg function		\fLva_arg\fP \(em next argument in variable list				249
.IE	ENTRY	va_end function		\fLva_end\fP \(em finish variable argument list				249
.IE	ENTRY	va_dcl		\fLva_dcl\fP \(em variable argument declarations				249
.IE	ENTRY	va_list		\fLva_list\fP \(em variable argument declarations				249
.IE	ENTRY	variable argument list						249
.IE	ENTRY	argument lists	varying length					249
.SE PAGINATE NEW-PAGE 250
.SE PAGINATE NEW-PAGE 251
251
.CE MAN-PAGE 1 INTRO(3C) 251
.IE	ENTRY	introduction	compatibility library functions			PAGE	START	251
.IE	ENTRY	compatibility library functions	introduction to			PAGE	START	251
.IE	ENTRY	library functions	introduction to compatibility			PAGE	START	251
.IE	ENTRY	introduction	compatibility library functions			PAGE	END	251
.IE	ENTRY	compatibility library functions	introduction to			PAGE	END	251
.IE	ENTRY	library functions	introduction to compatibility			PAGE	END	251
.SE PAGINATE NEW-PAGE 252
.CE MAN-PAGE 1 ALARM(3C) 252
.IE	ENTRY	alarm function		\fLalarm\fP \(em schedule signal				252
.IE	ENTRY	schedule signal		schedule signal \(em \fLalarm\fP				252
.IE	ENTRY	signal	schedule	signal	schedule \(em \fLalarm\fP			252
.SE PAGINATE NEW-PAGE 253
.CE MAN-PAGE 1 CLOCK(3C) 253
.IE	ENTRY	clock		\fLclock\fP				253
.IE	ENTRY	timing and statistics	clock		\fLclock\fP			253
.IE	ENTRY	interval timers	clock		\fLclock\fP			253
.SE PAGINATE NEW-PAGE 254
.CE MAN-PAGE 1 GETOPT(3C) 254
.IE	ENTRY	get option letter from argv		get option letter from argv \(em \fLgetopt\fP				254
.IE	ENTRY	option letter	get from argv		get from argv \(em \fLgetopt\fP			254
.IE	ENTRY	argv	get option letter	argv	get option letter \(em \fLgetopt\fP			254
.IE	ENTRY	getopt function		\fLgetopt\fP \(em get option letter				254
.IE	ENTRY	optarg		\fLoptarg\fP \(em get option letter				254
.IE	ENTRY	optind		\fLoptind\fP \(em get option letter				254
.SE PAGINATE NEW-PAGE 255
.SE PAGINATE NEW-PAGE 256
.CE MAN-PAGE 1 NICE(3C) 256
.IE	ENTRY	nice function		\fLnice\fP \(em set program priority				256
.IE	ENTRY	set program priority		set program priority \(em \fLnice\fP				256
.IE	ENTRY	program priority	set	program priority	set \(em \fLnice\fP			256
.IE	ENTRY	priority of program	set	priority of program	set \(em \fLnice\fP			256
.SE PAGINATE NEW-PAGE 257
.CE MAN-PAGE 1 PAUSE(3C) 257
.IE	ENTRY	stop until signal		stop until signal \(em \fLpause\fP				257
.IE	ENTRY	signal	stop until	signal	stop until \(em \fLpause\fP			257
.IE	ENTRY	pause function		\fLpause\fP \(em stop until signal				257
.SE PAGINATE NEW-PAGE 258
.CE MAN-PAGE 1 RAND(3C) 258
.IE	ENTRY	random number generator rand		random number generator \(em \fLrand\fP				258
.IE	ENTRY	generate random numbers rand		generate random numbers \(em \fLrand\fP				258
.IE	ENTRY	random number generator srand		random number generator \(em \fLsrand\fP				258
.IE	ENTRY	generate random numbers srand		generate random numbers \(em \fLsrand\fP				258
.IE	ENTRY	rand function		\fLrand\fP \(em generate random numbers				258
.IE	ENTRY	srand function		\fLsrand\fP \(em generate random numbers				258
.SE PAGINATE NEW-PAGE 259
.CE MAN-PAGE 1 STTY(3C) 259
.IE	ENTRY	set terminal state		set terminal state \(em \fLstty\fP				259
.IE	ENTRY	get terminal state		get terminal state \(em \fLgtty\fP				259
.IE	ENTRY	terminal state	get		get \(em \fLgtty\fP			259
.IE	ENTRY	terminal state	set		set \(em \fLstty\fP			259
.IE	ENTRY	state of terminal	get		get \(em \fLgtty\fP			259
.IE	ENTRY	state of terminal	set		set \(em \fLstty\fP			259
.IE	ENTRY	stty function		\fLstty\fP \(em set terminal state				259
.IE	ENTRY	gtty function		\fLgtty\fP \(em get terminal state				259
.SE PAGINATE NEW-PAGE 260
.CE MAN-PAGE 1 TIME(3C) 260
.IE	ENTRY	get date and time		get date and time \(em \fLtime\fP				260
.IE	ENTRY	date and time	get		get \(em \fLtime\fP			260
.IE	ENTRY	time and date	get		get \(em \fLtime\fP			260
.IE	ENTRY	get date and time ftime		get date and time \(em \fLftime\fP				260
.IE	ENTRY	date and time	get ftime		get \(em \fLftime\fP			260
.IE	ENTRY	time and date	get ftime		get \(em \fLftime\fP			260
.IE	ENTRY	time function		\fLtime\fP \(em get date and time				260
.IE	ENTRY	ftime function		\fLftime\fP \(em get date and time				260
.SE PAGINATE NEW-PAGE 261
.CE MAN-PAGE 1 TIMES(3C) 261
.IE	ENTRY	get process times		get process times \(em \fLtimes\fP				261
.IE	ENTRY	process times	get		get \(em \fLtimes\fP			261
.IE	ENTRY	times function		\fLtimes\fP \(em get process times				261
.SE PAGINATE NEW-PAGE 262
.CE MAN-PAGE 1 ULIMIT(3C) 262
.IE	ENTRY	get user limits		get user limits \(em \fLulimit\fP				262
.IE	ENTRY	set user limits		set user limits \(em \fLulimit\fP				262
.IE	ENTRY	user limits	get	user limits	get \(em \fLulimit\fP			262
.IE	ENTRY	user limits	set	user limits	set \(em \fLulimit\fP			262
.IE	ENTRY	limits	get for user	limits	get for user \(em \fLulimit\fP			262
.IE	ENTRY	limits	set for user	limits	set for user \(em \fLulimit\fP			262
.IE	ENTRY	ulimit function		\fLulimit\fP \(em get and set user limits				262
.SE PAGINATE NEW-PAGE 263
.CE MAN-PAGE 1 UTIME(3C) 263
.IE	ENTRY	set file times		set file times \(em \fLutime\fP				263
.IE	ENTRY	file times	set	file times	set \(em \fLutime\fP			263
.IE	ENTRY	utime function		\fLutime\fP \(em set file times				263
.SE PAGINATE NEW-PAGE 264
.CE MAN-PAGE 1 VLIMIT(3C) 264
.IE	ENTRY	control resource consumption		control resource consumption \(em \fLvlimit\fP				264
.IE	ENTRY	system resource consumption	control	system resource consumption	control \(em \fLvlimit\fP			264
.IE	ENTRY	resource consumption	control	resource consumption	control \(em \fLvlimit\fP			264
.IE	ENTRY	vlimit function		\fLvlimit\fP \(em control consumption				264
.SE PAGINATE NEW-PAGE 265
.CE MAN-PAGE 1 VTIMES(3C) 265
.IE	ENTRY	get info on resource usage		get info on resource usage \(em \fLvtimes\fP				265
.IE	ENTRY	resource usage	get info		get info \(em \fLvtimes\fP			265
.IE	ENTRY	vtimes function		\fLvtimes\fP \(em resource use info				265
.SE PAGINATE NEW-PAGE 266
267
.SE PAGINATE NEW-PAGE 267
.CE MAN-PAGE 1 INTRO(3M) 267
.IE	ENTRY	introduction	mathematical library functions			PAGE	START	267
.IE	ENTRY	mathematical library functions	introduction to			PAGE	START	267
.IE	ENTRY	library functions	introduction to mathematical			PAGE	START	267
.SE PAGINATE NEW-PAGE 268
.IE	ENTRY	introduction	mathematical library functions			PAGE	END	268
.IE	ENTRY	mathematical library functions	introduction to			PAGE	END	268
.IE	ENTRY	library functions	introduction to mathematical			PAGE	END	268
.SE PAGINATE NEW-PAGE 269
.CE MAN-PAGE 1 ASINH(3M) 269
.SE PAGINATE NEW-PAGE 270
.CE MAN-PAGE 1 ERF(3M) 270
.SE PAGINATE NEW-PAGE 271
.CE MAN-PAGE 1 EXP(3M) 271
.IE	ENTRY	exp function		\fLexp\fP \(em exponential function				271
.IE	ENTRY	mathematical functions	exp		\fLexp\fP \(em exponential			271
.IE	ENTRY	exponential function exp		exponential function \(em \fLexp\fP				271
.IE	ENTRY	log function		\fLlog\fP \(em natural logarithm				271
.IE	ENTRY	mathematical functions	log		\fLlog\fP \(em natural logarithm			271
.IE	ENTRY	natural logarithm log		natural logarithm \(em \fLlog\fP				271
.IE	ENTRY	logarithm, natural log		logarithm, natural \(em \fLlog\fP				271
.IE	ENTRY	log10 function		\fLlog10\fP \(em logarithm, base 10				271
.IE	ENTRY	mathematical functions	log10		\fLlog10\fP \(em logarithm, base 10			271
.IE	ENTRY	logarithm, base 10 log10		logarithm, base 10 \(em \fLlog10\fP				271
.IE	ENTRY	pow function		\fLpow\fP \(em raise to power				271
.IE	ENTRY	mathematical functions	pow		\fLpow\fP \(em raise to power			271
.IE	ENTRY	power function pow		power function \(em \fLpow\fP				271
.SE PAGINATE NEW-PAGE 272
.CE MAN-PAGE 1 FLOOR(3M) 272
.IE	ENTRY	fabs function		\fLfabs\fP \(em absolute value				272
.IE	ENTRY	mathematical functions	fabs		\fLfabs\fP \(em absolute value			272
.IE	ENTRY	absolute value function		absolute value function \(em \fLfabs\fP				272
.IE	ENTRY	floor function		\fLfloor\fP \(em floor of				272
.IE	ENTRY	mathematical functions	floor		\fLfloor\fP \(em floor of			272
.IE	ENTRY	ceil function		\fLceil\fP \(em ceiling of				272
.IE	ENTRY	mathematical functions	ceil		\fLceil\fP \(em ceiling of			272
.SE PAGINATE NEW-PAGE 273
.CE MAN-PAGE 1 GAMMA(3M) 273
.IE	ENTRY	gamma function		\fLgamma\fP \(em log gamma				273
.IE	ENTRY	mathematical functions	gamma		\fLgamma\fP			273
.IE	ENTRY	log gamma function		log gamma function \(em \fLgamma\fP				273
.SE PAGINATE NEW-PAGE 274
.CE MAN-PAGE 1 HYPOT(3M) 274
.IE	ENTRY	hypot function		\fLhypot\fP \(em Euclidean distance				274
.IE	ENTRY	mathematical functions	hypot		\fLhypot\fP			274
.IE	ENTRY	Euclidean distance functions	hypot		\fLhypot\fP			274
.IE	ENTRY	cabs function		\fLcabs\fP \(em Euclidean distance				274
.IE	ENTRY	mathematical functions	cabs		\fLcabs\fP			274
.IE	ENTRY	Euclidean distance functions	cabs		\fLcabs\fP			274
.SE PAGINATE NEW-PAGE 275
.CE MAN-PAGE 1 IEEE(3M) 275
.SE PAGINATE NEW-PAGE 276
.CE MAN-PAGE 1 J0(3M) 276
.IE	ENTRY	j0 function		\fLj0\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	j0		\fLj0\fP			276
.IE	ENTRY	Bessel functions	j0		\fLj0\fP			276
.IE	ENTRY	j1 function		\fLj1\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	j1		\fLj1\fP			276
.IE	ENTRY	Bessel functions	j1		\fLj1\fP			276
.IE	ENTRY	jn function		\fLjn\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	jn		\fLjn\fP			276
.IE	ENTRY	Bessel functions	jn		\fLjn\fP			276
.IE	ENTRY	y0 function		\fLy0\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	y0		\fLy0\fP			276
.IE	ENTRY	Bessel functions	y0		\fLy0\fP			276
.IE	ENTRY	y1 function		\fLy1\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	y1		\fLy1\fP			276
.IE	ENTRY	Bessel functions	y1		\fLy1\fP			276
.IE	ENTRY	yn function		\fLyn\fP  \(em Bessel function				276
.IE	ENTRY	mathematical functions	yn		\fLyn\fP			276
.IE	ENTRY	Bessel functions	yn		\fLyn\fP			276
.SE PAGINATE NEW-PAGE 277
.CE MAN-PAGE 1 LGAMMA(3M) 277
.SE PAGINATE NEW-PAGE 278
.CE MAN-PAGE 1 MATHERR(3M) 278
.SE PAGINATE NEW-PAGE 279
.SE PAGINATE NEW-PAGE 280
.SE PAGINATE NEW-PAGE 281
.CE MAN-PAGE 1 SIN(3M) 281
.IE	ENTRY	trigonometric functions				PAGE	START	281
.IE	ENTRY	sin function		\fLsin\fP \(em trigonometric sine				281
.IE	ENTRY	mathematical functions	sin		\fLsin\fP			281
.IE	ENTRY	trigonometric functions	sin		\fLsin\fP			281
.IE	ENTRY	cos function		\fLcos\fP \(em trigonometric cosine				281
.IE	ENTRY	mathematical functions	cos		\fLcos\fP			281
.IE	ENTRY	trigonometric functions	cos		\fLcos\fP			281
.IE	ENTRY	tan function		\fLtan\fP \(em trigonometric tangent				281
.IE	ENTRY	mathematical functions	tan		\fLtan\fP			281
.IE	ENTRY	trigonometric functions	tan		\fLtan\fP			281
.IE	ENTRY	asin function		\fLasin\fP \(em trigonometric arcsine				281
.IE	ENTRY	mathematical functions	asin		\fLasin\fP			281
.IE	ENTRY	trigonometric functions	asin		\fLasin\fP			281
.IE	ENTRY	acos function		\fLacos\fP \(em trigonometric arccosine				281
.IE	ENTRY	mathematical functions	acos		\fLacos\fP			281
.IE	ENTRY	trigonometric functions	acos		\fLacos\fP			281
.IE	ENTRY	atan function		\fLatan\fP \(em trigonometric arctangent				281
.IE	ENTRY	mathematical functions	atan		\fLatan\fP			281
.IE	ENTRY	trigonometric functions	atan		\fLatan\fP			281
.IE	ENTRY	atan2 function		\fLatan2\fP \(em trigonometric arctangent				281
.IE	ENTRY	mathematical functions	atan2		\fLatan2\fP			281
.IE	ENTRY	trigonometric functions	atan2		\fLatan2\fP			281
.IE	ENTRY	trigonometric functions				PAGE	END	281
.SE PAGINATE NEW-PAGE 282
.CE MAN-PAGE 1 SINH(3M) 282
.IE	ENTRY	sinh function		\fLsinh\fP \(em hyperbolic sine				282
.IE	ENTRY	mathematical functions	sinh		\fLsinh\fP			282
.IE	ENTRY	hyperbolic functions	sinh		\fLsinh\fP			282
.IE	ENTRY	cosh function		\fLcosh\fP \(em hyperbolic cosine				282
.IE	ENTRY	mathematical functions	cosh		\fLcosh\fP			282
.IE	ENTRY	hyperbolic functions	cosh		\fLcosh\fP			282
.IE	ENTRY	tanh function		\fLtanh\fP \(em hyperbolic tangent				282
.IE	ENTRY	mathematical functions	tanh		\fLtanh\fP			282
.IE	ENTRY	hyperbolic functions	tanh		\fLtanh\fP			282
.SE PAGINATE NEW-PAGE 283
.CE MAN-PAGE 1 SQRT(3M) 283
.SE PAGINATE NEW-PAGE 284
285
.SE PAGINATE NEW-PAGE 285
.CE MAN-PAGE 1 INTRO(3N) 285
.IE	ENTRY	introduction	network library functions			PAGE	START	285
.IE	ENTRY	network library functions	introduction to			PAGE	START	285
.IE	ENTRY	library functions	introduction to network			PAGE	START	285
.IE	ENTRY	introduction	network library functions			PAGE	END	285
.IE	ENTRY	network library functions	introduction to			PAGE	END	285
.IE	ENTRY	library functions	introduction to network			PAGE	END	285
.SE PAGINATE NEW-PAGE 286
.CE MAN-PAGE 1 BYTEORDER(3N) 286
.IE	ENTRY	ntohl function		\fLntohl\fP \(em convert network to host long				286
.IE	ENTRY	convert	network to host long		network to host long \(em \fLntohl\fP			286
.IE	ENTRY	ntohs function		\fLntohs\fP \(em convert host to network short				286
.IE	ENTRY	convert	network to host short		network to host short \(em \fLntohs\fP			286
.IE	ENTRY	htonl function		\fLhtonl\fP \(em convert network to host long				286
.IE	ENTRY	convert	host to network long		host to network long \(em \fLhtonl\fP			286
.IE	ENTRY	htons function		\fLhtons\fP \(em convert host to network short				286
.IE	ENTRY	convert	host to network short		host to network short \(em \fLhtons\fP			286
.IE	ENTRY	convert	between host and network byte order					286
.IE	ENTRY	byte order	convert between host and network					286
.IE	ENTRY	host byte order	convert to network					286
.IE	ENTRY	network byte order	convert to host					286
.SE PAGINATE NEW-PAGE 287
.CE MAN-PAGE 1 ETHERS(3N) 287
.SE PAGINATE NEW-PAGE 288
.CE MAN-PAGE 1 GETHOSTENT(3N) 288
.IE	ENTRY	get network host entry						288
.IE	ENTRY	network host entry	get					288
.IE	ENTRY	host entry	get network					288
.IE	ENTRY	gethostent function		\fLgethostent\fP \(em get network host entry				288
.IE	ENTRY	gethostbyaddr function		\fLgethostbyaddr\fP \(em get network host entry				288
.IE	ENTRY	gethostbyname function		\fLgethostbyname\fP \(em get network host entry				288
.IE	ENTRY	sethostent function		\fLsethostent\fP \(em get network host entry				288
.IE	ENTRY	endhostent function		\fLendhostent\fP \(em get network host entry				288
.SE PAGINATE NEW-PAGE 289
.SE PAGINATE NEW-PAGE 290
.CE MAN-PAGE 1 GETNETENT(3N) 290
.IE	ENTRY	get network entry						290
.IE	ENTRY	network entry	get					290
.IE	ENTRY	getnetent function		\fLgetnetent\fP \(em get network entry				290
.IE	ENTRY	getnetbyaddr function		\fLgetnetbyaddr\fP \(em get network entry				290
.IE	ENTRY	getnetbyname function		\fLgetnetbyname\fP \(em get network entry				290
.IE	ENTRY	setnetent function		\fLsetnetent\fP \(em get network entry				290
.IE	ENTRY	endnetent function		\fLendnetent\fP \(em get network entry				290
.SE PAGINATE NEW-PAGE 291
.CE MAN-PAGE 1 GETNETGRENT(3N) 291
.IE	ENTRY	get network group entry						291
.IE	ENTRY	set network group entry						291
.IE	ENTRY	network group entry	get					291
.IE	ENTRY	group entry	get network					291
.IE	ENTRY	getnetgrent function		\fLgetnetgrent\fP \(em get network group entry				291
.IE	ENTRY	setnetgrent function		\fLsetnetgrent\fP \(em get network group entry				291
.IE	ENTRY	endnetgrent function		\fLendnetgrent\fP \(em get network group entry				291
.IE	ENTRY	innetgr function		\fLinnetgr\fP \(em get network group entry				291
.SE PAGINATE NEW-PAGE 292
.CE MAN-PAGE 1 GETPROTOENT(3N) 292
.IE	ENTRY	get protocol entry						292
.IE	ENTRY	protocol entry	get					292
.IE	ENTRY	getprotoent function		\fLgetprotoent\fP \(em get protocol entry				292
.IE	ENTRY	getprotobynumber function		\fLgetprotobynumber\fP \(em get protocol entry				292
.IE	ENTRY	getprotobynumber function		\fLgetprotobynumber\fP \(em get protocol entry				292
.IE	ENTRY	setprotoent function		\fLsetprotoent\fP \(em get protocol entry				292
.IE	ENTRY	endprotoent function		\fLendprotoent\fP \(em get protocol entry				292
.SE PAGINATE NEW-PAGE 293
.CE MAN-PAGE 1 GETRPCENT(3N) 293
.IE	ENTRY	get rpc program entry						293
.IE	ENTRY	set rpc program entry						293
.IE	ENTRY	rpc program entry	get					293
.IE	ENTRY	rpc entry	get					293
.IE	ENTRY	getrpcent function		\fLgetrpcent\fP \(em get rpcice entry				293
.IE	ENTRY	getrpcbynumber function		\fLgetrpcbynumber\fP \(em get rpc entry				293
.IE	ENTRY	getrpcbyname function		\fLgetrpcbyname\fP \(em get rpc entry				293
.IE	ENTRY	setrpcent function		\fLsetrpcent\fP \(em get rpc entry				293
.IE	ENTRY	endrpcent function		\fLendrpcent\fP \(em get rpc entry				293
.SE PAGINATE NEW-PAGE 294
.CE MAN-PAGE 1 GETSERVENT(3N) 294
.IE	ENTRY	get network service entry						294
.IE	ENTRY	set network service entry						294
.IE	ENTRY	network service entry	get					294
.IE	ENTRY	service entry	get					294
.IE	ENTRY	getservent function		\fLgetservent\fP \(em get service entry				294
.IE	ENTRY	getservbyport function		\fLgetservbyport\fP \(em get service entry				294
.IE	ENTRY	getservbyname function		\fLgetservbyname\fP \(em get service entry				294
.IE	ENTRY	setservent function		\fLsetservent\fP \(em get service entry				294
.IE	ENTRY	endservent function		\fLendservent\fP \(em get service entry				294
.SE PAGINATE NEW-PAGE 295
.CE MAN-PAGE 1 INET(3N) 295
.IE	ENTRY	Internet address manipulation						295
.IE	ENTRY	manipulate Internet addresses						295
.IE	ENTRY	inet_addr function		\fLinet_addr\fP \(em Internet address manipulation				295
.IE	ENTRY	inet_network function		\fLinet_network\fP \(em Internet address manipulation				295
.IE	ENTRY	inet_makeaddr function		\fLinet_makeaddr\fP \(em Internet address manipulation				295
.IE	ENTRY	inet_lnaof function		\fLinet_lnaof\fP \(em Internet address manipulation				295
.IE	ENTRY	inet_netof function		\fLinet_netof\fP \(em Internet address manipulation				295
.IE	ENTRY	inet_ntoa function		\fLinet_ntoa\fP \(em Internet address manipulation				295
.SE PAGINATE NEW-PAGE 296
.SE PAGINATE NEW-PAGE 297
.CE MAN-PAGE 1 RCMD(3N) 297
.IE	ENTRY	stream to remote command	return					297
.IE	ENTRY	stream	return to remote command					297
.IE	ENTRY	return stream to remote command						297
.IE	ENTRY	command	return stream to remote					297
.IE	ENTRY	remote command	return stream to					297
.IE	ENTRY	rcmd function		\fLrcmd\fP \(em execute command remotely				297
.IE	ENTRY	rresvport function		\fLrresvport\fP \(em get privileged socket				297
.IE	ENTRY	ruserok function		\fLruserok\fP \(em authenticate user				297
.SE PAGINATE NEW-PAGE 298
.CE MAN-PAGE 1 REXEC(3N) 298
.IE	ENTRY	rexec function		\fLrexec\fP \(em return stream to remote command				298
.IE	ENTRY	stream to remote command	return					298
.IE	ENTRY	stream	return to remote command					298
.IE	ENTRY	return stream to remote command						298
.IE	ENTRY	command	return stream to remote					298
.IE	ENTRY	remote command	return stream to					298
.SE PAGINATE NEW-PAGE 299
.CE MAN-PAGE 1 RPC(3N) 299
.SE PAGINATE NEW-PAGE 300
.SE PAGINATE NEW-PAGE 301
.CE MAN-PAGE 1 XDR(3N) 301
.SE PAGINATE NEW-PAGE 302
.CE MAN-PAGE 1 YPCLNT(3N) 302
.SE PAGINATE NEW-PAGE 303
.IE	ENTRY	yp_bind function		\fLyp_bind\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_get_default_domain function		\fLyp_get_default_domain\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_unbind function		\fLyp_unbind\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_match function		\fLyp_match\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_first function		\fLyp_first\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_all function		\fLyp_all\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_next function		\fLyp_next\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_order function		\fLyp_order\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_master function		\fLyp_master\fP \(em yellow pages client interface				303
.IE	ENTRY	yp_next function		\fLyp_next\fP \(em yellow pages client interface				303
.IE	ENTRY	yperr_string function		\fLyperr_string\fP \(em yellow pages client interface				303
.IE	ENTRY	ypprot_err function		\fLypprot_err\fP \(em yellow pages client interface				303
.IE	ENTRY	yellow pages client interface						303
.SE PAGINATE NEW-PAGE 304
.SE PAGINATE NEW-PAGE 305
.SE PAGINATE NEW-PAGE 306
307
.SE PAGINATE NEW-PAGE 307
.CE MAN-PAGE 1 INTRO(3R) 307
.SE PAGINATE NEW-PAGE 308
.CE MAN-PAGE 1 ETHER(3R) 308
.SE PAGINATE NEW-PAGE 309
.SE PAGINATE NEW-PAGE 310
.CE MAN-PAGE 1 GETRPCPORT(3R) 310
.SE PAGINATE NEW-PAGE 311
.CE MAN-PAGE 1 MOUNT(3R) 311
.SE PAGINATE NEW-PAGE 312
.SE PAGINATE NEW-PAGE 313
.CE MAN-PAGE 1 REX(3R) 313
.SE PAGINATE NEW-PAGE 314
.SE PAGINATE NEW-PAGE 315
.CE MAN-PAGE 1 RNUSERS(3R) 315
.SE PAGINATE NEW-PAGE 316
.SE PAGINATE NEW-PAGE 317
.CE MAN-PAGE 1 RQUOTA(3R) 317
.SE PAGINATE NEW-PAGE 318
.SE PAGINATE NEW-PAGE 319
.CE MAN-PAGE 1 RSTAT(3R) 319
.SE PAGINATE NEW-PAGE 320
.SE PAGINATE NEW-PAGE 321
.CE MAN-PAGE 1 RWALL(3R) 321
.SE PAGINATE NEW-PAGE 322
.CE MAN-PAGE 1 SPRAY(3R) 322
.SE PAGINATE NEW-PAGE 323
.CE MAN-PAGE 1 YPPASSWD(3R) 323
.SE PAGINATE NEW-PAGE 324
325
.SE PAGINATE NEW-PAGE 325
.CE MAN-PAGE 1 INTRO(3S) 325
.IE	ENTRY	introduction	standard I/O library functions			PAGE	START	325
.IE	ENTRY	standard I/O library functions	introduction to			PAGE	START	325
.IE	ENTRY	buffered I/O library functions	introduction to			PAGE	START	325
.IE	ENTRY	library functions	introduction to standard I/O			PAGE	START	325
.SE PAGINATE NEW-PAGE 326
.IE	ENTRY	introduction	standard I/O library functions			PAGE	END	326
.IE	ENTRY	standard I/O library functions	introduction to			PAGE	END	326
.IE	ENTRY	buffered I/O library functions	introduction to			PAGE	END	326
.IE	ENTRY	library functions	introduction to standard I/O			PAGE	END	326
.SE PAGINATE NEW-PAGE 327
.CE MAN-PAGE 1 CTERMID(3S) 327
.SE PAGINATE NEW-PAGE 328
.CE MAN-PAGE 1 CUSERID(3S) 328
.IE	ENTRY	cuserid get user name		\fLcuserid\fP \(em get user name				328
.IE	ENTRY	get user name		get user name \(em \fLcuserid\fP				328
.IE	ENTRY	user name	get		get \(em \fLcuserid\fP			328
.SE PAGINATE NEW-PAGE 329
.CE MAN-PAGE 1 FCLOSE(3S) 329
.IE	ENTRY	fclose function		\fLfclose\fP \(em close stream				329
.IE	ENTRY	close stream		close stream \(em \fLfclose\fP				329
.IE	ENTRY	stream	close \(em \fLfclose\fP					329
.IE	ENTRY	fflush function		\fLfflush\fP \(em flush stream				329
.IE	ENTRY	flush stream		flush stream \(em \fLfflush\fP				329
.IE	ENTRY	stream	flush \(em \fLfflush\fP					329
.SE PAGINATE NEW-PAGE 330
.CE MAN-PAGE 1 FERROR(3S) 330
.IE	ENTRY	ferror function		\fLferror\fP \(em inquire error on stream				330
.IE	ENTRY	stream status enquiries	ferror		\fLferror\fP \(em inquire error on stream			330
.IE	ENTRY	enquire stream status	ferror		\fLferror\fP \(em inquire error on stream			330
.IE	ENTRY	inquire stream status	ferror		\fLferror\fP \(em inquire error on stream			330
.IE	ENTRY	feof function		\fLfeof\fP \(em enquire EOF on stream				330
.IE	ENTRY	stream status enquiries	feof		\fLfeof\fP \(em enquire EOF on stream			330
.IE	ENTRY	enquire stream status	feof		\fLfeof\fP \(em enquire EOF on stream			330
.IE	ENTRY	inquire stream status	feof		\fLfeof\fP \(em enquire EOF on stream			330
.IE	ENTRY	clearerr function		\fLclearerr\fP \(em clear error on stream				330
.IE	ENTRY	stream status enquiries	clearerr		\fLclearerr\fP \(em clear error on stream			330
.IE	ENTRY	enquire stream status	clearerr		\fLclearerr\fP \(em clear error on stream			330
.IE	ENTRY	inquire stream status	clearerr		\fLclearerr\fP \(em clear error on stream			330
.IE	ENTRY	fileno function		\fLfileno\fP \(em get stream descriptor number				330
.IE	ENTRY	stream status enquiries	fileno		\fLfileno\fP \(em get stream descriptor number			330
.IE	ENTRY	enquire stream status	fileno		\fLfileno\fP \(em get stream descriptor number			330
.IE	ENTRY	inquire stream status	fileno		\fLfileno\fP \(em get stream descriptor number			330
.SE PAGINATE NEW-PAGE 331
.CE MAN-PAGE 1 FOPEN(3S) 331
.IE	ENTRY	fopen function		\fLfopen\fP \(em open stream				331
.IE	ENTRY	stream	open	stream	open \(em \fLfopen\fP			331
.IE	ENTRY	open stream \(em \fLfopen\fP						331
.IE	ENTRY	freopen function		\fLfreopen\fP \(em reopen stream				331
.IE	ENTRY	stream	reopen	stream	reopen \(em \fLfreopen\fP			331
.IE	ENTRY	reopen stream \(em \fLfreopen\fP						331
.IE	ENTRY	fdopen function		\fLfdopen\fP \(em associate descriptor				331
.IE	ENTRY	stream	associate descriptor \(em \fLfdopen\fP					331
.SE PAGINATE NEW-PAGE 332
.CE MAN-PAGE 1 FREAD(3S) 332
.IE	ENTRY	buffered binary I/O	fread		\fLfread\fP \(em read from stream			332
.IE	ENTRY	binary I/O, buffered	fread		\fLfread\fP \(em read from stream			332
.IE	ENTRY	I/O, buffered binary	fread		\fLfread\fP \(em read from stream			332
.IE	ENTRY	buffered binary I/O	frwite		\fLfrwite\fP \(em write to stream			332
.IE	ENTRY	binary I/O, buffered	frwite		\fLfrwite\fP \(em write to stream			332
.IE	ENTRY	I/O, buffered binary	frwite		\fLfrwite\fP \(em write to stream			332
.IE	ENTRY	fread function		\fLfread\fP \(em read from stream				332
.IE	ENTRY	read from stream \(em \fLfread\fP						332
.IE	ENTRY	fwrite function		\fLfwrite\fP \(em write to stream				332
.IE	ENTRY	write to stream \(em \fLfwrite\fP						332
.IE	ENTRY	stream	read		read from stream \(em \fLfread\fP			332
.IE	ENTRY	stream	rwite		write to stream \(em \fLfwrite\fP			332
.SE PAGINATE NEW-PAGE 333
.CE MAN-PAGE 1 FSEEK(3S) 333
.IE	ENTRY	fseek function		\fLfseek\fP \(em seek on stream				333
.IE	ENTRY	seek on stream		seek on stream \(em \fLfseek\fP				333
.IE	ENTRY	stream	seek	stream	seek \(em \fLfseek\fP			333
.IE	ENTRY	ftell function		\fLftell\fP \(em get stream position				333
.IE	ENTRY	get position of stream		get position of stream \(em \fLftell\fP				333
.IE	ENTRY	stream	get position of	stream	get position of \(em \fLftell\fP			333
.IE	ENTRY	rewind function		\fLrewind\fP \(em rewind stream				333
.IE	ENTRY	rewind stream		rewind stream \(em \fLrewind\fP				333
.IE	ENTRY	stream	rewind	stream	rewind \(em \fLrewind\fP			333
.IE	ENTRY	stream	reposition	stream	reposition \(em \fLrewind\fP			333
.IE	ENTRY	reposition stream	fseek		\fLfseek\fP			333
.IE	ENTRY	reposition stream	ftell		\fLftell\fP			333
.IE	ENTRY	reposition stream	rewind		\fLrewind\fP			333
.SE PAGINATE NEW-PAGE 334
.CE MAN-PAGE 1 GETC(3S) 334
.IE	ENTRY	getc macro		\fLgetc\fP \(em get character from stream				334
.IE	ENTRY	get character from stream getc		get character from stream \(em \fLgetc\fP				334
.IE	ENTRY	get character from stream fgetc		get character from stream \(em \fLfgetc\fP				334
.IE	ENTRY	getchar macro		\fLgetchar\fP \(em get character from stdin				334
.IE	ENTRY	fgetc function		\fLfgetc\fP \(em get character from stream				334
.IE	ENTRY	getw macro		\fLgetw\fP \(em get word from stream				334
.IE	ENTRY	get word from stream		get word from stream \(em \fLgetw\fP				334
.IE	ENTRY	stream	get character getc		get character \(em \fLgetc\fP			334
.IE	ENTRY	stream	get character getchar		get character \(em \fLgetchar\fP			334
.IE	ENTRY	stream	get character fgetc		get character \(em \fLfgetc\fP			334
.IE	ENTRY	stream	get word getw		get word \(em \fLgetw\fP			334
.IE	ENTRY	stdin	get character		get character \(em \fLgetchar\fP			334
.IE	ENTRY	character	get from stream getc		get from stream \(em \fLgetc\fP			334
.IE	ENTRY	character	get from stdin		get from stdin \(em \fLgetchar\fP			334
.IE	ENTRY	character	get from stream fgetc		get from stream \(em \fLfgetc\fP			334
.IE	ENTRY	word	get from stream	word	get from stream \(em \fLgetw\fP			334
.SE PAGINATE NEW-PAGE 335
.CE MAN-PAGE 1 GETS(3S) 335
.IE	ENTRY	get string from stdin		get string from stdin \(em \fLgets\fP				335
.IE	ENTRY	get string from stream		get string from stream \(em \fLfgets\fP				335
.IE	ENTRY	stdin	get string from		get string from \(em \fLgets\fP			335
.IE	ENTRY	stream	get string from		get string from \(em \fLfgets\fP			335
.IE	ENTRY	gets function		\fLgets\fP \(em get string from stdin				335
.IE	ENTRY	fgets function		\fLfgets\fP \(em get string from stream				335
.IE	ENTRY	string	get from stream		get from stream \(em \fLfgets\fP			335
.IE	ENTRY	string	get from stdin		get from stdin \(em \fLgets\fP			335
.SE PAGINATE NEW-PAGE 336
.CE MAN-PAGE 1 POPEN(3S) 336
.IE	ENTRY	process	initiate I/O to/from					336
.IE	ENTRY	initiate I/O to/from process						336
.IE	ENTRY	popen function		\fLpopen\fP \(em open stream to process				336
.IE	ENTRY	pclose function		\fLpclose\fP \(em close stream to process				336
.SE PAGINATE NEW-PAGE 337
.CE MAN-PAGE 1 PRINTF(3S) 337
.SE PAGINATE NEW-PAGE 338
.SE PAGINATE NEW-PAGE 339
.SE PAGINATE NEW-PAGE 340
.CE MAN-PAGE 1 PUTC(3S) 340
.IE	ENTRY	put character to stream putc		put character to stream \(em \fLputc\fP				340
.IE	ENTRY	put character to stream fputc		put character to stream \(em \fLfputc\fP				340
.IE	ENTRY	put character to stdout		put character to stdout \(em \fLputchar\fP				340
.IE	ENTRY	put word to stream		put word to stream \(em \fLputw\fP				340
.IE	ENTRY	stream	put character to putc	stream	put character to \(em \fLputc\fP			340
.IE	ENTRY	stream	put character to fputc	stream	put character to \(em \fLfputc\fP			340
.IE	ENTRY	stdout	put character to	stdout	put character to \(em \fLputchar\fP			340
.IE	ENTRY	stream	put word to	stream	put word to \(em \fLputw\fP			340
.IE	ENTRY	putc macro		\fLputc\fP \(em put character on stream				340
.IE	ENTRY	putchar macro		\fLputchar\fP \(em put character on stdout				340
.IE	ENTRY	fputc function		\fLfputc\fP \(em put character on stream				340
.IE	ENTRY	putw macro		\fLputw\fP \(em put word on stream				340
.IE	ENTRY	character	put to stream putc		put to stream \(em \fLputc\fP			340
.IE	ENTRY	character	put to stdin		put to stdin \(em \fLputchar\fP			340
.IE	ENTRY	character	put to stream fputc		put to stream \(em \fLfputc\fP			340
.IE	ENTRY	word	put to stream	word	put to stream \(em \fLputw\fP			340
.SE PAGINATE NEW-PAGE 341
.CE MAN-PAGE 1 PUTS(3S) 341
.IE	ENTRY	puts function		\fLputs\fP \(em put string to stdout				341
.IE	ENTRY	put string to stdout		put string to stdout \(em \fLputs\fP				341
.IE	ENTRY	put string to stream		put string to stream \(em \fLfputs\fP				341
.IE	ENTRY	stream	put string to stdout	stream	put string to \(em \fLputs\fP			341
.IE	ENTRY	stream	put string to stream	stream	put string to \(em \fLfputs\fP			341
.IE	ENTRY	fputs function		\fLfputs\fP \(em put string to stream				341
.IE	ENTRY	string	put to stdout		put to stdout \(em \fLputs\fP			341
.IE	ENTRY	string	put to stream		put to stream \(em \fLfputs\fP			341
.SE PAGINATE NEW-PAGE 342
.CE MAN-PAGE 1 SCANF(3S) 342
.IE	ENTRY	formatted input conversion	scanf		\fLscanf\fP \(em convert from stdin			342
.IE	ENTRY	formatted input conversion	fscanf		\fLfscanf\fP \(em convert from stream			342
.IE	ENTRY	formatted input conversion	sscanf		\fLsscanf\fP \(em convert from string			342
.IE	ENTRY	input conversion	scanf		\fLscanf\fP \(em convert from stdin			342
.IE	ENTRY	input conversion	fscanf		\fLfscanf\fP \(em convert from stream			342
.IE	ENTRY	input conversion	sscanf		\fLsscanf\fP \(em convert from string			342
.IE	ENTRY	scanf function		\fLscanf\fP \(em convert from stdin				342
.IE	ENTRY	fscanf function		\fLfscanf\fP \(em convert from stream				342
.IE	ENTRY	sscanf function		\fLsscanf\fP \(em convert from string				342
.IE	ENTRY	stream	input conversion	stream	input conversion \(em \fLscanf\fP			342
.IE	ENTRY	stdin	input conversion	stdin	input conversion \(em \fLscanf\fP			342
.IE	ENTRY	string	number conversion	string	number conversion \(em \fLscanf\fP			342
.IE	ENTRY	read formatted	scanf		\fLscanf\fP \(em convert from stdin			342
.IE	ENTRY	read formatted	fscanf		\fLfscanf\fP \(em convert from stream			342
.IE	ENTRY	read formatted	sscanf		\fLsscanf\fP \(em convert from string			342
.IE	ENTRY	convert strings to numbers	scanf		\fLscanf\fP			342
.IE	ENTRY	convert strings to numbers	fscanf		\fLfscanf\fP			342
.IE	ENTRY	convert strings to numbers	sscanf		\fLsscanf\fP			342
.SE PAGINATE NEW-PAGE 343
.SE PAGINATE NEW-PAGE 344
.CE MAN-PAGE 1 SETBUF(3S) 344
.IE	ENTRY	assign buffering to stream	setbuf"		\fLsetbuf\fP \(em assign buffering			344
.IE	ENTRY	assign buffering to stream	setbuffer"		\fLsetbuffer\fP \(em assign buffering			344
.IE	ENTRY	assign buffering to stream	setlinebuf"		\fLsetlinebuf\fP \(em assign buffering			344
.IE	ENTRY	assign buffering to stream	setvbuf"		\fLsetvbuf\fP \(em assign buffering			344
.IE	ENTRY	stream	assign buffering setbuf		assign buffering \(em \fLsetbuf\fP			344
.IE	ENTRY	stream	assign buffering setbuffer		assign buffering \(em \fLsetbuffer\fP			344
.IE	ENTRY	stream	assign buffering setlinebuffer		assign buffering \(em \fLsetlinebuf\fP			344
.IE	ENTRY	stream	assign buffering setvbuffer		assign buffering \(em \fLsetvbuf\fP			344
.IE	ENTRY	buffering	assign to stream setbuf	buffering	assign to stream \(em \fLsetbuf\fP			344
.IE	ENTRY	buffering	assign to stream setbuffer	buffering	assign to stream \(em \fLsetbuffer\fP			344
.IE	ENTRY	buffering	assign to stream setlinebuf	buffering	assign to stream \(em \fLsetlinebuf\fP			344
.IE	ENTRY	buffering	assign to stream setvbuf	buffering	assign to stream \(em \fLsetvbuf\fP			344
.IE	ENTRY	setbuf function		\fLsetbuf\fP \(em assign buffering				344
.IE	ENTRY	setbuffer function		\fLsetbuffer\fP \(em assign buffering				344
.IE	ENTRY	setlinebuf function		\fLsetlinebuf\fP \(em assign buffering				344
.IE	ENTRY	setvbuf function		\fLsetvbuf\fP \(em assign buffering				344
.SE PAGINATE NEW-PAGE 345
.SE PAGINATE NEW-PAGE 346
.CE MAN-PAGE 1 TMPFILE(3S) 346
.SE PAGINATE NEW-PAGE 347
.CE MAN-PAGE 1 TMPNAM(3S) 347
.IE	ENTRY	create name for temporary file		create name for temporary file \(em \fLtmpnam\fP				347
.IE	ENTRY	make name for temporary file		make name for temporary file \(em \fLtmpnam\fP				347
.IE	ENTRY	temporary file	create name for		create name for \(em \fLtmpnam\fP			347
.IE	ENTRY	file	create temporary name	file	create temporary name \(em \fLtmpnam\fP			347
.IE	ENTRY	tmpnam function		\fLtmpnam\fP \(em make temporary file name				347
.SE PAGINATE NEW-PAGE 348
.CE MAN-PAGE 1 UNGETC(3S) 348
.IE	ENTRY	push character back to input stream		push character back to input stream \(em \fLungetc\fP				348
.IE	ENTRY	stream	push character back to	stream	push character back to \(em \fLungetc\fP			348
.IE	ENTRY	input stream	push character back to		push character back to \(em \fLungetc\fP			348
.IE	ENTRY	ungetc function		\fLungetc\fP \(em push character back to stream				348
.IE	ENTRY	character	push back to stream		push back to stream \(em \fLungetc\fP			348
.SE PAGINATE NEW-PAGE 349
.CE MAN-PAGE 1 VPRINTF(3S) 349
.SE PAGINATE NEW-PAGE 350
.SE PAGINATE NEW-PAGE 351
351
.CE MAN-PAGE 1 INTRO(3V) 351
.IE	ENTRY	introduction	System V library functions			PAGE	START	351
.IE	ENTRY	System V library functions	introduction to			PAGE	START	351
.IE	ENTRY	library functions	introduction to System V			PAGE	START	351
.SE PAGINATE NEW-PAGE 352
.IE	ENTRY	introduction	System V library functions			PAGE	END	352
.IE	ENTRY	System V library functions	introduction to			PAGE	END	352
.IE	ENTRY	library functions	introduction to System V			PAGE	END	352
.SE PAGINATE NEW-PAGE 353
.CE MAN-PAGE 1 ASSERT(3V) 353
.IE	ENTRY	assert function		\fLassert\fP \(em program verification				353
.IE	ENTRY	program verification		program verification \(em \fLassert\fP				353
.IE	ENTRY	debugging support		debugging support \(em \fLassert\fP				353
.SE PAGINATE NEW-PAGE 354
.CE MAN-PAGE 1 CTIME(3V) 354
.IE	ENTRY	ctime function		\fLctime\fP \(em date and time conversion				354
.IE	ENTRY	date and time conversion	ctime		\fLctime\fP			354
.IE	ENTRY	time and date conversion	ctime		\fLctime\fP			354
.IE	ENTRY	convert time and date	ctime		\fLctime\fP			354
.IE	ENTRY	localtime function		\fLlocaltime\fP \(em date and time conversion				354
.IE	ENTRY	date and time conversion	localtime		\fLlocaltime\fP			354
.IE	ENTRY	time and date conversion	localtime		\fLlocaltime\fP			354
.IE	ENTRY	convert time and date	localtime		\fLlocaltime\fP			354
.IE	ENTRY	gmtime function		\fLgmtime\fP \(em date and time conversion				354
.IE	ENTRY	date and time conversion	gmtime		\fLgmtime\fP			354
.IE	ENTRY	time and date conversion	gmtime		\fLgmtime\fP			354
.IE	ENTRY	convert time and date	gmtime		\fLgmtime\fP			354
.IE	ENTRY	asctime function		\fLasctime\fP \(em date and time conversion				354
.IE	ENTRY	date and time conversion	asctime		\fLasctime\fP			354
.IE	ENTRY	time and date conversion	asctime		\fLasctime\fP			354
.IE	ENTRY	convert time and date	asctime		\fLasctime\fP			354
.SE PAGINATE NEW-PAGE 355
.SE PAGINATE NEW-PAGE 356
.CE MAN-PAGE 1 CTYPE(3V) 356
.IE	ENTRY	character classification	isalpha		\fLisalpha\fP			356
.IE	ENTRY	isalpha macro		\fLisalpha\fP \(em is character letter				356
.IE	ENTRY	character classification	isupper		\fLisupper\fP			356
.IE	ENTRY	isupper macro		\fLisupper\fP \(em is character upper-case				356
.IE	ENTRY	character classification	islower		\fLislower\fP			356
.IE	ENTRY	islower macro		\fLislower\fP \(em is character lower-case				356
.IE	ENTRY	character classification	isdigit		\fLisdigit\fP			356
.IE	ENTRY	isdigit macro		\fLisdigit\fP \(em is character digit				356
.IE	ENTRY	character classification	isxdigit		\fLisxdigit\fP			356
.IE	ENTRY	isxdigit macro		\fLisxdigit\fP \(em is character hex digit				356
.IE	ENTRY	character classification	isalnum		\fLisalnum\fP			356
.IE	ENTRY	isalnum macro		\fLisalnum\fP \(em is character alphanumeric				356
.IE	ENTRY	character classification	isspace		\fLisspace\fP			356
.IE	ENTRY	isspace macro		\fLisspace\fP \(em is character whitespace				356
.IE	ENTRY	character classification	ispunct		\fLispunct\fP			356
.IE	ENTRY	ispunct macro		\fLispunct\fP \(em is character punctuation				356
.IE	ENTRY	character classification	isprint		\fLisprint\fP			356
.IE	ENTRY	isprint macro		\fLisprint\fP \(em is character printable				356
.IE	ENTRY	character classification	iscntrl		\fLiscntrl\fP			356
.IE	ENTRY	iscntrl macro		\fLiscntrl\fP \(em is character control				356
.IE	ENTRY	character classification	isascii		\fLisascii\fP			356
.IE	ENTRY	isascii macro		\fLisascii\fP \(em is character ASCII				356
.IE	ENTRY	character classification	isgraph		\fLisgraph\fP			356
.IE	ENTRY	isgraph macro		\fLisgraph\fP \(em is character graphic				356
.IE	ENTRY	character conversion	toupper		\fLtoupper\fP			356
.IE	ENTRY	toupper function		\fLtoupper\fP \(em convert character to upper-case				356
.IE	ENTRY	convert character to upper-case \(em \fLtoupper\fP						356
.IE	ENTRY	character conversion	tolower		\fLtolower\fP			356
.IE	ENTRY	tolower function		\fLtolower\fP \(em convert character to lower-case				356
.IE	ENTRY	convert character to lower-case \(em \fLtolower\fP						356
.IE	ENTRY	character conversion	toascii		\fLtoascii\fP			356
.IE	ENTRY	toascii macro		\fLtoascii\fP \(em convert character to ASCII				356
.IE	ENTRY	convert character to ASCII \(em \fLtoascii\fP						356
.IE	ENTRY	character conversion	_toupper		\fL_toupper\fP			356
.IE	ENTRY	toupper macro		\fL_toupper\fP \(em convert character to upper-case				356
.IE	ENTRY	convert character to upper-case \(em \fL_toupper\fP						356
.IE	ENTRY	character conversion	_tolower		\fL_tolower\fP			356
.IE	ENTRY	tolower macro		\fL_tolower\fP \(em convert character to lower-case				356
.IE	ENTRY	convert character to lower-case \(em \fL_tolower\fP						356
.SE PAGINATE NEW-PAGE 357
.SE PAGINATE NEW-PAGE 358
.CE MAN-PAGE 1 CURSES(3V) 358
.IE	ENTRY	actually move cursor		actually move cursor \(em \fLmvcur\fP				358
.IE	ENTRY	add character addch		add character \(em \fLaddch\fP				358
.IE	ENTRY	add character waddch		add character \(em \fLwaddch\fP				358
.IE	ENTRY	add string addstr		add string \(em \fLaddstr\fP				358
.IE	ENTRY	add string waddstr		add string \(em \fLwaddstr\fP				358
.IE	ENTRY	addch function		\fLaddch\fP \(em add character				358
.IE	ENTRY	addstr function		\fLaddstr\fP \(em add string				358
.IE	ENTRY	box function		\fLbox\fP \(em draw box around window				358
.IE	ENTRY	change all window		change all window \(em \fLtouchwin\fP				358
.IE	ENTRY	clear function		\fLclear\fP \(em clear				358
.IE	ENTRY	clear to bottom of window		clear to bottom of window \(em \fLwclrtobot\fP				358
.IE	ENTRY	clear to bottom		clear to bottom \(em \fLclrtobot\fP				358
.IE	ENTRY	clear to end of line clrtoeol		clear to end of line \(em \fLclrtoeol\fP				358
.IE	ENTRY	clear to end of line wclrtoeol		clear to end of line \(em \fLwclrtoeol\fP				358
.IE	ENTRY	clear window		clear window \(em \fLwclear\fP				358
.IE	ENTRY	clear		clear \(em \fLclear\fP				358
.IE	ENTRY	clearok function		\fLclearok\fP \(em set clear flag for screen				358
.IE	ENTRY	clrtobot function		\fLclrtobot\fP \(em clear to bottom				358
.IE	ENTRY	clrtoeol function		\fLclrtoeol\fP \(em clear to end of line				358
.IE	ENTRY	create new window		create new window \(em \fLnewwin \fP				358
.IE	ENTRY	create subwindow		create subwindow \(em \fLsubwin \fP				358
.IE	ENTRY	crmode function		\fLcrmode\fP \(em set cbreak mode				358
.IE	ENTRY	delch function		\fLdelch\fP \(em delete character				358
.IE	ENTRY	delete character from window		delete character from window \(em \fLwdelch\fP				358
.IE	ENTRY	delete character		delete character \(em \fLdelch\fP				358
.IE	ENTRY	delete line from window		delete line from window \(em \fLwdeleteln\fP				358
.IE	ENTRY	delete line		delete line \(em \fLdeleteln\fP				358
.IE	ENTRY	delete window		delete window \(em \fLdelwin\fP				358
.IE	ENTRY	deleteln function		\fLdeleteln\fP \(em delete line				358
.IE	ENTRY	delwin function		\fLdelwin\fP \(em delete window				358
.IE	ENTRY	draw box around window		draw box around window \(em \fLbox\fP				358
.IE	ENTRY	echo function		\fLecho\fP \(em set echo mode				358
.IE	ENTRY	end standout mode standend		end standout mode \(em \fLstandend\fP				358
.IE	ENTRY	end standout mode wstandend		end standout mode \(em \fLwstandend\fP				358
.IE	ENTRY	end window modes		end window modes \(em \fLendwin\fP				358
.IE	ENTRY	endwin function		\fLendwin\fP \(em end window modes				358
.IE	ENTRY	erase function		\fLerase\fP \(em erase				358
.IE	ENTRY	erase window		erase window \(em \fLwerase\fP				358
.IE	ENTRY	erase		erase \(em \fLerase\fP				358
.IE	ENTRY	get (y,x) co-ordinates		get (y,x) co-ordinates \(em \fLgetyx\fP				358
.IE	ENTRY	get character at current (y,x) co-ordinates		get character at current (y,x) co-ordinates \(em \fLinch\fP				358
.IE	ENTRY	get character at current (y,x) in window		get character at current (y,x) in window \(em \fLwinch\fP				358
.IE	ENTRY	get character through window		get character through window \(em \fLwgetch\fP				358
.IE	ENTRY	get character		get character \(em \fLgetch\fP				358
.IE	ENTRY	get long name		get long name \(em \fLlongname\fP				358
.IE	ENTRY	get string through window		get string through window \(em \fLwgetstr\fP				358
.IE	ENTRY	get string		get string \(em \fLgetstr\fP				358
.IE	ENTRY	get tty modes		get tty modes \(em \fLgettmode\fP				358
.IE	ENTRY	getch function		\fLgetch\fP \(em get character				358
.IE	ENTRY	getstr function		\fLgetstr\fP \(em get string through				358
.IE	ENTRY	gettmode function		\fLgettmode\fP \(em get tty modes				358
.IE	ENTRY	getyx function		\fLgetyx\fP \(em get (y,x) co-ordinates				358
.IE	ENTRY	inch function		\fLinch\fP \(em get character at current (y,x) co-ordinates				358
.IE	ENTRY	initialize screens		initialize screens \(em \fLinitscr\fP				358
.IE	ENTRY	initscr function		\fLinitscr\fP \(em initialize screens				358
.IE	ENTRY	insch function		\fLinsch\fP \(em insert character				358
.IE	ENTRY	insert character in		insert character in \(em \fLwinsch\fP				358
.IE	ENTRY	insert character		insert character \(em \fLinsch\fP				358
.IE	ENTRY	insert line in		insert line in \(em \fLwinsertln\fP				358
.IE	ENTRY	insert line		insert line \(em \fLinsertln\fP				358
.IE	ENTRY	insertln function		\fLinsertln\fP \(em insert line				358
.IE	ENTRY	leaveok function		\fLleaveok\fP \(em set leave flag for window				358
.IE	ENTRY	longname function		\fLlongname\fP \(em get long name				358
.IE	ENTRY	make screen look like window		make screen look like window \(em \fLwrefresh\fP				358
.IE	ENTRY	move function		\fLmove\fP \(em move to (y,x)				358
.IE	ENTRY	move to (y,x)		move to (y,x) \(em \fLmove\fP				358
.IE	ENTRY	mvcur function		\fLmvcur\fP \(em actually move cursor				358
.IE	ENTRY	newwin  function		\fLnewwin \fP \(em create new window				358
.IE	ENTRY	nl function		\fLnl\fP \(em set newline mapping				358
.IE	ENTRY	nocrmode function		\fLnocrmode\fP \(em unset cbreak mode				358
.IE	ENTRY	noecho function		\fLnoecho\fP \(em unset echo mode				358
.IE	ENTRY	nonl function		\fLnonl\fP \(em unset newline mapping				358
.IE	ENTRY	noraw function		\fLnoraw\fP \(em unset raw mode				358
.IE	ENTRY	overlay function		\fLoverlay\fP \(em overlay win1 on win2				358
.IE	ENTRY	overlay win1 on win2		overlay win1 on win2 \(em \fLoverlay\fP				358
.IE	ENTRY	overwrite function		\fLoverwrite\fP \(em overwrite win1 on win2				358
.IE	ENTRY	overwrite win1 on win2		overwrite win1 on win2 \(em \fLoverwrite\fP				358
.IE	ENTRY	printable version of control		printable version of control \(em \fLunctrl\fP				358
.IE	ENTRY	printf to window printw		printf to window \(em \fLprintw\fP				358
.IE	ENTRY	printf to window wprintw		printf to window \(em \fLwprintw \fP				358
.IE	ENTRY	printw function		\fLprintw\fP \(em printf to window				358
.IE	ENTRY	raw function		\fLraw\fP \(em set raw mode				358
.IE	ENTRY	refresh current screen		refresh current screen \(em \fLrefresh\fP				358
.IE	ENTRY	refresh function		\fLrefresh\fP \(em refresh current screen				358
.IE	ENTRY	reset tty flags to stored value		reset tty flags to stored value \(em \fLresetty\fP				358
.IE	ENTRY	resetty function		\fLresetty\fP \(em reset tty flags to stored value				358
.IE	ENTRY	savetty function		\fLsavetty\fP \(em stored current tty flags				358
.IE	ENTRY	scanf through string		scanf through string \(em \fLscanw\fP				358
.IE	ENTRY	scanf through window		scanf through window \(em \fLwscanw \fP				358
.IE	ENTRY	scanw function		\fLscanw\fP \(em scanf through string				358
.IE	ENTRY	scroll function		\fLscroll\fP \(em scroll window one line				358
.IE	ENTRY	scroll window one line		scroll window one line \(em \fLscroll\fP				358
.IE	ENTRY	scrollok function		\fLscrollok\fP \(em set scroll flag				358
.IE	ENTRY	set cbreak mode		set cbreak mode \(em \fLcrmode\fP				358
.IE	ENTRY	set clear flag for screen		set clear flag for screen \(em \fLclearok\fP				358
.IE	ENTRY	set current (y,x) co-ordinates		set current (y,x) co-ordinates \(em \fLwmove\fP				358
.IE	ENTRY	set echo mode		set echo mode \(em \fLecho\fP				358
.IE	ENTRY	set leave flag for window		set leave flag for window \(em \fLleaveok\fP				358
.IE	ENTRY	set newline mapping		set newline mapping \(em \fLnl\fP				358
.IE	ENTRY	set raw mode		set raw mode \(em \fLraw\fP				358
.IE	ENTRY	set scroll flag		set scroll flag \(em \fLscrollok\fP				358
.IE	ENTRY	set term variables for name		set term variables for name \(em \fLsetterm\fP				358
.IE	ENTRY	setterm function		\fLsetterm\fP \(em set term variables for name				358
.IE	ENTRY	standend function		\fLstandend\fP \(em end standout mode				358
.IE	ENTRY	standout function		\fLstandout\fP \(em start standout mode				358
.IE	ENTRY	start standout mode standout		start standout mode \(em \fLstandout\fP				358
.IE	ENTRY	start standout mode wstandout		start standout mode \(em \fLwstandout\fP				358
.IE	ENTRY	stored current tty flags		stored current tty flags \(em \fLsavetty\fP				358
.IE	ENTRY	subwin  function		\fLsubwin \fP \(em create subwindow				358
.IE	ENTRY	touchwin function		\fLtouchwin\fP \(em change all window				358
.IE	ENTRY	unctrl function		\fLunctrl\fP \(em printable version of control				358
.IE	ENTRY	unset cbreak mode		unset cbreak mode \(em \fLnocrmode\fP				358
.IE	ENTRY	unset echo mode		unset echo mode \(em \fLnoecho\fP				358
.IE	ENTRY	unset newline mapping		unset newline mapping \(em \fLnonl\fP				358
.IE	ENTRY	unset raw mode		unset raw mode \(em \fLnoraw\fP				358
.IE	ENTRY	waddch function		\fLwaddch\fP \(em add character in window				358
.IE	ENTRY	waddstr function		\fLwaddstr\fP \(em add string in window				358
.IE	ENTRY	wclear function		\fLwclear\fP \(em clear window				358
.IE	ENTRY	wclrtobot function		\fLwclrtobot\fP \(em clear to bottom of window				358
.IE	ENTRY	wclrtoeol function		\fLwclrtoeol\fP \(em clear to end of line in window				358
.IE	ENTRY	wdelch function		\fLwdelch\fP \(em delete character from window				358
.IE	ENTRY	wdeleteln function		\fLwdeleteln\fP \(em delete line from window				358
.IE	ENTRY	werase function		\fLwerase\fP \(em erase window				358
.IE	ENTRY	wgetch function		\fLwgetch\fP \(em get character through window				358
.IE	ENTRY	wgetstr function		\fLwgetstr\fP \(em get string through window				358
.IE	ENTRY	winch function		\fLwinch\fP \(em get character at location in window				358
.IE	ENTRY	winsch function		\fLwinsch\fP \(em insert character at location in window				358
.IE	ENTRY	winsertln function		\fLwinsertln\fP \(em insert line at location in window				358
.IE	ENTRY	wmove function		\fLwmove\fP \(em set coordinates in window				358
.IE	ENTRY	wprintw  function		\fLwprintw \fP \(em printf to window				358
.IE	ENTRY	wrefresh function		\fLwrefresh\fP \(em make screen look like window				358
.IE	ENTRY	wscanw  function		\fLwscanw \fP \(em scanf through window				358
.IE	ENTRY	wstandend function		\fLwstandend\fP \(em end standout mode				358
.IE	ENTRY	wstandout function		\fLwstandout\fP \(em start standout mode				358
.IE	ENTRY	attroff function		\fLattroff\fR \(em turn off attributes				358
.IE	ENTRY	attron function		\fLattron\fR \(em turn on attributes named				358
.IE	ENTRY	attrset function		\fLattrset\fR \(em set current attributes				358
.IE	ENTRY	baudrate function		\fLbaudrate\fR \(em current terminal speed				358
.IE	ENTRY	beep function		\fLbeep\fR \(em sound beep on terminal				358
.IE	ENTRY	delay_output function		\fLdelay_output\fR \(em insert ms millisecond pause in output				358
.IE	ENTRY	doupdate function		\fLdoupdate\fR \(em update screen				358
.IE	ENTRY	erasechar function		\fLerasechar\fR \(em return erase character				358
.IE	ENTRY	fixterm function		\fLfixterm\fR \(em restore tty to curses				358
.IE	ENTRY	flash function		\fLflash\fR \(em flash screen or beep				358
.IE	ENTRY	flushinp function		\fLflushinp\fR \(em throw away typeahead				358
.IE	ENTRY	has_ic function		\fLhas_ic\fR \(em check terminal insert character capability				358
.IE	ENTRY	has_il function		\fLhas_il\fR \(em check terminal insert line capability				358
.IE	ENTRY	idlok function		\fLidlok\fR \(em use terminal insert/delete line				358
.IE	ENTRY	intrflush function		\fLintrflush\fR \(em allow output flush				358
.IE	ENTRY	keypad function		\fLkeypad\fR \(em enable keypad input				358
.IE	ENTRY	killchar function		\fLkillchar\fR \(em return kill character				358
.IE	ENTRY	meta function		\fLmeta\fR \(em allow meta characters				358
.IE	ENTRY	mvaddch function		\fLmvaddch\fR \(em move then add character				358
.IE	ENTRY	mvaddstr function		\fLmvaddstr\fR \(em move then add string				358
.IE	ENTRY	mvdelch function		\fLmvdelch\fR \(em move then delete character				358
.IE	ENTRY	mvgetch function		\fLmvgetch\fR \(em move then get character				358
.IE	ENTRY	mvgetstr function		\fLmvgetstr\fR \(em move then get string				358
.IE	ENTRY	mvinch function		\fLmvinch\fR \(em move then set coordinates				358
.IE	ENTRY	mvinsch function		\fLmvinsch\fR \(em move then insert character				358
.IE	ENTRY	mvprintw function		\fLmvprintw\fR \(em move then print to window				358
.IE	ENTRY	mvscanw function		\fLmvscanw\fR \(em move then scan from window				358
.IE	ENTRY	mvwaddch function		\fLmvwaddch\fR \(em move then add character in window				358
.IE	ENTRY	mvwaddstr function		\fLmvwaddstr\fR \(em move then add string in window				358
.IE	ENTRY	mvwdelch function		\fLmvwdelch\fR \(em move then delete character in window				358
.IE	ENTRY	mvwgetch function		\fLmvwgetch\fR \(em move then get character in window				358
.IE	ENTRY	mvwgetstr function		\fLmvwgetstr\fR \(em move then get string in window				358
.IE	ENTRY	mvwin		\fLmvwin\fR				358
.IE	ENTRY	mvwinch		\fLmvwinch\fR				358
.IE	ENTRY	mvwinsch		\fLmvwinsch\fR				358
.IE	ENTRY	mvwprintw		\fLmvwprintw\fR				358
.IE	ENTRY	mvwscanw		\fLmvwscanw\fR				358
.IE	ENTRY	newpad function		\fLnewpad\fR \(em create a new pad				358
.IE	ENTRY	newterm function		\fLnewterm\fR \(em set up new terminal				358
.IE	ENTRY	nocbreak function		\fLnocbreak\fR \(em unset cbreak mode				358
.IE	ENTRY	nodelay function		\fLnodelay\fR \(em enable nodelay input mode				358
.IE	ENTRY	pnoutrefresh		\fLpnoutrefersh\fR \(em refresh from pad after update				358
.IE	ENTRY	prefresh		\fLprefresh\fR \(em refresh from pad				358
.IE	ENTRY	resetterm function		\fLresetterm\fR \(em set tty out of curses				358
.IE	ENTRY	saveterm function		\fLsaveterm\fR \(em save current modes				358
.IE	ENTRY	set_term function		\fLset_term\fR \(em 				358
.IE	ENTRY	setscrreg function		\fLsetscrreg\fR \(em set scrolling region				358
.IE	ENTRY	setupterm function		\fLsetupterm\fR \(em read terminfo database				358
.IE	ENTRY	traceoff function		\fLtraceoff\fR \(em turn off debugging trace				358
.IE	ENTRY	traceon function		\fLtraceon\fR \(em turn on debugging trace				358
.IE	ENTRY	typeahead function		\fLtypeahead\fR \(em to check typeahead				358
.IE	ENTRY	wattroff function		\fLwattroff\fR \(em turn off window attributes				358
.IE	ENTRY	wattron function		\fLwattron\fR \(em turn on window attributes				358
.IE	ENTRY	wattrset function		\fLwattrset\fR \(em set window attributes				358
.IE	ENTRY	wnoutrefresh function		\fLwnoutrefresh\fR \(em refresh but no screen output				358
.IE	ENTRY	wsetscrreg function		\fLwsetscrreg\fR \(em set window scrolling region				358
.SE PAGINATE NEW-PAGE 359
.SE PAGINATE NEW-PAGE 360
.SE PAGINATE NEW-PAGE 361
.SE PAGINATE NEW-PAGE 362
.SE PAGINATE NEW-PAGE 363
.SE PAGINATE NEW-PAGE 364
.CE MAN-PAGE 1 FOPEN(3V) 364
.IE	ENTRY	fopen function		\fLfopen\fP \(em open stream				364
.IE	ENTRY	stream	open	stream	open \(em \fLfopen\fP			364
.IE	ENTRY	open stream \(em \fLfopen\fP						364
.IE	ENTRY	freopen function		\fLfreopen\fP \(em reopen stream				364
.IE	ENTRY	stream	reopen	stream	reopen \(em \fLfreopen\fP			364
.IE	ENTRY	reopen stream \(em \fLfreopen\fP						364
.IE	ENTRY	fdopen function		\fLfdopen\fP \(em associate descriptor				364
.IE	ENTRY	stream	associate descriptor \(em \fLfdopen\fP					364
.SE PAGINATE NEW-PAGE 365
.CE MAN-PAGE 1 FREAD(3V) 365
.IE	ENTRY	buffered binary I/O	fread		\fLfread\fP \(em read from stream			365
.IE	ENTRY	binary I/O, buffered	fread		\fLfread\fP \(em read from stream			365
.IE	ENTRY	I/O, buffered binary	fread		\fLfread\fP \(em read from stream			365
.IE	ENTRY	buffered binary I/O	frwite		\fLfrwite\fP \(em write to stream			365
.IE	ENTRY	binary I/O, buffered	frwite		\fLfrwite\fP \(em write to stream			365
.IE	ENTRY	I/O, buffered binary	frwite		\fLfrwite\fP \(em write to stream			365
.IE	ENTRY	fread function		\fLfread\fP \(em read from stream				365
.IE	ENTRY	read from stream \(em \fLfread\fP						365
.IE	ENTRY	fwrite function		\fLfwrite\fP \(em write to stream				365
.IE	ENTRY	write to stream \(em \fLfwrite\fP						365
.IE	ENTRY	stream	read		read from stream \(em \fLfread\fP			365
.IE	ENTRY	stream	rwite		write to stream \(em \fLfwrite\fP			365
.SE PAGINATE NEW-PAGE 366
.CE MAN-PAGE 1 GETPASS(3V) 366
.IE	ENTRY	getpass function		\fLgetpass\fP \(em read password				366
.IE	ENTRY	read password		read password \(em \fLgetpass\fP				366
.IE	ENTRY	password	read		read \(em \fLgetpass\fP			366
.SE PAGINATE NEW-PAGE 367
.CE MAN-PAGE 1 GETPWENT(3V) 367
.IE	ENTRY	getpwent function		\fLgetpwent\fP \(em get password file entry				367
.IE	ENTRY	getpwuid function		\fLgetpwuid\fP \(em get password file entry				367
.IE	ENTRY	getpwnam function		\fLgetpwnam\fP \(em get password file entry				367
.IE	ENTRY	setpwent function		\fLsetpwent\fP \(em get password file entry				367
.IE	ENTRY	endpwent function		\fLendpwent\fP \(em get password file entry				367
.IE	ENTRY	fgetpwent function		\fLfgetpwent\fP \(em get password file entry				367
.IE	ENTRY	get password file entry	getpwent		\fLgetpwent\fP			367
.IE	ENTRY	get password file entry	getpwuid		\fLgetpwuid\fP			367
.IE	ENTRY	get password file entry	getpwnam		\fLgetpwnam\fP			367
.IE	ENTRY	get password file entry	setpwent		\fLsetpwent\fP			367
.IE	ENTRY	get password file entry	endpwent		\fLendpwent\fP			367
.IE	ENTRY	get password file entry	fgetpwent		\fLfgetpwent\fP			367
.IE	ENTRY	password file	get entry getpwent		get entry \(em \fLgetpwent\fP			367
.IE	ENTRY	password file	get entry getpwuid		get entry \(em \fLgetpwuid\fP			367
.IE	ENTRY	password file	get entry getpwnam		get entry \(em \fLgetpwnam\fP			367
.IE	ENTRY	password file	get entry setpwent		get entry \(em \fLsetpwent\fP			367
.IE	ENTRY	password file	get entry endpwent		get entry \(em \fLendpwent\fP			367
.IE	ENTRY	password file	get entry fgetpwent		get entry \(em \fLfgetpwent\fP			367
.SE PAGINATE NEW-PAGE 368
.SE PAGINATE NEW-PAGE 369
.CE MAN-PAGE 1 PRINTF(3V) 369
.IE	ENTRY	formatted write	printf		\fLprintf\fP \(em format to stdout			369
.IE	ENTRY	formatted write	fprintf		\fLfprintf\fP \(em format to stream			369
.IE	ENTRY	formatted write	sprintf		\fLsprintf\fP \(em format to string			369
.IE	ENTRY	printf function		\fLprintf\fP \(em format to stdout				369
.IE	ENTRY	fprintf function		\fLfprintf\fP \(em format to stream				369
.IE	ENTRY	sprintf function		\fLsprintf\fP \(em format to string				369
.IE	ENTRY	stream	printf		\fLprintf\fP \(em format to stdout			369
.IE	ENTRY	stream	fprintf		\fLfprintf\fP \(em format to stream			369
.IE	ENTRY	stream	sprintf		\fLsprintf\fP \(em format to string			369
.IE	ENTRY	stream, formatted output	printf		\fLprintf\fP \(em format to stdout			369
.IE	ENTRY	stream, formatted output	fprintf		\fLfprintf\fP \(em format to stream			369
.IE	ENTRY	stream, formatted output	sprintf		\fLsprintf\fP \(em format to string			369
.IE	ENTRY	output conversion	printf		\fLprintf\fP \(em convert to stdout			369
.IE	ENTRY	output conversion	fprintf		\fLfprintf\fP \(em convert to stream			369
.IE	ENTRY	output conversion	sprintf		\fLsprintf\fP \(em convert to string			369
.IE	ENTRY	stream	output conversion	stream	output conversion \(em \fLprintf\fP			369
.IE	ENTRY	stdout	output conversion	stdout	output conversion \(em \fLprintf\fP			369
.IE	ENTRY	string	number conversion	string	number conversion \(em \fLprintf\fP			369
.IE	ENTRY	write formatted	printf		\fLprintf\fP \(em convert to stdout			369
.IE	ENTRY	write formatted	fprintf		\fLfprintf\fP \(em convert to stream			369
.IE	ENTRY	write formatted	sprintf		\fLsprintf\fP \(em convert to string			369
.IE	ENTRY	convert numbers to strings	printf		\fLprintf\fP			369
.IE	ENTRY	convert numbers to strings	fprintf		\fLfprintf\fP			369
.IE	ENTRY	convert numbers to strings	sprintf		\fLsprintf\fP			369
.SE PAGINATE NEW-PAGE 370
.SE PAGINATE NEW-PAGE 371
.SE PAGINATE NEW-PAGE 372
.CE MAN-PAGE 1 RAND(3V) 372
.IE	ENTRY	random number generator rand		random number generator \(em \fLrand\fP				372
.IE	ENTRY	generate random numbers rand		generate random numbers \(em \fLrand\fP				372
.IE	ENTRY	random number generator srand		random number generator \(em \fLsrand\fP				372
.IE	ENTRY	generate random numbers srand		generate random numbers \(em \fLsrand\fP				372
.IE	ENTRY	rand function		\fLrand\fP \(em generate random numbers				372
.IE	ENTRY	srand function		\fLsrand\fP \(em generate random numbers				372
.SE PAGINATE NEW-PAGE 373
.CE MAN-PAGE 1 SCANF(3V) 373
.IE	ENTRY	formatted input conversion	scanf		\fLscanf\fP \(em convert from stdin			373
.IE	ENTRY	formatted input conversion	fscanf		\fLfscanf\fP \(em convert from stream			373
.IE	ENTRY	formatted input conversion	sscanf		\fLsscanf\fP \(em convert from string			373
.IE	ENTRY	input conversion	scanf		\fLscanf\fP \(em convert from stdin			373
.IE	ENTRY	input conversion	fscanf		\fLfscanf\fP \(em convert from stream			373
.IE	ENTRY	input conversion	sscanf		\fLsscanf\fP \(em convert from string			373
.IE	ENTRY	scanf function		\fLscanf\fP \(em convert from stdin				373
.IE	ENTRY	fscanf function		\fLfscanf\fP \(em convert from stream				373
.IE	ENTRY	sscanf function		\fLsscanf\fP \(em convert from string				373
.IE	ENTRY	stream	input conversion	stream	input conversion \(em \fLscanf\fP			373
.IE	ENTRY	stdin	input conversion	stdin	input conversion \(em \fLscanf\fP			373
.IE	ENTRY	string	number conversion	string	number conversion \(em \fLscanf\fP			373
.IE	ENTRY	read formatted	scanf		\fLscanf\fP \(em convert from stdin			373
.IE	ENTRY	read formatted	fscanf		\fLfscanf\fP \(em convert from stream			373
.IE	ENTRY	read formatted	sscanf		\fLsscanf\fP \(em convert from string			373
.IE	ENTRY	convert strings to numbers	scanf		\fLscanf\fP			373
.IE	ENTRY	convert strings to numbers	fscanf		\fLfscanf\fP			373
.IE	ENTRY	convert strings to numbers	sscanf		\fLsscanf\fP			373
.SE PAGINATE NEW-PAGE 374
.SE PAGINATE NEW-PAGE 375
.SE PAGINATE NEW-PAGE 376
.CE MAN-PAGE 1 SETBUF(3V) 376
.IE	ENTRY	assign buffering to stream	setbuf"		\fLsetbuf\fP \(em assign buffering			376
.IE	ENTRY	assign buffering to stream	setbuffer"		\fLsetbuffer\fP \(em assign buffering			376
.IE	ENTRY	assign buffering to stream	setlinebuf"		\fLsetlinebuf\fP \(em assign buffering			376
.IE	ENTRY	assign buffering to stream	setvbuf"		\fLsetvbuf\fP \(em assign buffering			376
.IE	ENTRY	stream	assign buffering setbuf		assign buffering \(em \fLsetbuf\fP			376
.IE	ENTRY	stream	assign buffering setbuffer		assign buffering \(em \fLsetbuffer\fP			376
.IE	ENTRY	stream	assign buffering setlinebuffer		assign buffering \(em \fLsetlinebuf\fP			376
.IE	ENTRY	stream	assign buffering setvbuffer		assign buffering \(em \fLsetvbuf\fP			376
.IE	ENTRY	buffering	assign to stream setbuf	buffering	assign to stream \(em \fLsetbuf\fP			376
.IE	ENTRY	buffering	assign to stream setbuffer	buffering	assign to stream \(em \fLsetbuffer\fP			376
.IE	ENTRY	buffering	assign to stream setlinebuf	buffering	assign to stream \(em \fLsetlinebuf\fP			376
.IE	ENTRY	buffering	assign to stream setvbuf	buffering	assign to stream \(em \fLsetvbuf\fP			376
.IE	ENTRY	setbuf function		\fLsetbuf\fP \(em assign buffering				376
.IE	ENTRY	setbuffer function		\fLsetbuffer\fP \(em assign buffering				376
.IE	ENTRY	setlinebuf function		\fLsetlinebuf\fP \(em assign buffering				376
.IE	ENTRY	setvbuf function		\fLsetvbuf\fP \(em assign buffering				376
.SE PAGINATE NEW-PAGE 377
.SE PAGINATE NEW-PAGE 378
.CE MAN-PAGE 1 SETUID(3V) 378
.IE	ENTRY	setuid function		\fLsetuid\fP \(em set user ID				378
.SE PAGINATE NEW-PAGE 379
.CE MAN-PAGE 1 SLEEP(3V) 379
.IE	ENTRY	sleep function		\fLsleep\fP \(em suspend execution				379
.IE	ENTRY	suspend execution for interval		suspend execution \(em \fLsleep\fP				379
.IE	ENTRY	execution	suspend for interval					379
.SE PAGINATE NEW-PAGE 380
381
.SE PAGINATE NEW-PAGE 381
.CE MAN-PAGE 1 INTRO(3X) 381
.IE	ENTRY	introduction	miscellaneous library functions			PAGE	START	381
.IE	ENTRY	miscellaneous library functions	introduction to			PAGE	START	381
.IE	ENTRY	library functions	introduction to miscellaneous			PAGE	START	381
.IE	ENTRY	introduction	miscellaneous library functions			PAGE	END	381
.IE	ENTRY	miscellaneous library functions	introduction to			PAGE	END	381
.IE	ENTRY	library functions	introduction to miscellaneous			PAGE	END	381
.SE PAGINATE NEW-PAGE 382
.CE MAN-PAGE 1 CURSES(3X) 382
.IE	ENTRY	addch function		\fLaddch\fP \(em add character				382
.IE	ENTRY	addstr function		\fLaddstr\fP \(em add string				382
.IE	ENTRY	box function		\fLbox\fP \(em draw box around window				382
.IE	ENTRY	crmode function		\fLcrmode\fP \(em set cbreak mode				382
.IE	ENTRY	clear function		\fLclear\fP \(em clear				382
.IE	ENTRY	clearok function		\fLclearok\fP \(em set clear flag for screen				382
.IE	ENTRY	clrtobot function		\fLclrtobot\fP \(em clear to bottom				382
.IE	ENTRY	clrtoeol function		\fLclrtoeol\fP \(em clear to end of line				382
.IE	ENTRY	delch function		\fLdelch\fP \(em delete character				382
.IE	ENTRY	deleteln function		\fLdeleteln\fP \(em delete line				382
.IE	ENTRY	delwin function		\fLdelwin\fP \(em delete window				382
.IE	ENTRY	echo function		\fLecho\fP \(em set echo mode				382
.IE	ENTRY	endwin function		\fLendwin\fP \(em end window modes				382
.IE	ENTRY	erase function		\fLerase\fP \(em erase				382
.IE	ENTRY	getch function		\fLgetch\fP \(em get character				382
.IE	ENTRY	getcap function		\fLgetcap\fP \(em get terminal capability				382
.IE	ENTRY	getstr function		\fLgetstr\fP \(em get string through				382
.IE	ENTRY	gettmode function		\fLgettmode\fP \(em get tty modes				382
.IE	ENTRY	getyx function		\fLgetyx\fP \(em get (y,x) co-ordinates				382
.IE	ENTRY	inch function		\fLinch\fP \(em get character at current (y,x) co-ordinates				382
.IE	ENTRY	initscr function		\fLinitscr\fP \(em initialize screens				382
.IE	ENTRY	insch function		\fLinsch\fP \(em insert character				382
.IE	ENTRY	insertln function		\fLinsertln\fP \(em insert line				382
.IE	ENTRY	leaveok function		\fLleaveok\fP \(em set leave flag for window				382
.IE	ENTRY	longname function		\fLlongname\fP \(em get long name				382
.IE	ENTRY	move function		\fLmove\fP \(em move to (y,x)				382
.IE	ENTRY	mvcur function		\fLmvcur\fP \(em actually move cursor				382
.IE	ENTRY	newwin  function		\fLnewwin \fP \(em create new window				382
.IE	ENTRY	nl function		\fLnl\fP \(em set newline mapping				382
.IE	ENTRY	nocrmode function		\fLnocrmode\fP \(em unset cbreak mode				382
.IE	ENTRY	noecho function		\fLnoecho\fP \(em unset echo mode				382
.IE	ENTRY	nonl function		\fLnonl\fP \(em unset newline mapping				382
.IE	ENTRY	noraw function		\fLnoraw\fP \(em unset raw mode				382
.IE	ENTRY	overlay function		\fLoverlay\fP \(em overlay win1 on win2				382
.IE	ENTRY	overwrite function		\fLoverwrite\fP \(em overwrite win1 on win2				382
.IE	ENTRY	printw function		\fLprintw\fP \(em printf to window				382
.IE	ENTRY	raw function		\fLraw\fP \(em set raw mode				382
.IE	ENTRY	refresh function		\fLrefresh\fP \(em refresh current screen				382
.IE	ENTRY	resetty function		\fLresetty\fP \(em reset tty flags to stored value				382
.IE	ENTRY	savetty function		\fLsavetty\fP \(em stored current tty flags				382
.IE	ENTRY	scanw function		\fLscanw\fP \(em scanf through string				382
.IE	ENTRY	scroll function		\fLscroll\fP \(em scroll window one line				382
.IE	ENTRY	scrollok function		\fLscrollok\fP \(em set scroll flag				382
.IE	ENTRY	setterm function		\fLsetterm\fP \(em set term variables for name				382
.IE	ENTRY	standend function		\fLstandend\fP \(em end standout mode				382
.IE	ENTRY	standout function		\fLstandout\fP \(em start standout mode				382
.IE	ENTRY	subwin  function		\fLsubwin \fP \(em create subwindow				382
.IE	ENTRY	touchwin function		\fLtouchwin\fP \(em change all window				382
.IE	ENTRY	unctrl function		\fLunctrl\fP \(em printable version of control				382
.IE	ENTRY	waddch function		\fLwaddch\fP \(em add character				382
.IE	ENTRY	waddstr function		\fLwaddstr\fP \(em add string				382
.IE	ENTRY	wclear function		\fLwclear\fP \(em clear window				382
.IE	ENTRY	wclrtobot function		\fLwclrtobot\fP \(em clear to bottom of window				382
.IE	ENTRY	wclrtoeol function		\fLwclrtoeol\fP \(em clear to end of line				382
.IE	ENTRY	wdelch function		\fLwdelch\fP \(em delete character from window				382
.IE	ENTRY	wdeleteln function		\fLwdeleteln\fP \(em delete line from window				382
.IE	ENTRY	werase function		\fLwerase\fP \(em erase window				382
.IE	ENTRY	wgetch function		\fLwgetch\fP \(em get character through window				382
.IE	ENTRY	wgetstr function		\fLwgetstr\fP \(em get string through window				382
.IE	ENTRY	winch function		\fLwinch\fP \(em get character at current (y,x) in window				382
.IE	ENTRY	winsch function		\fLwinsch\fP \(em insert character in				382
.IE	ENTRY	winsertln function		\fLwinsertln\fP \(em insert line in				382
.IE	ENTRY	wmove function		\fLwmove\fP \(em set current (y,x) co-ordinates				382
.IE	ENTRY	wprintw  function		\fLwprintw \fP \(em printf to window				382
.IE	ENTRY	wrefresh function		\fLwrefresh\fP \(em make screen look like window				382
.IE	ENTRY	wscanw  function		\fLwscanw \fP \(em scanf through window				382
.IE	ENTRY	wstandend function		\fLwstandend\fP \(em end standout mode				382
.IE	ENTRY	wstandout function		\fLwstandout\fP \(em start standout mode				382
.IE	ENTRY	add character addch		add character \(em \fLaddch\fP				382
.IE	ENTRY	add string addstr		add string \(em \fLaddstr\fP				382
.IE	ENTRY	draw box around window		draw box around window \(em \fLbox\fP				382
.IE	ENTRY	set cbreak mode		set cbreak mode \(em \fLcrmode\fP				382
.IE	ENTRY	clear		clear \(em \fLclear\fP				382
.IE	ENTRY	set clear flag for screen		set clear flag for screen \(em \fLclearok\fP				382
.IE	ENTRY	clear to bottom		clear to bottom \(em \fLclrtobot\fP				382
.IE	ENTRY	clear to end of line clrtoeol		clear to end of line \(em \fLclrtoeol\fP				382
.IE	ENTRY	delete character		delete character \(em \fLdelch\fP				382
.IE	ENTRY	delete line		delete line \(em \fLdeleteln\fP				382
.IE	ENTRY	delete window		delete window \(em \fLdelwin\fP				382
.IE	ENTRY	set echo mode		set echo mode \(em \fLecho\fP				382
.IE	ENTRY	end window modes		end window modes \(em \fLendwin\fP				382
.IE	ENTRY	erase		erase \(em \fLerase\fP				382
.IE	ENTRY	get character		get character \(em \fLgetch\fP				382
.IE	ENTRY	get terminal capability		get terminal capability \(em \fLgetcap\fP				382
.IE	ENTRY	get string		get string \(em \fLgetstr\fP				382
.IE	ENTRY	get tty modes		get tty modes \(em \fLgettmode\fP				382
.IE	ENTRY	get (y,x) co-ordinates		get (y,x) co-ordinates \(em \fLgetyx\fP				382
.IE	ENTRY	get character at current (y,x) co-ordinates		get character at current (y,x) co-ordinates \(em \fLinch\fP				382
.IE	ENTRY	initialize screens		initialize screens \(em \fLinitscr\fP				382
.IE	ENTRY	insert character		insert character \(em \fLinsch\fP				382
.IE	ENTRY	insert line		insert line \(em \fLinsertln\fP				382
.IE	ENTRY	set leave flag for window		set leave flag for window \(em \fLleaveok\fP				382
.IE	ENTRY	get long name		get long name \(em \fLlongname\fP				382
.IE	ENTRY	move to (y,x)		move to (y,x) \(em \fLmove\fP				382
.IE	ENTRY	actually move cursor		actually move cursor \(em \fLmvcur\fP				382
.IE	ENTRY	create new window		create new window \(em \fLnewwin \fP				382
.IE	ENTRY	set newline mapping		set newline mapping \(em \fLnl\fP				382
.IE	ENTRY	unset cbreak mode		unset cbreak mode \(em \fLnocrmode\fP				382
.IE	ENTRY	unset echo mode		unset echo mode \(em \fLnoecho\fP				382
.IE	ENTRY	unset newline mapping		unset newline mapping \(em \fLnonl\fP				382
.IE	ENTRY	unset raw mode		unset raw mode \(em \fLnoraw\fP				382
.IE	ENTRY	overlay win1 on win2		overlay win1 on win2 \(em \fLoverlay\fP				382
.IE	ENTRY	overwrite win1 on win2		overwrite win1 on win2 \(em \fLoverwrite\fP				382
.IE	ENTRY	printf to window printw		printf to window \(em \fLprintw\fP				382
.IE	ENTRY	set raw mode		set raw mode \(em \fLraw\fP				382
.IE	ENTRY	refresh current screen		refresh current screen \(em \fLrefresh\fP				382
.IE	ENTRY	reset tty flags to stored value		reset tty flags to stored value \(em \fLresetty\fP				382
.IE	ENTRY	stored current tty flags		stored current tty flags \(em \fLsavetty\fP				382
.IE	ENTRY	scanf through string		scanf through string \(em \fLscanw\fP				382
.IE	ENTRY	scroll window one line		scroll window one line \(em \fLscroll\fP				382
.IE	ENTRY	set scroll flag		set scroll flag \(em \fLscrollok\fP				382
.IE	ENTRY	set term variables for name		set term variables for name \(em \fLsetterm\fP				382
.IE	ENTRY	end standout mode standend		end standout mode \(em \fLstandend\fP				382
.IE	ENTRY	start standout mode standout		start standout mode \(em \fLstandout\fP				382
.IE	ENTRY	create subwindow		create subwindow \(em \fLsubwin \fP				382
.IE	ENTRY	change all window		change all window \(em \fLtouchwin\fP				382
.IE	ENTRY	printable version of control		printable version of control \(em \fLunctrl\fP				382
.IE	ENTRY	add character waddch		add character \(em \fLwaddch\fP				382
.IE	ENTRY	add string waddstr		add string \(em \fLwaddstr\fP				382
.IE	ENTRY	clear window		clear window \(em \fLwclear\fP				382
.IE	ENTRY	clear to bottom of window		clear to bottom of window \(em \fLwclrtobot\fP				382
.IE	ENTRY	clear to end of line wclrtoeol		clear to end of line \(em \fLwclrtoeol\fP				382
.IE	ENTRY	delete character from window		delete character from window \(em \fLwdelch\fP				382
.IE	ENTRY	delete line from window		delete line from window \(em \fLwdeleteln\fP				382
.IE	ENTRY	erase window		erase window \(em \fLwerase\fP				382
.IE	ENTRY	get character through window		get character through window \(em \fLwgetch\fP				382
.IE	ENTRY	get string through window		get string through window \(em \fLwgetstr\fP				382
.IE	ENTRY	get character at current (y,x) in window		get character at current (y,x) in window \(em \fLwinch\fP				382
.IE	ENTRY	insert character in		insert character in \(em \fLwinsch\fP				382
.IE	ENTRY	insert line in		insert line in \(em \fLwinsertln\fP				382
.IE	ENTRY	set current (y,x) co-ordinates		set current (y,x) co-ordinates \(em \fLwmove\fP				382
.IE	ENTRY	printf to window wprintw		printf to window \(em \fLwprintw \fP				382
.IE	ENTRY	make screen look like window		make screen look like window \(em \fLwrefresh\fP				382
.IE	ENTRY	scanf through window		scanf through window \(em \fLwscanw \fP				382
.IE	ENTRY	end standout mode wstandend		end standout mode \(em \fLwstandend\fP				382
.IE	ENTRY	start standout mode wstandout		start standout mode \(em \fLwstandout\fP				382
.SE PAGINATE NEW-PAGE 383
.SE PAGINATE NEW-PAGE 384
.CE MAN-PAGE 1 DBM(3X) 384
.IE	ENTRY	database library functions	ldbm option		ldbm option			384
.IE	ENTRY	dbminit function		\fLdbminit\fP \(em open database				384
.IE	ENTRY	open database \(em \fLdbminit\fP						384
.IE	ENTRY	database functions	dbminit		\fLdbminit\fP			384
.IE	ENTRY	fetch function		\fLfetch\fP \(em retrieve datum under key				384
.IE	ENTRY	retrieve datum under key \(em \fLfetch\fP						384
.IE	ENTRY	database functions	fetch		\fLfetch\fP			384
.IE	ENTRY	store function		\fLstore\fP \(em store datum under key				384
.IE	ENTRY	store datum under key \(em \fLstore\fP						384
.IE	ENTRY	database functions	store		\fLstore\fP			384
.IE	ENTRY	delete function		\fLdelete\fP \(em delete datum and key				384
.IE	ENTRY	delete datum and key \(em \fLdelete\fP						384
.IE	ENTRY	database functions	delete		\fLdelete\fP			384
.IE	ENTRY	firstkey function		\fLfirstkey\fP \(em find first key				384
.IE	ENTRY	find first key \(em \fLfirstkey\fP						384
.IE	ENTRY	database functions	firstkey		\fLfirstkey\fP			384
.IE	ENTRY	nextkey function		\fLnextkey\fP \(em find next key				384
.IE	ENTRY	find next key \(em \fLnextkey\fP						384
.IE	ENTRY	database functions	nextkey		\fLnextkey\fP			384
.SE PAGINATE NEW-PAGE 385
.SE PAGINATE NEW-PAGE 386
.CE MAN-PAGE 1 MP(3X) 386
.IE	ENTRY	itom function		\fLitom\fP \(em integer to multiple precision				386
.IE	ENTRY	multiple precision integer arithmetic	itom		\fLitom\fP			386
.IE	ENTRY	madd function		\fLmadd\fP \(em multiple precision add				386
.IE	ENTRY	multiple precision integer arithmetic	madd		\fLmadd\fP			386
.IE	ENTRY	msub function		\fLmsub\fP \(em multiple precision subtract				386
.IE	ENTRY	multiple precision integer arithmetic	msub		\fLmsub\fP			386
.IE	ENTRY	mult function		\fLmult\fP \(em multiple precision multiply				386
.IE	ENTRY	multiple precision integer arithmetic	mult		\fLmult\fP			386
.IE	ENTRY	mdiv function		\fLmdiv\fP \(em multiple precision divide				386
.IE	ENTRY	multiple precision integer arithmetic	mdiv		\fLmdiv\fP			386
.IE	ENTRY	sdiv function		\fLsdiv\fP \(em multiple precision divide				386
.IE	ENTRY	multiple precision integer arithmetic	sdiv		\fLsdiv\fP			386
.IE	ENTRY	min function		\fLmin\fP \(em multiple precision decimal input				386
.IE	ENTRY	multiple precision integer arithmetic	min		\fLmin\fP			386
.IE	ENTRY	mout function		\fLmout\fP \(em multiple precision decimal output				386
.IE	ENTRY	multiple precision integer arithmetic	mout		\fLmout\fP			386
.IE	ENTRY	pow function		\fLpow\fP \(em multiple precision exponential				386
.IE	ENTRY	multiple precision integer arithmetic	pow		\fLpow\fP			386
.IE	ENTRY	gcd function		\fLgcd\fP \(em multiple precision GCD				386
.IE	ENTRY	multiple precision integer arithmetic	gcd		\fLgcd\fP			386
.IE	ENTRY	rpow function		\fLrpow\fP \(em multiple precision exponential				386
.IE	ENTRY	multiple precision integer arithmetic	rpow		\fLrpow\fP			386
.IE	ENTRY	msqrt function		\fLmsqrt\fP \(em multiple precision exponential				386
.IE	ENTRY	multiple precision integer arithmetic	msqrt		\fLmsqrt\fP			386
.IE	ENTRY	xtom function		\fLxtom\fP \(em hexadecimal string to multiple precision				386
.IE	ENTRY	multiple precision integer arithmetic	xtom		\fLxtom\fP			386
.IE	ENTRY	mtox function		\fLmtox\fP \(em multiple precision to hexadecimal string				386
.IE	ENTRY	multiple precision integer arithmetic	mtox		\fLmtox\fP			386
.IE	ENTRY	mfree function		\fLmfree\fP \(em release multiple precision storage				386
.IE	ENTRY	multiple precision integer arithmetic	mfree		\fLmfree\fP			386
.SE PAGINATE NEW-PAGE 387
.SE PAGINATE NEW-PAGE 388
.CE MAN-PAGE 1 NDBM(3X) 388
.SE PAGINATE NEW-PAGE 389
.SE PAGINATE NEW-PAGE 390
.CE MAN-PAGE 1 PLOT(3X) 390
.IE	ENTRY	openpl function		\fLopenpl\fP \(em open plot device				390
.IE	ENTRY	graphics interface	openpl		\fLopenpl\fP			390
.IE	ENTRY	erase function		\fLerase\fP \(em start new plot frame				390
.IE	ENTRY	graphics interface	erase		\fLerase\fP			390
.IE	ENTRY	label function		\fLlabel\fP \(em plot label				390
.IE	ENTRY	graphics interface	label		\fLlabel\fP			390
.IE	ENTRY	line function		\fLline\fP \(em plot line				390
.IE	ENTRY	graphics interface	line		\fLline\fP			390
.IE	ENTRY	circle function		\fLcircle\fP \(em plot circle				390
.IE	ENTRY	graphics interface	circle		\fLcircle\fP			390
.IE	ENTRY	arc function		\fLarc\fP \(em plot arc				390
.IE	ENTRY	graphics interface	arc		\fLarc\fP			390
.IE	ENTRY	move function		\fLmove\fP \(em move current point				390
.IE	ENTRY	graphics interface	move		\fLmove\fP			390
.IE	ENTRY	cont function		\fLcont\fP \(em continue line				390
.IE	ENTRY	graphics interface	cont		\fLcont\fP			390
.IE	ENTRY	point function		\fLpoint\fP \(em plot point				390
.IE	ENTRY	graphics interface	point		\fLpoint\fP			390
.IE	ENTRY	linemod function		\fLlinemod\fP \(em set line style				390
.IE	ENTRY	graphics interface	linemod		\fLlinemod\fP			390
.IE	ENTRY	space function		\fLspace\fP \(em specify plot space				390
.IE	ENTRY	graphics interface	space		\fLspace\fP			390
.IE	ENTRY	closepl function		\fLclosepl\fP \(em close plot device				390
.IE	ENTRY	graphics interface	closepl		\fLclosepl\fP			390
.SE PAGINATE NEW-PAGE 391
.CE MAN-PAGE 1 TERMCAP(3X) 391
.IE	ENTRY	tgetent function		\fLtgetent\fP \(em get entry for terminal				391
.IE	ENTRY	terminal independent operations	tgetent		\fLtgetent\fP			391
.IE	ENTRY	tgetnum function		\fLtgetnum\fP \(em get numeric cabability				391
.IE	ENTRY	terminal independent operations	tgetnum		\fLtgetnum\fP			391
.IE	ENTRY	tgetflag function		\fLtgetflag\fP \(em get Boolean cabability				391
.IE	ENTRY	terminal independent operations	tgetflag		\fLtgetflag\fP			391
.IE	ENTRY	tgetstr function		\fLtgetstr\fP \(em get string cabability				391
.IE	ENTRY	terminal independent operations	tgetstr		\fLtgetstr\fP			391
.IE	ENTRY	tgoto function		\fLtgoto\fP \(em go to position				391
.IE	ENTRY	terminal independent operations	tgoto		\fLtgoto\fP			391
.IE	ENTRY	tputs function		\fLtputs\fP \(em decode padding information				391
.IE	ENTRY	terminal independent operations	tputs		\fLtputs\fP			391
.SE PAGINATE NEW-PAGE 392
393
.SE PAGINATE NEW-PAGE 393
.CE MAN-PAGE 1 INTRO(4) 393
.IE	ENTRY	devices, introduction to				PAGE	START	393
.IE	ENTRY	special files, introduction to				PAGE	START	393
.IE	ENTRY	hardware support, introduction to				PAGE	START	393
.IE	ENTRY	introduction	to devices			PAGE	START	393
.IE	ENTRY	introduction	to special files			PAGE	START	393
.IE	ENTRY	introduction	to hardware support			PAGE	START	393
.SE PAGINATE NEW-PAGE 394
.IE	ENTRY	FIOCLEX set exclusive use on fd		\fLFIOCLEX\fP \(em set exclusive use on fd				394
.IE	ENTRY	set exclusive use on fd ioctl		set exclusive use on fd \fLioctl\fP \(em \fLFIOCLEX\fP				394
.IE	ENTRY	ioctls for files	FIOCLEX	\fLioctl\fP's for files	\fLFIOCLEX\fP \(em set exclusive use on fd			394
.IE	ENTRY	FIONCLEX remove exclusive use		\fLFIONCLEX\fP \(em remove exclusive use				394
.IE	ENTRY	remove exclusive use ioctl		remove exclusive use \fLioctl\fP \(em \fLFIONCLEX\fP				394
.IE	ENTRY	ioctls for files	FIONCLEX	\fLioctl\fP's for files	\fLFIONCLEX\fP \(em remove exclusive use			394
.IE	ENTRY	FIONREAD get # bytes to read		\fLFIONREAD\fP \(em get # bytes to read				394
.IE	ENTRY	get # bytes to read ioctl		get # bytes to read \fLioctl\fP \(em \fLFIONREAD\fP				394
.IE	ENTRY	ioctls for files	FIONREAD	\fLioctl\fP's for files	\fLFIONREAD\fP \(em get # bytes to read			394
.IE	ENTRY	FIONBIO set/clear non-blocking I/O		\fLFIONBIO\fP \(em set/clear non-blocking I/O				394
.IE	ENTRY	set/clear non-blocking I/O ioctl		set/clear non-blocking I/O \fLioctl\fP \(em \fLFIONBIO\fP				394
.IE	ENTRY	ioctls for files	FIONBIO	\fLioctl\fP's for files	\fLFIONBIO\fP \(em set/clear non-blocking I/O			394
.IE	ENTRY	FIOASYNC set/clear async I/O		\fLFIOASYNC\fP \(em set/clear async I/O				394
.IE	ENTRY	set/clear async I/O ioctl		set/clear async I/O \fLioctl\fP \(em \fLFIOASYNC\fP				394
.IE	ENTRY	ioctls for files	FIOASYNC	\fLioctl\fP's for files	\fLFIOASYNC\fP \(em set/clear async I/O			394
.IE	ENTRY	FIOSETOWN set file owner		\fLFIOSETOWN\fP \(em set file owner				394
.IE	ENTRY	set file owner ioctl		set file owner \fLioctl\fP \(em \fLFIOSETOWN\fP				394
.IE	ENTRY	ioctls for files	FIOSETOWN	\fLioctl\fP's for files	\fLFIOSETOWN\fP \(em set owner			394
.IE	ENTRY	FIOGETOWN get file owner		\fLFIOGETOWN\fP \(em get file owner				394
.IE	ENTRY	get file owner ioctl		get file owner \fLioctl\fP \(em \fLFIOGETOWN\fP				394
.IE	ENTRY	ioctls for files	FIOGETOWN	\fLioctl\fP's for files	\fLFIOGETOWN\fP get owner			394
.IE	ENTRY	devices, introduction to				PAGE	END	394
.IE	ENTRY	special files, introduction to				PAGE	END	394
.IE	ENTRY	hardware support, introduction to				PAGE	END	394
.IE	ENTRY	introduction	to devices			PAGE	END	394
.IE	ENTRY	introduction	to special files			PAGE	END	394
.IE	ENTRY	introduction	to hardware support			PAGE	END	394
.SE PAGINATE NEW-PAGE 395
.CE MAN-PAGE 1 AR(4S) 395
.IE	ENTRY	ar device		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive		PAGE	START	395
.IE	ENTRY	1/4-inch tape drive	ar		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive	PAGE	START	395
.IE	ENTRY	streaming 1/4-inch tape drive		streaming 1/4-inch tape drive \(em \fLar\fP		PAGE	START	395
.IE	ENTRY	tape drive, 1/4-inch	ar		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive	PAGE	START	395
.IE	ENTRY	ar device		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive		PAGE	END	395
.IE	ENTRY	1/4-inch tape drive	ar		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive	PAGE	END	395
.IE	ENTRY	streaming 1/4-inch tape drive		streaming 1/4-inch tape drive \(em \fLar\fP		PAGE	END	395
.IE	ENTRY	tape drive, 1/4-inch	ar		\fLar\fP \(em Archive 1/4-inch Streaming Tape Drive	PAGE	END	395
.SE PAGINATE NEW-PAGE 396
.CE MAN-PAGE 1 ARP(4P) 396
.IE	ENTRY	arp device		\fLarp\fP \(em Address Resolution Protocol		PAGE	START	396
.IE	ENTRY	Internet	to Ethernet address resolution arp		to Ethernet address resolution \(em \fLarp\fP	PAGE	START	396
.IE	ENTRY	ioctls for sockets	SIOCSARP	\fLioctl\fP's for sockets	\fLSIOCSARP\fP \(em set arp entry			396
.IE	ENTRY	SIOCSARP set arp entry		\fLSIOCSARP\fP \(em set arp entry				396
.IE	ENTRY	set arp entry ioctl		set arp entry \fLioctl\fP \(em \fLSIOCSARP\fP				396
.IE	ENTRY	arp ioctl	SIOCSARP set arp entry	arp \fLioctl\fP	\fLSIOCSARP\fP \(em set arp entry			396
.IE	ENTRY	ioctls for sockets	SIOCGARP	\fLioctl\fP's for sockets	\fLSIOCGARP\fP \(em get arp entry			396
.IE	ENTRY	SIOCGARP get arp entry		\fLSIOCGARP\fP \(em get arp entry				396
.IE	ENTRY	get arp entry ioctl		get arp entry \fLioctl\fP \(em \fLSIOCGARP\fP				396
.IE	ENTRY	arp ioctl	SIOCGARP get arp entry	arp \fLioctl\fP	\fLSIOCGARP\fP \(em get arp entry			396
.IE	ENTRY	ioctls for sockets	SIOCDARP	\fLioctl\fP's for sockets	\fLSIOCDARP\fP \(em delete arp entry			396
.IE	ENTRY	SIOCDARP delete arp entry		\fLSIOCDARP\fP \(em delete arp entry				396
.IE	ENTRY	delete arp entry ioctl		delete arp entry \fLioctl\fP \(em \fLSIOCDARP\fP				396
.IE	ENTRY	arp ioctl	SIOCDARP delete arp entry	arp \fLioctl\fP	\fLSIOCDARP\fP \(em delete arp entry			396
.SE PAGINATE NEW-PAGE 397
.IE	ENTRY	arp device		\fLarp\fP \(em Address Resolution Protocol		PAGE	END	397
.IE	ENTRY	Internet	to Ethernet address resolution arp		to Ethernet address resolution \(em \fLarp\fP	PAGE	END	397
.SE PAGINATE NEW-PAGE 398
.CE MAN-PAGE 1 BK(4) 398
.IE	ENTRY	bk device		\fLbk\fP \(em machine-machine communication line discipline		PAGE	START	398
.IE	ENTRY	machine-machine communication line discipline		machine-machine communication line discipline \(em \fLbk\fP		PAGE	START	398
.IE	ENTRY	line discipline		line discipline \(em \fLbk\fP		PAGE	START	398
.IE	ENTRY	ioctls for terminals	TIOCSETD	\fLioctl\fP's for terminals	\fLTIOCSETD\fP \(em set line discipline			398
.IE	ENTRY	TIOCSETD set line discipline		\fLTIOCSETD\fP \(em set line discipline				398
.IE	ENTRY	set line discipline ioctl		set line discipline \fLioctl\fP \(em \fLTIOCSETD\fP				398
.IE	ENTRY	line discipline ioctls	TIOCSETD	line discipline \fLioctl\fP's	\fLTIOCSETD\fP \(em set line discipline			398
.IE	ENTRY	bk ioctls	TIOCSETD	\fLbk ioctl\fP's	\fLTIOCSETD\fP \(em set line discipline			398
.IE	ENTRY	ioctls for terminals	TIOCGETD	\fLioctl\fP's for terminals	\fLTIOCGETD\fP \(em get line discipline			398
.IE	ENTRY	TIOCGETD get line discipline		\fLTIOCGETD\fP \(em get line discipline				398
.IE	ENTRY	get line discipline ioctl		get line discipline \fLioctl\fP \(em \fLTIOCGETD\fP				398
.IE	ENTRY	line discipline ioctls	TIOCGETD	line discipline \fLioctl\fP's	\fLTIOCGETD\fP \(em get line discipline			398
.IE	ENTRY	bk ioctls	TIOCGETD	\fLbk ioctl\fP's	\fLTIOCGETD\fP \(em get line discipline			398
.IE	ENTRY	bk device		\fLbk\fP \(em machine-machine communication line discipline		PAGE	END	398
.IE	ENTRY	machine-machine communication line discipline		machine-machine communication line discipline \(em \fLbk\fP		PAGE	END	398
.IE	ENTRY	line discipline		line discipline \(em \fLbk\fP		PAGE	END	398
.SE PAGINATE NEW-PAGE 399
.CE MAN-PAGE 1 BWONE(4S) 399
.IE	ENTRY	bwone device		\fLbwone\fP \(em Sun-1 black and white frame buffer		PAGE	START	399
.IE	ENTRY	frame buffer	bwone		\fLbwone\fP \(em Sun-1 black and white frame buffer	PAGE	START	399
.IE	ENTRY	monochrome frame buffer bwone		monochrome frame buffer \(em \fLbwone\fP		PAGE	START	399
.IE	ENTRY	bwone device		\fLbwone\fP \(em Sun-1 black and white frame buffer		PAGE	END	399
.IE	ENTRY	frame buffer	bwone		\fLbwone\fP \(em Sun-1 black and white frame buffer	PAGE	END	399
.IE	ENTRY	monochrome frame buffer bwone		monochrome frame buffer \(em \fLbwone\fP		PAGE	END	399
.SE PAGINATE NEW-PAGE 400
.CE MAN-PAGE 1 BWTWO(4S) 400
.IE	ENTRY	bwtwo device		\fLbwtwo\fP \(em Sun-3/Sun-2 black and white frame buffer		PAGE	START	400
.IE	ENTRY	frame buffer	bwtwo		\fLbwtwo\fP \(em Sun-3/Sun-2 black and white frame buffer	PAGE	START	400
.IE	ENTRY	monochrome frame buffer bwtwo		monochrome frame buffer \(em \fLbwtwo\fP		PAGE	START	400
.IE	ENTRY	bwtwo device		\fLbwtwo\fP \(em Sun-3/Sun-2 black and white frame buffer		PAGE	END	400
.IE	ENTRY	frame buffer	bwtwo		\fLbwtwo\fP \(em Sun-3/Sun-2 black and white frame buffer	PAGE	END	400
.IE	ENTRY	monochrome frame buffer bwtwo		monochrome frame buffer \(em \fLbwtwo\fP		PAGE	END	400
.SE PAGINATE NEW-PAGE 401
.CE MAN-PAGE 1 CGONE(4S) 401
.IE	ENTRY	cgone device		\fLcgone\fP \(em Sun-1 color graphics interface		PAGE	START	401
.IE	ENTRY	color graphics interface	cgone		\fLcgone\fP \(em Sun-1 color graphics interface	PAGE	START	401
.IE	ENTRY	cgone device		\fLcgone\fP \(em Sun-1 color graphics interface		PAGE	END	401
.IE	ENTRY	color graphics interface	cgone		\fLcgone\fP \(em Sun-1 color graphics interface	PAGE	END	401
.SE PAGINATE NEW-PAGE 402
.CE MAN-PAGE 1 CGTWO(4S) 402
.IE	ENTRY	cgtwo device		\fLcgtwo\fP \(em Sun-3/Sun-2 color graphics interface		PAGE	START	402
.IE	ENTRY	color graphics interface	cgtwo		\fLcgtwo\fP \(em Sun-3/Sun-2 color graphics interface	PAGE	START	402
.IE	ENTRY	cgtwo device		\fLcgtwo\fP \(em Sun-3/Sun-2 color graphics interface		PAGE	END	402
.IE	ENTRY	color graphics interface	cgtwo		\fLcgtwo\fP \(em Sun-3/Sun-2 color graphics interface	PAGE	END	402
.SE PAGINATE NEW-PAGE 403
.CE MAN-PAGE 1 CONS(4S) 403
.IE	ENTRY	cons device		\fLcons\fP \(em console driver/terminal emulator		PAGE	START	403
.IE	ENTRY	terminal emulator		terminal emulator \(em \fLcons\fP		PAGE	START	403
.IE	ENTRY	ANSI terminal emulation		ANSI terminal emulation \(em \fLcons\fP		PAGE	START	403
.IE	ENTRY	ioctls for terminals	TIOCCONS	\fLioctl\fP's for terminals	\fLTIOCCONS\fP \(em get console I/O			403
.IE	ENTRY	TIOCCONS get console I/O		\fLTIOCCONS\fP \(em get console I/O				403
.IE	ENTRY	get console I/O ioctl		get console I/O \fLioctl\fP \(em \fLTIOCCONS\fP				403
.IE	ENTRY	console I/O ioctl	TIOCCONS	console I/O \fLioctl\fP	\fLTIOCCONS\fP			403
.IE	ENTRY	ANSI standard terminal emulation				PAGE	START	403
.IE	ENTRY	terminal emulation, ANSI				PAGE	START	403
.SE PAGINATE NEW-PAGE 404
.SE PAGINATE NEW-PAGE 405
.SE PAGINATE NEW-PAGE 406
.SE PAGINATE NEW-PAGE 407
.IE	ENTRY	ANSI standard terminal emulation				PAGE	END	407
.IE	ENTRY	terminal emulation, ANSI				PAGE	END	407
.IE	ENTRY	cons device		\fLcons\fP \(em console driver/terminal emulator		PAGE	END	407
.IE	ENTRY	terminal emulator		terminal emulator \(em \fLcons\fP		PAGE	END	407
.IE	ENTRY	ANSI terminal emulation		ANSI terminal emulation \(em \fLcons\fP		PAGE	END	407
.SE PAGINATE NEW-PAGE 408
.CE MAN-PAGE 1 DES(4S) 408
.IE	ENTRY	des device		\fLdes\fP \(em DES encryption chip interface		PAGE	START	408
.IE	ENTRY	encryption chip		encryption chip \(em \fLdes\fP		PAGE	START	408
.IE	ENTRY	ioctls for des encryption chip	DESIOCBLOCK	\fLioctl\fP's for des chip	\fLDESIOCBLOCK\fP \(em process block			408
.IE	ENTRY	DESIOCBLOCK process block		\fLDESIOCBLOCK\fP \(em process block				408
.IE	ENTRY	process block ioctl		process block \fLioctl\fP \(em \fLDESIOCBLOCK\fP				408
.IE	ENTRY	ioctls for des encryption chip	DESIOCQUICK	\fLioctl\fP's for des chip	\fLDESIOCQUICK\fP \(em process quickly			408
.IE	ENTRY	DESIOCQUICK process quickly		\fLDESIOCQUICK\fP \(em process quickly				408
.IE	ENTRY	process quickly ioctl		process quickly \fLioctl\fP \(em \fLDESIOCQUICK\fP				408
.IE	ENTRY	des device		\fLdes\fP \(em DES encryption chip interface		PAGE	END	408
.IE	ENTRY	encryption chip		encryption chip \(em \fLdes\fP		PAGE	END	408
.SE PAGINATE NEW-PAGE 409
.CE MAN-PAGE 1 DKIO(4S) 409
.IE	ENTRY	dkio device		\fLdkio\fP \(em disk control operations		PAGE	START	409
.IE	ENTRY	disk control operations		disk control operations \(em \fLdkio\fP		PAGE	START	409
.IE	ENTRY	generic disk control operations		generic disk control operations \(em \fLdkio\fP		PAGE	START	409
.SE PAGINATE NEW-PAGE 410
.IE	ENTRY	ioctls for disks	DKIOCGGEOM	\fLioctl\fP's for disks	\fLDKIOCGGEOM\fP \(em get disk geometry			410
.IE	ENTRY	DKIOCGGEOM get disk geometry		\fLDKIOCGGEOM\fP \(em get disk geometry				410
.IE	ENTRY	get disk geometry ioctl		get disk geometry \fLioctl\fP \(em \fLDKIOCGGEOM\fP				410
.IE	ENTRY	ioctls for disks	DKIOCSGEOM	\fLioctl\fP's for disks	\fLDKIOCSGEOM\fP \(em set disk geometry			410
.IE	ENTRY	DKIOCSGEOM set disk geometry		\fLDKIOCSGEOM\fP \(em set disk geometry				410
.IE	ENTRY	set disk geometry ioctl		set disk geometry \fLioctl\fP \(em \fLDKIOCSGEOM\fP				410
.IE	ENTRY	ioctls for disks	DKIOCGPART	\fLioctl\fP's for disks	\fLDKIOCGPART\fP \(em get disk partition info			410
.IE	ENTRY	DKIOCGPART get disk partition info		\fLDKIOCGPART\fP \(em get disk partition info				410
.IE	ENTRY	get disk partition info ioctl		get disk partition info \fLioctl\fP \(em \fLDKIOCGPART\fP				410
.IE	ENTRY	ioctls for disks	DKIOCSPART	\fLioctl\fP's for disks	\fLDKIOCSPART\fP \(em set disk partition info			410
.IE	ENTRY	DKIOCSPART set disk partition info		\fLDKIOCSPART\fP \(em set disk partition info				410
.IE	ENTRY	set disk partition info ioctl		set disk partition info \fLioctl\fP \(em \fLDKIOCSPART\fP				410
.IE	ENTRY	ioctls for disks	DKIOCINFO	\fLioctl\fP's for disks	\fLDKIOCINFO\fP \(em get disk info			410
.IE	ENTRY	DKIOCINFO get disk info		\fLDKIOCINFO\fP \(em get disk info				410
.IE	ENTRY	get disk info ioctl		get disk info \fLioctl\fP \(em \fLDKIOCINFO\fP				410
.IE	ENTRY	dkio device		\fLdkio\fP \(em disk control operations		PAGE	END	410
.IE	ENTRY	disk control operations		disk control operations \(em \fLdkio\fP		PAGE	END	410
.IE	ENTRY	generic disk control operations		generic disk control operations \(em \fLdkio\fP		PAGE	END	410
.SE PAGINATE NEW-PAGE 411
.CE MAN-PAGE 1 DRUM(4) 411
.IE	ENTRY	drum device		\fLdrum\fP \(em paging device		PAGE	START	411
.IE	ENTRY	paging device		paging device \(em \fLdrum\fP		PAGE	START	411
.IE	ENTRY	drum device		\fLdrum\fP \(em paging device		PAGE	END	411
.IE	ENTRY	paging device		paging device \(em \fLdrum\fP		PAGE	END	411
.SE PAGINATE NEW-PAGE 412
.CE MAN-PAGE 1 EC(4S) 412
.IE	ENTRY	ec device		\fLec\fP \(em 3Com 10 Mb/s Ethernet interface		PAGE	START	412
.IE	ENTRY	3Com 10 Mb/s Ethernet interface ec		3Com 10 Mb/s Ethernet interface \(em \fLec\fP		PAGE	START	412
.IE	ENTRY	10 Mb/s 3Com Ethernet interface ec		10 Mb/s 3Com Ethernet interface \(em \fLec\fP		PAGE	START	412
.IE	ENTRY	Ethernet controller	ec		\fLec\fP \(em 10 Mb/s 3Com Ethernet interface	PAGE	START	412
.IE	ENTRY	ec device		\fLec\fP \(em 3Com 10 Mb/s Ethernet interface		PAGE	END	412
.IE	ENTRY	3Com 10 Mb/s Ethernet interface ec		3Com 10 Mb/s Ethernet interface \(em \fLec\fP		PAGE	END	412
.IE	ENTRY	10 Mb/s 3Com Ethernet interface ec		10 Mb/s 3Com Ethernet interface \(em \fLec\fP		PAGE	END	412
.IE	ENTRY	Ethernet controller	ec		\fLec\fP \(em 10 Mb/s 3Com Ethernet interface	PAGE	END	412
.SE PAGINATE NEW-PAGE 413
.CE MAN-PAGE 1 FB(4S) 413
.IE	ENTRY	fb device		\fLfb\fP \(em Sun console frame buffer driver		PAGE	START	413
.IE	ENTRY	fb device		\fLfb\fP \(em Sun console frame buffer driver		PAGE	END	413
.SE PAGINATE NEW-PAGE 414
.CE MAN-PAGE 1 FBIO(4S) 414
.IE	ENTRY	fbio device		\fLfbio\fP \(em frame buffers general properties		PAGE	START	414
.IE	ENTRY	fbio device		\fLfbio\fP \(em frame buffers general properties		PAGE	END	414
.SE PAGINATE NEW-PAGE 415
.CE MAN-PAGE 1 GPONE(4S) 415
.IE	ENTRY	gpone device		\fLgpone\fP \(em graphics processor interface		PAGE	START	415
.IE	ENTRY	graphics processor interface		graphics processor interface \(em \fLgpone\fP		PAGE	START	415
.IE	ENTRY	ioctls for graphics processor	GP1IO_PUT_INFO	\fLioctl\fP's for graphics processor	\fLGP1IO_PUT_INFO\fP \(em pass framebuffer info			415
.IE	ENTRY	GP1IO_PUT_INFO put info		\fLGP1IO_PUT_INFO\fP \(em pass framebuffer info				415
.IE	ENTRY	pass framebuffer info ioctl		pass framebuffer info \fLioctl\fP \(em \fLGP1IO_PUT_INFO\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_GET_STATIC_BLOCK	\fLioctl\fP's for graphics processor	\fLGP1IO_GET_STATIC_BLOCK\fP \(em get static block			415
.IE	ENTRY	GP1IO_GET_STATIC_BLOCK get static block		\fLGP1IO_GET_STATIC_BLOCK\fP \(em get static block				415
.IE	ENTRY	get static block ioctl		get static block \fLioctl\fP \(em \fLGP1IO_GET_STATIC_BLOCK\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_FREE_STATIC_BLOCK	\fLioctl\fP's for graphics processor	\fLGP1IO_FREE_STATIC_BLOCK\fP \(em free static block			415
.IE	ENTRY	GP1IO_FREE_STATIC_BLOCK free static block		\fLGP1IO_FREE_STATIC_BLOCK\fP \(em free static block				415
.IE	ENTRY	free static block ioctl		free static block \fLioctl\fP \(em \fLGP1IO_FREE_STATIC_BLOCK\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_GET_GBUFFER_STATE	\fLioctl\fP's for graphics processor	\fLGP1IO_GET_GBUFFER_STATE\fP \(em check buffer state			415
.IE	ENTRY	GP1IO_GET_GBUFFER_STATEget buffer state		\fLGP1IO_GET_GBUFFER_STATE\fP \(em check buffer state				415
.IE	ENTRY	check buffer state ioctl		check buffer state \fLioctl\fP \(em \fLGP1IO_GET_GBUFFER_STATE\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_CHK_GP	\fLioctl\fP's for graphics processor	\fLGP1IO_CHK_GP\fP \(em restart GP			415
.IE	ENTRY	GP1IO_CHK_GP check GP		\fLGP1IO_CHK_GP\fP \(em restart GP				415
.IE	ENTRY	restart GP ioctl		restart GP \fLioctl\fP \(em \fLGP1IO_CHK_GP\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_GET_RESTART_COUNT	\fLioctl\fP's for graphics processor	\fLGP1IO_GET_RESTART_COUNT\fP \(em get restart count			415
.IE	ENTRY	GP1IO_GET_RESTART_COUNT get restart count		\fLGP1IO_GET_RESTART_COUNT\fP \(em get restart count				415
.IE	ENTRY	get restart count ioctl		get restart count \fLioctl\fP \(em \fLGP1IO_GET_RESTART_COUNT\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_REDIRECT_DEVFB	\fLioctl\fP's for graphics processor	\fLGP1IO_REDIRECT_DEVFB\fP \(em reconfigure fb			415
.IE	ENTRY	GP1IO_REDIRECT_DEVFB redirect fb		\fLGP1IO_REDIRECT_DEVFB\fP \(em reconfigure fb				415
.IE	ENTRY	reconfigure fb ioctl		reconfigure fb \fLioctl\fP \(em \fLGP1IO_REDIRECT_DEVFB\fP				415
.IE	ENTRY	ioctls for graphics processor	GP1IO_GET_REQDEV	\fLioctl\fP's for graphics processor	\fLGP1IO_GET_REQDEV\fP \(em get requested minor device			415
.IE	ENTRY	GP1IO_GET_REQDEV get requested device		\fLGP1IO_GET_REQDEV\fP \(em get requested minor device				415
.IE	ENTRY	get requested minor device ioctl		get requested minor device \fLioctl\fP \(em \fLGP1IO_GET_REQDEV\fP				415
.SE PAGINATE NEW-PAGE 416
.IE	ENTRY	ioctls for graphics processor	GP1IO_GET_TRUMINORDEV	\fLioctl\fP's for graphics processor	\fLGP1IO_GET_TRUMINORDEV\fP \(em get true minor device			416
.IE	ENTRY	GP1IO_GET_TRUMINORDEV get true minor device		\fLGP1IO_GET_TRUMINORDEV\fP \(em get true minor device				416
.IE	ENTRY	get true minor device ioctl		get true minor device \fLioctl\fP \(em \fLGP1IO_GET_TRUMINORDEV\fP				416
.IE	ENTRY	gpone device		\fLgpone\fP \(em graphics processor interface		PAGE	END	416
.IE	ENTRY	graphics processor interface		graphics processor interface \(em \fLgpone\fP		PAGE	END	416
.SE PAGINATE NEW-PAGE 417
.CE MAN-PAGE 1 ICMP(4P) 417
.IE	ENTRY	icmp device		\fLicmp\fP \(em Internet Control Message Protocol		PAGE	START	417
.IE	ENTRY	Internet	control message protocol icmp		control message protocol \(em \fLicmp\fP	PAGE	START	417
.SE PAGINATE NEW-PAGE 418
.IE	ENTRY	icmp device		\fLicmp\fP \(em Internet Control Message Protocol		PAGE	END	418
.IE	ENTRY	Internet	control message protocol icmp		control message protocol \(em \fLicmp\fP	PAGE	END	418
.SE PAGINATE NEW-PAGE 419
.CE MAN-PAGE 1 IE(4S) 419
.IE	ENTRY	ie device		\fLie\fP \(em Sun-2 10 Mb/s Ethernet interface		PAGE	START	419
.IE	ENTRY	Sun-2 10 Mb/s Ethernet interface		Sun-2 10 Mb/s Ethernet interface \(em \fLie\fP		PAGE	START	419
.IE	ENTRY	10 Mb/s Sun-2 Ethernet interface		10 Mb/s Sun-2 Ethernet interface \(em \fLie\fP		PAGE	START	419
.IE	ENTRY	Ethernet controller	ie		\fLie\fP \(em Sun-2 Ethernet interface	PAGE	START	419
.IE	ENTRY	ie device		\fLie\fP \(em Sun-2 10 Mb/s Ethernet interface		PAGE	END	419
.IE	ENTRY	Sun-2 10 Mb/s Ethernet interface		Sun-2 10 Mb/s Ethernet interface \(em \fLie\fP		PAGE	END	419
.IE	ENTRY	10 Mb/s Sun-2 Ethernet interface		10 Mb/s Sun-2 Ethernet interface \(em \fLie\fP		PAGE	END	419
.IE	ENTRY	Ethernet controller	ie		\fLie\fP \(em Sun-2 Ethernet interface	PAGE	END	419
.SE PAGINATE NEW-PAGE 420
.CE MAN-PAGE 1 IF(4N) 420
.IE	ENTRY	if device		\fLif\fP \(em network interface general properties		PAGE	START	420
.IE	ENTRY	ioctls for sockets	SIOCSIFADDR	\fLioctl\fP's for sockets	\fLSIOCSIFADDR\fP \(em set ifnet address			420
.IE	ENTRY	SIOCSIFADDR set ifnet address		\fLSIOCSIFADDR\fP \(em set ifnet address				420
.IE	ENTRY	set ifnet address ioctl		set ifnet address \fLioctl\fP \(em \fLSIOCSIFADDR\fP				420
.IE	ENTRY	network interface ioctls	SIOCSIFADDR	network interface \fLioctl\fP's	\fLSIOCSIFADDR\fP \(em set ifnet address			420
.IE	ENTRY	ioctls for sockets	SIOCGIFADDR	\fLioctl\fP's for sockets	\fLSIOCGIFADDR\fP \(em get ifnet address			420
.IE	ENTRY	SIOCGIFADDR get ifnet address		\fLSIOCGIFADDR\fP \(em get ifnet address				420
.IE	ENTRY	get ifnet address ioctl		get ifnet address \fLioctl\fP \(em \fLSIOCGIFADDR\fP				420
.IE	ENTRY	network interface ioctls	SIOCGIFADDR	network interface \fLioctl\fP's	\fLSIOCGIFADDR\fP \(em get ifnet address			420
.IE	ENTRY	ioctls for sockets	SIOCSIFDSTADDR	\fLioctl\fP's for sockets	\fLSIOCSIFDSTADDR\fP \(em set p-p address			420
.IE	ENTRY	SIOCSIFDSTADDR set p-p address		\fLSIOCSIFDSTADDR\fP \(em set p-p address				420
.IE	ENTRY	set p-p address ioctl		set p-p address \fLioctl\fP \(em \fLSIOCSIFDSTADDR\fP				420
.IE	ENTRY	network interface ioctls	SIOCSIFDSTADDR	network interface \fLioctl\fP's	\fLSIOCSIFDSTADDR\fP \(em set p-p address			420
.IE	ENTRY	ioctls for sockets	SIOCGIFDSTADDR	\fLioctl\fP's for sockets	\fLSIOCGIFDSTADDR\fP \(em get p-p address			420
.IE	ENTRY	SIOCGIFDSTADDR get p-p address		\fLSIOCGIFDSTADDR\fP \(em get p-p address				420
.IE	ENTRY	get p-p address ioctl		get p-p address \fLioctl\fP \(em \fLSIOCGIFDSTADDR\fP				420
.IE	ENTRY	network interface ioctls	SIOCGIFDSTADDR	network interface \fLioctl\fP's	\fLSIOCGIFDSTADDR\fP \(em get p-p address			420
.IE	ENTRY	ioctls for sockets	SIOCSIFFLAGS	\fLioctl\fP's for sockets	\fLSIOCSIFFLAGS\fP \(em set ifnet flags			420
.IE	ENTRY	SIOCSIFFLAGS set ifnet flags		\fLSIOCSIFFLAGS\fP \(em set ifnet flags				420
.IE	ENTRY	set ifnet flags ioctl		set ifnet flags \fLioctl\fP \(em \fLSIOCSIFFLAGS\fP				420
.IE	ENTRY	network interface ioctls	SIOCSIFFLAGS	network interface \fLioctl\fP's	\fLSIOCSIFFLAGS\fP \(em set ifnet flags			420
.IE	ENTRY	ioctls for sockets	SIOCGIFFLAGS	\fLioctl\fP's for sockets	\fLSIOCGIFFLAGS\fP \(em get ifnet flags			420
.IE	ENTRY	SIOCGIFFLAGS get ifnet flags		\fLSIOCGIFFLAGS\fP \(em get ifnet flags				420
.IE	ENTRY	get ifnet flags ioctl		get ifnet flags \fLioctl\fP \(em \fLSIOCGIFFLAGS\fP				420
.IE	ENTRY	network interface ioctls	SIOCGIFFLAGS	network interface \fLioctl\fP's	\fLSIOCGIFFLAGS\fP \(em get ifnet flags			420
.IE	ENTRY	ioctls for sockets	SIOCGIFCONF	\fLioctl\fP's for sockets	\fLSIOCGIFCONF\fP \(em get ifnet list			420
.IE	ENTRY	SIOCGIFCONF get ifnet list		\fLSIOCGIFCONF\fP \(em get ifnet list				420
.IE	ENTRY	get ifnet list ioctl		get ifnet list \fLioctl\fP \(em \fLSIOCGIFCONF\fP				420
.IE	ENTRY	network interface ioctls	SIOCGIFCONF	network interface \fLioctl\fP's	\fLSIOCGIFCONF\fP \(em get ifnet list			420
.SE PAGINATE NEW-PAGE 421
.IE	ENTRY	if device		\fLif\fP \(em network interface general properties		PAGE	END	421
.SE PAGINATE NEW-PAGE 422
.CE MAN-PAGE 1 INET(4F) 422
.IE	ENTRY	inet device		\fLinet\fP \(em Internet protocol family		PAGE	START	422
.IE	ENTRY	Internet	protocol family inet		protocol family \(em \fLinet\fP	PAGE	START	422
.SE PAGINATE NEW-PAGE 423
.IE	ENTRY	inet device		\fLinet\fP \(em Internet protocol family		PAGE	END	423
.IE	ENTRY	Internet	protocol family inet		protocol family \(em \fLinet\fP	PAGE	END	423
.SE PAGINATE NEW-PAGE 424
.CE MAN-PAGE 1 IP(4P) 424
.IE	ENTRY	ip4p device		\fLip\fP \(em Internet Protocol		PAGE	START	424
.IE	ENTRY	Internet	Protocol ip4p		Protocol \(em \fLip\fP	PAGE	START	424
.SE PAGINATE NEW-PAGE 425
.IE	ENTRY	ip4p device		\fLip\fP \(em Internet Protocol		PAGE	END	425
.IE	ENTRY	Internet	Protocol ip4p		Protocol \(em \fLip\fP	PAGE	END	425
.SE PAGINATE NEW-PAGE 426
.CE MAN-PAGE 1 IP(4S) 426
.IE	ENTRY	ip4s device		\fLip\fP \(em Interphase SMD Disk driver		PAGE	START	426
.IE	ENTRY	Interphase SMD Disk driver		Interphase SMD Disk driver \(em \fLip\fP		PAGE	START	426
.IE	ENTRY	2180 SMD Disk driver		2180 SMD Disk driver \(em \fLip\fP		PAGE	START	426
.IE	ENTRY	SMD disk controller	Interphase 2180		\fLip\fP \(em Interphase 2180	PAGE	START	426
.IE	ENTRY	disk driver	Interphase		\fLip\fP \(em Interphase	PAGE	START	426
.SE PAGINATE NEW-PAGE 427
.IE	ENTRY	ip4s device		\fLip\fP \(em Interphase SMD Disk driver		PAGE	END	427
.IE	ENTRY	Interphase SMD Disk driver		Interphase SMD Disk driver \(em \fLip\fP		PAGE	END	427
.IE	ENTRY	2180 SMD Disk driver		2180 SMD Disk driver \(em \fLip\fP		PAGE	END	427
.IE	ENTRY	SMD disk controller	Interphase 2180		\fLip\fP \(em Interphase 2180	PAGE	END	427
.IE	ENTRY	disk driver	Interphase		\fLip\fP \(em Interphase	PAGE	END	427
.SE PAGINATE NEW-PAGE 428
.CE MAN-PAGE 1 KB(4S) 428
.IE	ENTRY	kb device		\fLkb\fP \(em Sun keyboard		PAGE	START	428
.IE	ENTRY	ioctls for keyboards	KIOCTRANS	\fLioctl\fP's for keyboards	\fLKIOCTRANS\fP \(em set keyboard translation			428
.IE	ENTRY	KIOCTRANS set keyboard translation		\fLKIOCTRANS\fP \(em set keyboard translation				428
.IE	ENTRY	set keyboard translation ioctl		set keyboard translation \fLioctl\fP \(em \fLKIOCTRANS\fP				428
.IE	ENTRY	ioctls for keyboards	KIOCGTRANS	\fLioctl\fP's for keyboards	\fLKIOCGTRANS\fP \(em get keyboard translation			428
.IE	ENTRY	KIOCGTRANS get keyboard translation		\fLKIOCGTRANS\fP \(em get keyboard translation				428
.IE	ENTRY	get keyboard translation ioctl		get keyboard translation \fLioctl\fP \(em \fLKIOCGTRANS\fP				428
.IE	ENTRY	ioctls for keyboards	KIOCGTRANS	\fLioctl\fP's for keyboards	\fLKIOCGTRANS\fP \(em get translation state			428
.IE	ENTRY	KIOCGTRANS get translation state		\fLKIOCGTRANS\fP \(em get translation state				428
.IE	ENTRY	get translation state ioctl		get translation state \fLioctl\fP \(em \fLKIOCGTRANS\fP				428
.IE	ENTRY	ioctls for keyboards	KIOCSETKEY	\fLioctl\fP's for keyboards	\fLKIOCSETKEY\fP \(em change translation table entry			428
.IE	ENTRY	KIOCSETKEY change translation table entry		\fLKIOCSETKEY\fP \(em change translation table entry				428
.IE	ENTRY	change translation table entry ioctl		change translation table entry \fLioctl\fP \(em \fLKIOCSETKEY\fP				428
.IE	ENTRY	ioctls for keyboards	KIOCGETKEY	\fLioctl\fP's for keyboards	\fLKIOCGETKEY\fP \(em get translation table entry			428
.IE	ENTRY	KIOCGETKEY get translation table entry		\fLKIOCGETKEY\fP \(em get translation table entry				428
.IE	ENTRY	get translation table entry ioctl		get translation table entry \fLioctl\fP \(em \fLKIOCGETKEY\fP				428
.SE PAGINATE NEW-PAGE 429
.IE	ENTRY	ioctls for keyboards	KIOCTYPE	\fLioctl\fP's for keyboards	\fLKIOCTYPE\fP \(em get keyboard type			429
.IE	ENTRY	KIOCTYPE get keyboard type		\fLKIOCTYPE\fP \(em get keyboard type				429
.IE	ENTRY	get keyboard type ioctl		get keyboard type \fLioctl\fP \(em \fLKIOCTYPE\fP				429
.IE	ENTRY	ioctls for keyboards	KIOCCMD	\fLioctl\fP's for keyboards	\fLKIOCCMD\fP \(em send a keyboard command			429
.IE	ENTRY	KIOCCMD send a keyboard command		\fLKIOCCMD\fP \(em send a keyboard command				429
.IE	ENTRY	send a keyboard command ioctl		send a keyboard command \fLioctl\fP \(em \fLKIOCCMD\fP				429
.IE	ENTRY	ioctls for keyboards	KIOCTRANSABLE	\fLioctl\fP's for keyboards	\fLKIOCTRANSABLE\fP \(em set keyboard translatability			429
.IE	ENTRY	KIOCTRANSABLE set keyboard translatability		\fLKIOCTRANSABLE\fP \(em set keyboard translatability				429
.IE	ENTRY	set keyboard translatability ioctl		set keyboard translatability \fLioctl\fP \(em \fLKIOCTRANSABLE\fP				429
.IE	ENTRY	ioctls for keyboards	KIOCGTRANSABLE	\fLioctl\fP's for keyboards	\fLKIOCGTRANSABLE\fP \(em get keyboard translatability			429
.IE	ENTRY	KIOCGTRANSABLE get keyboard translatability		\fLKIOCGTRANSABLE\fP \(em get keyboard translatability				429
.IE	ENTRY	get keyboard translatability ioctl		get keyboard translatability \fLioctl\fP \(em \fLKIOCGTRANSABLE\fP				429
.IE	ENTRY	kb device		\fLkb\fP \(em Sun keyboard		PAGE	END	429
.SE PAGINATE NEW-PAGE 430
.CE MAN-PAGE 1 LE(4S) 430
.IE	ENTRY	le device		\fLle\fP \(em Sun-3/50 10 Mb/s Ethernet interface		PAGE	START	430
.IE	ENTRY	Sun-3/50 10 Mb/s Ethernet interface		Sun-3/50 10 Mb/s Ethernet interface \(em \fLle\fP		PAGE	START	430
.IE	ENTRY	10 Mb/s Sun-3/50 Ethernet interface		10 Mb/s Sun-3/50 Ethernet interface \(em \fLle\fP		PAGE	START	430
.IE	ENTRY	LANCE 10 Mb/s Ethernet interface		LANCE 10 Mb/s Ethernet interface \(em \fLle\fP		PAGE	START	430
.IE	ENTRY	Ethernet controller	le		\fLle\fP \(em 10 Mb/s LANCE Ethernet interface	PAGE	START	430
.SE PAGINATE NEW-PAGE 431
.IE	ENTRY	le device		\fLle\fP \(em Sun-3/50 10 Mb/s Ethernet interface		PAGE	END	431
.IE	ENTRY	Sun-3/50 10 Mb/s Ethernet interface		Sun-3/50 10 Mb/s Ethernet interface \(em \fLle\fP		PAGE	END	431
.IE	ENTRY	10 Mb/s Sun-3/50 Ethernet interface		10 Mb/s Sun-3/50 Ethernet interface \(em \fLle\fP		PAGE	END	431
.IE	ENTRY	LANCE 10 Mb/s Ethernet interface		LANCE 10 Mb/s Ethernet interface \(em \fLle\fP		PAGE	END	431
.IE	ENTRY	Ethernet controller	le		\fLle\fP \(em 10 Mb/s LANCE Ethernet interface	PAGE	END	431
.SE PAGINATE NEW-PAGE 432
.CE MAN-PAGE 1 LO(4N) 432
.IE	ENTRY	lo device		\fLlo\fP \(em software loopback network interface		PAGE	START	432
.IE	ENTRY	network loopback interface		network loopback interface \(em \fLlo\fP		PAGE	START	432
.IE	ENTRY	lo device		\fLlo\fP \(em software loopback network interface		PAGE	END	432
.IE	ENTRY	network loopback interface		network loopback interface \(em \fLlo\fP		PAGE	END	432
.SE PAGINATE NEW-PAGE 433
.CE MAN-PAGE 1 MEM(4S) 433
.IE	ENTRY	mem device		\fLmem\fP \(em main memory space		PAGE	START	433
.IE	ENTRY	kmem device		\fLkmem\fP \(em kernel memory space		PAGE	START	433
.IE	ENTRY	mbmem device		\fLmbmem\fP \(em Multibus memory space		PAGE	START	433
.IE	ENTRY	mbio device		\fLmbio\fP \(em Multibus I/O space		PAGE	START	433
.IE	ENTRY	vme16 device		\fLvme16\fP \(em VMEbus 16-bit space		PAGE	START	433
.IE	ENTRY	vme24 device		\fLvme24\fP \(em VMEbus 24-bit space		PAGE	START	433
.IE	ENTRY	vme16d16 device		\fLvme16d16\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	vme24d16 device		\fLvme24d16\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	vme32d16 device		\fLvme32d16\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	vme16d32 device		\fLvme16d32\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	vme24d32 device		\fLvme24d32\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	vme32d32 device		\fLvme32d32\fP \(em VMEbus address space		PAGE	START	433
.IE	ENTRY	virtual device		\fLvirtual\fP \(em virtual address space		PAGE	START	433
.IE	ENTRY	memory images	mem device		\fLmem\fP \(em main memory space	PAGE	START	433
.IE	ENTRY	memory images	kmem device		\fLkmem\fP \(em kernel memory space	PAGE	START	433
.IE	ENTRY	memory images	mbmem device		\fLmbmem\fP \(em Multibus memory space	PAGE	START	433
.IE	ENTRY	memory images	mbio device		\fLmbio\fP \(em Multibus I/O space	PAGE	START	433
.IE	ENTRY	memory images	vme16 device		\fLvme16\fP \(em VMEbus 16-bit space	PAGE	START	433
.IE	ENTRY	memory images	vme24 device		\fLvme24\fP \(em VMEbus 24-bit space	PAGE	START	433
.IE	ENTRY	memory images	vme16d16 device		\fLvme16d16\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	vme24d16 device		\fLvme24d16\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	vme32d16 device		\fLvme32d16\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	vme16d32 device		\fLvme16d32\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	vme24d32 device		\fLvme24d32\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	vme32d32 device		\fLvme32d32\fP \(em VMEbus address space	PAGE	START	433
.IE	ENTRY	memory images	virtual device		\fLvirtual\fP \(em virtual address space	PAGE	START	433
.IE	ENTRY	mem device		\fLmem\fP \(em main memory space		PAGE	END	433
.IE	ENTRY	kmem device		\fLkmem\fP \(em kernel memory space		PAGE	END	433
.IE	ENTRY	mbmem device		\fLmbmem\fP \(em Multibus memory space		PAGE	END	433
.IE	ENTRY	mbio device		\fLmbio\fP \(em Multibus I/O space		PAGE	END	433
.IE	ENTRY	vme16 device		\fLvme16\fP \(em VMEbus 16-bit space		PAGE	END	433
.IE	ENTRY	vme24 device		\fLvme24\fP \(em VMEbus 24-bit space		PAGE	END	433
.IE	ENTRY	vme16d16 device		\fLvme16d16\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	vme24d16 device		\fLvme24d16\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	vme32d16 device		\fLvme32d16\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	vme16d32 device		\fLvme16d32\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	vme24d32 device		\fLvme24d32\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	vme32d32 device		\fLvme32d32\fP \(em VMEbus address space		PAGE	END	433
.IE	ENTRY	virtual device		\fLvirtual\fP \(em virtual address space		PAGE	END	433
.IE	ENTRY	memory images	mem device		\fLmem\fP \(em main memory space	PAGE	END	433
.IE	ENTRY	memory images	kmem device		\fLkmem\fP \(em kernel memory space	PAGE	END	433
.IE	ENTRY	memory images	mbmem device		\fLmbmem\fP \(em Multibus memory space	PAGE	END	433
.IE	ENTRY	memory images	mbio device		\fLmbio\fP \(em Multibus I/O space	PAGE	END	433
.IE	ENTRY	memory images	vme16 device		\fLvme16\fP \(em VMEbus 16-bit space	PAGE	END	433
.IE	ENTRY	memory images	vme24 device		\fLvme24\fP \(em VMEbus 24-bit space	PAGE	END	433
.IE	ENTRY	memory images	vme16d16 device		\fLvme16d16\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	vme24d16 device		\fLvme24d16\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	vme32d16 device		\fLvme32d16\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	vme16d32 device		\fLvme16d32\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	vme24d32 device		\fLvme24d32\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	vme32d32 device		\fLvme32d32\fP \(em VMEbus address space	PAGE	END	433
.IE	ENTRY	memory images	virtual device		\fLvirtual\fP \(em virtual address space	PAGE	END	433
.SE PAGINATE NEW-PAGE 434
.CE MAN-PAGE 1 MOUSE(4S) 434
.IE	ENTRY	mouse device		\fLmouse\fP \(em Sun mouse				434
.IE	ENTRY	Sun mouse device		Sun mouse device \(em \fLmouse\fP				434
.SE PAGINATE NEW-PAGE 435
.CE MAN-PAGE 1 MTI(4S) 435
.IE	ENTRY	mti device		\fLmti\fP \(em Systech MTI-800/1600 multi-terminal interface		PAGE	START	435
.SE PAGINATE NEW-PAGE 436
.IE	ENTRY	mti device		\fLmti\fP \(em Systech MTI-800/1600 multi-terminal interface		PAGE	END	436
.SE PAGINATE NEW-PAGE 437
.CE MAN-PAGE 1 MTIO(4) 437
.IE	ENTRY	mtio device		\fLmtio\fP \(em UNIX magnetic tape interface		PAGE	START	437
.IE	ENTRY	magnetic tape interface		magnetic tape interface \(em \fLmtio\fP		PAGE	START	437
.IE	ENTRY	UNIX magnetic tape interface		UNIX magnetic tape interface \(em \fLmtio\fP		PAGE	START	437
.IE	ENTRY	tape interface		tape interface \(em \fLmtio\fP		PAGE	START	437
.IE	ENTRY	ioctls for tapes	MTIOCTOP	\fLioctl\fP's for tapes	\fLMTIOCTOP\fP \(em tape operation			437
.IE	ENTRY	MTIOCTOP tape operation		\fLMTIOCTOP\fP \(em tape operation				437
.IE	ENTRY	tape operation ioctl		tape operation \fLioctl\fP \(em \fLMTIOCTOP\fP				437
.IE	ENTRY	magnetic tape ioctls	MTIOCTOP	magnetic tape \fLioctl\fP's	\fLMTIOCTOP\fP \(em tape operation			437
.SE PAGINATE NEW-PAGE 438
.IE	ENTRY	ioctls for tapes	MTIOCGET	\fLioctl\fP's for tapes	\fLMTIOCGET\fP \(em get tape status			438
.IE	ENTRY	MTIOCGET get tape status		\fLMTIOCGET\fP \(em get tape status				438
.IE	ENTRY	get tape status ioctl		get tape status \fLioctl\fP \(em \fLMTIOCGET\fP				438
.IE	ENTRY	magnetic tape ioctls	MTIOCGET	magnetic tape \fLioctl\fP's	\fLMTIOCGET\fP \(em get tape status			438
.IE	ENTRY	mtio device		\fLmtio\fP \(em UNIX magnetic tape interface		PAGE	END	438
.IE	ENTRY	magnetic tape interface		magnetic tape interface \(em \fLmtio\fP		PAGE	END	438
.IE	ENTRY	UNIX magnetic tape interface		UNIX magnetic tape interface \(em \fLmtio\fP		PAGE	END	438
.IE	ENTRY	tape interface		tape interface \(em \fLmtio\fP		PAGE	END	438
.SE PAGINATE NEW-PAGE 439
.CE MAN-PAGE 1 ND(4P) 439
.IE	ENTRY	nd device		\fLnd\fP \(em network disk driver		PAGE	START	439
.SE PAGINATE NEW-PAGE 440
.SE PAGINATE NEW-PAGE 441
.IE	ENTRY	ioctls for network disks	NDIOCSON	\fLioctl\fP's for network disks	\fLNDIOCSON\fP \(em server on			441
.IE	ENTRY	NDIOCSON server on		\fLNDIOCSON\fP \(em server on				441
.IE	ENTRY	server on ioctl		server on \fLioctl\fP \(em \fLNDIOCSON\fP				441
.IE	ENTRY	network disk ioctls	NDIOCSON	network disk \fLioctl\fP's	\fLNDIOCSON\fP \(em server on			441
.IE	ENTRY	ioctls for network disks	NDIOCSOFF	\fLioctl\fP's for network disks	\fLNDIOCSOFF\fP \(em server off			441
.IE	ENTRY	NDIOCSOFF server off		\fLNDIOCSOFF\fP \(em server off				441
.IE	ENTRY	server off ioctl		server off \fLioctl\fP \(em \fLNDIOCSOFF\fP				441
.IE	ENTRY	network disk ioctls	NDIOCSOFF	network disk \fLioctl\fP's	\fLNDIOCSOFF\fP \(em server off			441
.IE	ENTRY	ioctls for network disks	NDIOCUSER	\fLioctl\fP's for network disks	\fLNDIOCUSER\fP \(em set user parameters			441
.IE	ENTRY	NDIOCUSER set user parameters		\fLNDIOCUSER\fP \(em set user parameters				441
.IE	ENTRY	set user parameters ioctl		set user parameters \fLioctl\fP \(em \fLNDIOCUSER\fP				441
.IE	ENTRY	network disk ioctls	NDIOCUSER	network disk \fLioctl\fP's	\fLNDIOCUSER\fP \(em set user parameters			441
.IE	ENTRY	ioctls for network disks	NDIOCSAT	\fLioctl\fP's for network disks	\fLNDIOCSAT\fP \(em server at ipaddress			441
.IE	ENTRY	NDIOCSAT server at ipaddress		\fLNDIOCSAT\fP \(em server at ipaddress				441
.IE	ENTRY	server at ipaddress ioctl		server at ipaddress \fLioctl\fP \(em \fLNDIOCSAT\fP				441
.IE	ENTRY	network disk ioctls	NDIOCSAT	network disk \fLioctl\fP's	\fLNDIOCSAT\fP \(em server at ipaddress			441
.IE	ENTRY	ioctls for network disks	NDIOCCLEAR	\fLioctl\fP's for network disks	\fLNDIOCCLEAR\fP \(em clear user table			441
.IE	ENTRY	NDIOCCLEAR clear user table		\fLNDIOCCLEAR\fP \(em clear user table				441
.IE	ENTRY	clear user table ioctl		clear user table \fLioctl\fP \(em \fLNDIOCCLEAR\fP				441
.IE	ENTRY	network disk ioctls	NDIOCCLEAR	network disk \fLioctl\fP's	\fLNDIOCCLEAR\fP \(em clear user table			441
.IE	ENTRY	ioctls for network disks	NDIOCVER	\fLioctl\fP's for network disks	\fLNDIOCVER\fP \(em version number			441
.IE	ENTRY	NDIOCVER version number		\fLNDIOCVER\fP \(em version number				441
.IE	ENTRY	version number ioctl		version number \fLioctl\fP \(em \fLNDIOCVER\fP				441
.IE	ENTRY	network disk ioctls	NDIOCVER	network disk \fLioctl\fP's	\fLNDIOCVER\fP \(em version number			441
.IE	ENTRY	ioctls for network disks	NDIOCETHER	\fLioctl\fP's for network disks	\fLNDIOCETHER\fP \(em set ether address			441
.IE	ENTRY	NDIOCETHER set ether address		\fLNDIOCETHER\fP \(em set ether address				441
.IE	ENTRY	set ether address ioctl		set ether address \fLioctl\fP \(em \fLNDIOCETHER\fP				441
.IE	ENTRY	network disk ioctls	NDIOCETHER	network disk \fLioctl\fP's	\fLNDIOCETHER\fP \(em set ether address			441
.IE	ENTRY	nd device		\fLnd\fP \(em network disk driver		PAGE	END	441
.SE PAGINATE NEW-PAGE 442
.CE MAN-PAGE 1 NIT(4P) 442
.IE	ENTRY	nit device		\fLnit\fP \(em network interface tap protocol		PAGE	START	442
.IE	ENTRY	network interface tap protocol		network interface tap protocol \(em \fLnit\fP		PAGE	START	442
.IE	ENTRY	tap protocol		tap protocol for network \(em \fLnit\fP		PAGE	START	442
.SE PAGINATE NEW-PAGE 443
.SE PAGINATE NEW-PAGE 444
.IE	ENTRY	nit device		\fLnit\fP \(em network interface tap protocol		PAGE	END	444
.IE	ENTRY	network interface tap protocol		network interface tap protocol \(em \fLnit\fP		PAGE	END	444
.IE	ENTRY	tap protocol		tap protocol for network \(em \fLnit\fP		PAGE	END	444
.SE PAGINATE NEW-PAGE 445
.CE MAN-PAGE 1 NULL(4) 445
.IE	ENTRY	null device		\fLnull\fP \(em null device				445
.SE PAGINATE NEW-PAGE 446
.CE MAN-PAGE 1 PTY(4) 446
.IE	ENTRY	pty device		\fLpty\fP \(em pseudo terminal driver		PAGE	START	446
.IE	ENTRY	ioctls for terminals	TIOCSTOP	\fLioctl\fP's for terminals	\fLTIOCSTOP\fP \(em stop output (like control-S)			446
.IE	ENTRY	TIOCSTOP stop output (like control-S)		\fLTIOCSTOP\fP \(em stop output (like control-S)				446
.IE	ENTRY	stop output (like control-S) ioctl		stop output (like control-S) \fLioctl\fP \(em \fLTIOCSTOP\fP				446
.IE	ENTRY	ioctls for terminals	TIOCSTART	\fLioctl\fP's for terminals	\fLTIOCSTART\fP \(em start output (like control-Q)			446
.IE	ENTRY	TIOCSTART start output (like control-Q)		\fLTIOCSTART\fP \(em start output (like control-Q)				446
.IE	ENTRY	start output (like control-Q) ioctl		start output (like control-Q) \fLioctl\fP \(em \fLTIOCSTART\fP				446
.IE	ENTRY	ioctls for terminals	TIOCPKT	\fLioctl\fP's for terminals	\fLTIOCPKT\fP \(em set/clear packet mode (pty)			446
.IE	ENTRY	TIOCPKT set/clear packet mode (pty)		\fLTIOCPKT\fP \(em set/clear packet mode (pty)				446
.IE	ENTRY	set/clear packet mode (pty) ioctl		set/clear packet mode (pty) \fLioctl\fP \(em \fLTIOCPKT\fP				446
.IE	ENTRY	ioctls for terminals	TIOCREMOTE	\fLioctl\fP's for terminals	\fLTIOCREMOTE\fP \(em remote input editing			446
.IE	ENTRY	TIOCREMOTE remote input editing		\fLTIOCREMOTE\fP \(em remote input editing				446
.IE	ENTRY	remote input editing ioctl		remote input editing \fLioctl\fP \(em \fLTIOCREMOTE\fP				446
.SE PAGINATE NEW-PAGE 447
.IE	ENTRY	pty device		\fLpty\fP \(em pseudo terminal driver		PAGE	END	447
.SE PAGINATE NEW-PAGE 448
.CE MAN-PAGE 1 ROUTING(4N) 448
.IE	ENTRY	routing device		\fLrouting\fP \(em local network packet routing		PAGE	START	448
.IE	ENTRY	packet routing device		packet routing device \(em \fLrouting\fP		PAGE	START	448
.IE	ENTRY	network packet routing device		network packet routing device \(em \fLrouting\fP		PAGE	START	448
.IE	ENTRY	ioctls for sockets	SIOCADDRT	\fLioctl\fP's for sockets	\fLSIOCADDRT\fP \(em add route			448
.IE	ENTRY	SIOCADDRT add route		\fLSIOCADDRT\fP \(em add route				448
.IE	ENTRY	add route ioctl		add route \fLioctl\fP \(em \fLSIOCADDRT\fP				448
.IE	ENTRY	routing ioctls	SIOCADDRT	routing \fLioctl\fP's	\fLSIOCADDRT\fP \(em add route			448
.IE	ENTRY	packet routing ioctls	SIOCADDRT	packet routing \fLioctl\fP's	\fLSIOCADDRT\fP \(em add route			448
.IE	ENTRY	ioctls for sockets	SIOCDELRT	\fLioctl\fP's for sockets	\fLSIOCDELRT\fP \(em delete route			448
.IE	ENTRY	SIOCDELRT delete route		\fLSIOCDELRT\fP \(em delete route				448
.IE	ENTRY	delete route ioctl		delete route \fLioctl\fP \(em \fLSIOCDELRT\fP				448
.IE	ENTRY	routing ioctls	SIOCDELRT	routing \fLioctl\fP's	\fLSIOCDELRT\fP \(em delete route			448
.IE	ENTRY	packet routing ioctls	SIOCDELRT	packet routing \fLioctl\fP's	\fLSIOCDELRT\fP \(em delete route			448
.IE	ENTRY	routing device		\fLrouting\fP \(em local network packet routing		PAGE	END	448
.IE	ENTRY	packet routing device		packet routing device \(em \fLrouting\fP		PAGE	END	448
.IE	ENTRY	network packet routing device		network packet routing device \(em \fLrouting\fP		PAGE	END	448
.SE PAGINATE NEW-PAGE 449
.CE MAN-PAGE 1 SD(4S) 449
.IE	ENTRY	si device		\fLsi\fP \(em Sun SCSI Disk driver		PAGE	START	449
.IE	ENTRY	Sun SCSI disk driver		Sun SCSI disk driver \(em \fLsi\fP		PAGE	START	449
.IE	ENTRY	disk driver	Sun SCSI		\fLsi\fP \(em Sun SCSI	PAGE	START	449
.IE	ENTRY	sd device		\fLsd\fP \(em Adaptec ST-506 Disk driver		PAGE	START	449
.IE	ENTRY	Adaptec ST-506 disk driver		Adaptec ST-506 disk driver \(em \fLsd\fP		PAGE	START	449
.IE	ENTRY	disk driver	Adaptec ST-506		\fLsd\fP \(em Adaptec ST-506	PAGE	START	449
.SE PAGINATE NEW-PAGE 450
.IE	ENTRY	si device		\fLsi\fP \(em Sun SCSI Disk driver		PAGE	END	450
.IE	ENTRY	Sun SCSI disk driver		Sun SCSI disk driver \(em \fLsi\fP		PAGE	END	450
.IE	ENTRY	disk driver	Sun SCSI		\fLsi\fP \(em Sun SCSI	PAGE	END	450
.IE	ENTRY	sd device		\fLsd\fP \(em Adaptec ST-506 Disk driver		PAGE	END	450
.IE	ENTRY	Adaptec ST-506 disk driver		Adaptec ST-506 disk driver \(em \fLsd\fP		PAGE	END	450
.IE	ENTRY	disk driver	Adaptec ST-506		\fLsd\fP \(em Adaptec ST-506	PAGE	END	450
.SE PAGINATE NEW-PAGE 451
.CE MAN-PAGE 1 ST(4S) 451
.IE	ENTRY	st device		\fLst\fP \(em Sysgen SC 4000 (Archive) Tape Driver		PAGE	START	451
.IE	ENTRY	Sysgen SC 4000 (Archive) Tape Driver		Sysgen SC 4000 (Archive) Tape Driver \(em \fLst\fP		PAGE	START	451
.IE	ENTRY	tape drive, 1/4-inch	Sysgen SC 4000		Sysgen SC 4000 (Archive) Tape Driver \(em \fLst\fP	PAGE	START	451
.IE	ENTRY	1/4-inch tape drive	st		\fLst\fP \(em Sysgen SC 4000 (Archive) Tape Drive	PAGE	START	451
.SE PAGINATE NEW-PAGE 452
.IE	ENTRY	st device		\fLst\fP \(em Sysgen SC 4000 (Archive) Tape Driver		PAGE	END	452
.IE	ENTRY	Sysgen SC 4000 (Archive) Tape Driver		Sysgen SC 4000 (Archive) Tape Driver \(em \fLst\fP		PAGE	END	452
.IE	ENTRY	tape drive, 1/4-inch	Sysgen SC 4000		Sysgen SC 4000 (Archive) Tape Driver \(em \fLst\fP	PAGE	END	452
.IE	ENTRY	1/4-inch tape drive	st		\fLst\fP \(em Sysgen SC 4000 (Archive) Tape Drive	PAGE	END	452
.SE PAGINATE NEW-PAGE 453
.CE MAN-PAGE 1 TCP(4P) 453
.IE	ENTRY	tcp device		\fLtcp\fP \(em Internet Transmission Control Protocol		PAGE	START	453
.IE	ENTRY	Internet	Transmission Control Protocol tcp		Transmission Control Protocol \(em \fLtcp\fP		PAGE	453
.SE PAGINATE NEW-PAGE 454
.IE	ENTRY	ioctls for sockets	SIOCATMARK	\fLioctl\fP's for sockets	\fLSIOCATMARK\fP \(em at OOB mark?			454
.IE	ENTRY	SIOCATMARK at OOB mark?		\fLSIOCATMARK\fP \(em at OOB mark?				454
.IE	ENTRY	at OOB mark? ioctl		at OOB mark? \fLioctl\fP \(em \fLSIOCATMARK\fP				454
.IE	ENTRY	TCP ioctls	SIOCATMARK	TCP \fLioctl\fP's	\fLSIOCATMARK\fP \(em at OOB mark?			454
.IE	ENTRY	ioctls for sockets	SIOCSHIWAT	\fLioctl\fP's for sockets	\fLSIOCSHIWAT\fP \(em set high water mark			454
.IE	ENTRY	SIOCSHIWAT set high water mark		\fLSIOCSHIWAT\fP \(em set high water mark				454
.IE	ENTRY	set high water mark ioctl		set high water mark \fLioctl\fP \(em \fLSIOCSHIWAT\fP				454
.IE	ENTRY	TCP ioctls	SIOCSHIWAT	TCP \fLioctl\fP's	\fLSIOCSHIWAT\fP \(em set high water mark			454
.IE	ENTRY	ioctls for sockets	SIOCGHIWAT	\fLioctl\fP's for sockets	\fLSIOCGHIWAT\fP \(em get high water mark			454
.IE	ENTRY	SIOCGHIWAT get high water mark		\fLSIOCGHIWAT\fP \(em get high water mark				454
.IE	ENTRY	get high water mark ioctl		get high water mark \fLioctl\fP \(em \fLSIOCGHIWAT\fP				454
.IE	ENTRY	TCP ioctls	SIOCGHIWAT	TCP \fLioctl\fP's	\fLSIOCGHIWAT\fP \(em get high water mark			454
.IE	ENTRY	ioctls for sockets	SIOCSLOWAT	\fLioctl\fP's for sockets	\fLSIOCSLOWAT\fP \(em set low water mark			454
.IE	ENTRY	SIOCSLOWAT set low water mark		\fLSIOCSLOWAT\fP \(em set low water mark				454
.IE	ENTRY	set low water mark ioctl		set low water mark \fLioctl\fP \(em \fLSIOCSLOWAT\fP				454
.IE	ENTRY	TCP ioctls	SIOCSLOWAT	TCP \fLioctl\fP's	\fLSIOCSLOWAT\fP \(em set low water mark			454
.IE	ENTRY	ioctls for sockets	SIOCGLOWAT	\fLioctl\fP's for sockets	\fLSIOCGLOWAT\fP \(em get low water mark			454
.IE	ENTRY	SIOCGLOWAT get low water mark		\fLSIOCGLOWAT\fP \(em get low water mark				454
.IE	ENTRY	get low water mark ioctl		get low water mark \fLioctl\fP \(em \fLSIOCGLOWAT\fP				454
.IE	ENTRY	TCP ioctls	SIOCGLOWAT	TCP \fLioctl\fP's	\fLSIOCGLOWAT\fP \(em get low water mark			454
.IE	ENTRY	tcp device		\fLtcp\fP \(em Internet Transmission Control Protocol		PAGE	END	454
.IE	ENTRY	Internet	Transmission Control Protocol tcp		Transmission Control Protocol \(em \fLtcp\fP		PAGE	454
.SE PAGINATE NEW-PAGE 455
.CE MAN-PAGE 1 TM(4S) 455
.IE	ENTRY	tm device		\fLtm\fP \(em tapemaster 1/2-inch tape drive		PAGE	START	455
.IE	ENTRY	tapemaster 1/2-inch tape drive		tapemaster 1/2-inch tape drive \(em \fLtm\fP		PAGE	START	455
.IE	ENTRY	tape drive, 1/2-inch	tm		\fLtm\fP \(em tapemaster	PAGE	START	455
.IE	ENTRY	1/2-inch tape drive	tm		\fLtm\fP \(em tapemaster	PAGE	START	455
.IE	ENTRY	tm device		\fLtm\fP \(em tapemaster 1/2-inch tape drive		PAGE	END	455
.IE	ENTRY	tapemaster 1/2-inch tape drive		tapemaster 1/2-inch tape drive \(em \fLtm\fP		PAGE	END	455
.IE	ENTRY	tape drive, 1/2-inch	tm		\fLtm\fP \(em tapemaster	PAGE	END	455
.IE	ENTRY	1/2-inch tape drive	tm		\fLtm\fP \(em tapemaster	PAGE	END	455
.SE PAGINATE NEW-PAGE 456
.CE MAN-PAGE 1 TTY(4) 456
.IE	ENTRY	tty device		\fLtty\fP \(em general terminal interface		PAGE	START	456
.IE	ENTRY	terminal interface		terminal interface \(em \fLtty\fP		PAGE	START	456
.IE	ENTRY	ioctls for terminals	TIOCSETD	\fLioctl\fP's for terminals	\fLTIOCSETD\fP \(em set line discipline			456
.IE	ENTRY	TIOCSETD set line discipline		\fLTIOCSETD\fP \(em set line discipline				456
.IE	ENTRY	set line discipline ioctl		set line discipline \fLioctl\fP \(em \fLTIOCSETD\fP				456
.IE	ENTRY	ioctls for terminals	TIOCGETD	\fLioctl\fP's for terminals	\fLTIOCGETD\fP \(em get line discipline			456
.IE	ENTRY	TIOCGETD get line discipline		\fLTIOCGETD\fP \(em get line discipline				456
.IE	ENTRY	get line discipline ioctl		get line discipline \fLioctl\fP \(em \fLTIOCGETD\fP				456
.IE	ENTRY	ioctls for terminals	TIOCNOTTY	\fLioctl\fP's for terminals	\fLTIOCNOTTY\fP \(em void tty association			456
.IE	ENTRY	TIOCNOTTY void tty association		\fLTIOCNOTTY\fP \(em void tty association				456
.IE	ENTRY	void tty association ioctl		void tty association \fLioctl\fP \(em \fLTIOCNOTTY\fP				456
.SE PAGINATE NEW-PAGE 457
.SE PAGINATE NEW-PAGE 458
.SE PAGINATE NEW-PAGE 459
.IE	ENTRY	ioctls for terminals	TIOCHPCL	\fLioctl\fP's for terminals	\fLTIOCHPCL\fP \(em hang up on last close			459
.IE	ENTRY	TIOCHPCL hang up on last close		\fLTIOCHPCL\fP \(em hang up on last close				459
.IE	ENTRY	hang up on last close ioctl		hang up on last close \fLioctl\fP \(em \fLTIOCHPCL\fP				459
.SE PAGINATE NEW-PAGE 460
.SE PAGINATE NEW-PAGE 461
.SE PAGINATE NEW-PAGE 462
.IE	ENTRY	ioctls for terminals	TIOCGETP	\fLioctl\fP's for terminals	\fLTIOCGETP\fP \(em get parameters \(em gtty			462
.IE	ENTRY	TIOCGETP get parameters \(em gtty		\fLTIOCGETP\fP \(em get parameters \(em gtty				462
.IE	ENTRY	get parameters \(em gtty ioctl		get parameters \(em gtty \fLioctl\fP \(em \fLTIOCGETP\fP				462
.IE	ENTRY	ioctls for terminals	TIOCSETP	\fLioctl\fP's for terminals	\fLTIOCSETP\fP \(em set parameters \(em gtty			462
.IE	ENTRY	TIOCSETP set parameters \(em gtty		\fLTIOCSETP\fP \(em set parameters \(em gtty				462
.IE	ENTRY	set parameters \(em gtty ioctl		set parameters \(em gtty \fLioctl\fP \(em \fLTIOCSETP\fP				462
.IE	ENTRY	ioctls for terminals	TIOCSETN	\fLioctl\fP's for terminals	\fLTIOCSETN\fP \(em set parameters			462
.IE	ENTRY	TIOCSETN set parameters		\fLTIOCSETN\fP \(em set parameters				462
.IE	ENTRY	set parameters ioctl		set parameters \fLioctl\fP \(em \fLTIOCSETN\fP				462
.IE	ENTRY	ioctls for terminals	TIOCEXCL	\fLioctl\fP's for terminals	\fLTIOCEXCL\fP \(em set exclusive use of tty			462
.IE	ENTRY	TIOCEXCL set exclusive use of tty		\fLTIOCEXCL\fP \(em set exclusive use of tty				462
.IE	ENTRY	set exclusive use of tty ioctl		set exclusive use of tty \fLioctl\fP \(em \fLTIOCEXCL\fP				462
.IE	ENTRY	ioctls for terminals	TIOCNXCL	\fLioctl\fP's for terminals	\fLTIOCNXCL\fP \(em remove exclusive use of tty			462
.IE	ENTRY	TIOCNXCL remove exclusive use of tty		\fLTIOCNXCL\fP \(em remove exclusive use of tty				462
.IE	ENTRY	remove exclusive use of tty ioctl		remove exclusive use of tty \fLioctl\fP \(em \fLTIOCNXCL\fP				462
.IE	ENTRY	ioctls for terminals	TIOCHPCL	\fLioctl\fP's for terminals	\fLTIOCHPCL\fP \(em hang up on last close			462
.IE	ENTRY	TIOCHPCL hang up on last close		\fLTIOCHPCL\fP \(em hang up on last close				462
.IE	ENTRY	hang up on last close ioctl		hang up on last close \fLioctl\fP \(em \fLTIOCHPCL\fP				462
.IE	ENTRY	ioctls for terminals	TIOCGETD	\fLioctl\fP's for terminals	\fLTIOCGETD\fP \(em get line discipline			462
.IE	ENTRY	TIOCGETD get line discipline		\fLTIOCGETD\fP \(em get line discipline				462
.IE	ENTRY	get line discipline ioctl		get line discipline \fLioctl\fP \(em \fLTIOCGETD\fP				462
.IE	ENTRY	ioctls for terminals	TIOCSETD	\fLioctl\fP's for terminals	\fLTIOCSETD\fP \(em set line discipline			462
.IE	ENTRY	TIOCSETD set line discipline		\fLTIOCSETD\fP \(em set line discipline				462
.IE	ENTRY	set line discipline ioctl		set line discipline \fLioctl\fP \(em \fLTIOCSETD\fP				462
.SE PAGINATE NEW-PAGE 463
.IE	ENTRY	ioctls for terminals	TIOCFLUSH	\fLioctl\fP's for terminals	\fLTIOCFLUSH\fP \(em flush buffers			463
.IE	ENTRY	TIOCFLUSH flush buffers		\fLTIOCFLUSH\fP \(em flush buffers				463
.IE	ENTRY	flush buffers ioctl		flush buffers \fLioctl\fP \(em \fLTIOCFLUSH\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSTI	\fLioctl\fP's for terminals	\fLTIOCSTI\fP \(em simulate terminal input			463
.IE	ENTRY	TIOCSTI simulate terminal input		\fLTIOCSTI\fP \(em simulate terminal input				463
.IE	ENTRY	simulate terminal input ioctl		simulate terminal input \fLioctl\fP \(em \fLTIOCSTI\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSBRK	\fLioctl\fP's for terminals	\fLTIOCSBRK\fP \(em set break bit			463
.IE	ENTRY	TIOCSBRK set break bit		\fLTIOCSBRK\fP \(em set break bit				463
.IE	ENTRY	set break bit ioctl		set break bit \fLioctl\fP \(em \fLTIOCSBRK\fP				463
.IE	ENTRY	ioctls for terminals	TIOCCBRK	\fLioctl\fP's for terminals	\fLTIOCCBRK\fP \(em clear break bit			463
.IE	ENTRY	TIOCCBRK clear break bit		\fLTIOCCBRK\fP \(em clear break bit				463
.IE	ENTRY	clear break bit ioctl		clear break bit \fLioctl\fP \(em \fLTIOCCBRK\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSDTR	\fLioctl\fP's for terminals	\fLTIOCSDTR\fP \(em set DTR			463
.IE	ENTRY	TIOCSDTR set DTR		\fLTIOCSDTR\fP \(em set DTR				463
.IE	ENTRY	set DTR ioctl		set DTR \fLioctl\fP \(em \fLTIOCSDTR\fP				463
.IE	ENTRY	ioctls for terminals	TIOCCDTR	\fLioctl\fP's for terminals	\fLTIOCCDTR\fP \(em clear DTR			463
.IE	ENTRY	TIOCCDTR clear DTR		\fLTIOCCDTR\fP \(em clear DTR				463
.IE	ENTRY	clear DTR ioctl		clear DTR \fLioctl\fP \(em \fLTIOCCDTR\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSTOP	\fLioctl\fP's for terminals	\fLTIOCSTOP\fP \(em stop output			463
.IE	ENTRY	TIOCSTOP stop output		\fLTIOCSTOP\fP \(em stop output				463
.IE	ENTRY	stop output ioctl		stop output \fLioctl\fP \(em \fLTIOCSTOP\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSTART	\fLioctl\fP's for terminals	\fLTIOCSTART\fP \(em restart output			463
.IE	ENTRY	TIOCSTART restart output		\fLTIOCSTART\fP \(em restart output				463
.IE	ENTRY	restart output ioctl		restart output \fLioctl\fP \(em \fLTIOCSTART\fP				463
.IE	ENTRY	ioctls for terminals	TIOCGPGRP	\fLioctl\fP's for terminals	\fLTIOCGPGRP\fP \(em get process group of tty			463
.IE	ENTRY	TIOCGPGRP get process group of tty		\fLTIOCGPGRP\fP \(em get process group of tty				463
.IE	ENTRY	get process group of tty ioctl		get process group of tty \fLioctl\fP \(em \fLTIOCGPGRP\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSPGRP	\fLioctl\fP's for terminals	\fLTIOCSPGRP\fP \(em set process group of tty			463
.IE	ENTRY	TIOCSPGRP set process group of tty		\fLTIOCSPGRP\fP \(em set process group of tty				463
.IE	ENTRY	set process group of tty ioctl		set process group of tty \fLioctl\fP \(em \fLTIOCSPGRP\fP				463
.IE	ENTRY	ioctls for terminals	TIOCOUTQ	\fLioctl\fP's for terminals	\fLTIOCOUTQ\fP \(em get number of characters in output queue			463
.IE	ENTRY	TIOCOUTQ get number of characters in output queue		\fLTIOCOUTQ\fP \(em get number of characters in output queue				463
.IE	ENTRY	get number of characters in output queue ioctl		get number of characters in output queue \fLioctl\fP \(em \fLTIOCOUTQ\fP				463
.IE	ENTRY	ioctls for terminals	TIOCGETC	\fLioctl\fP's for terminals	\fLTIOCGETC\fP \(em get special characters			463
.IE	ENTRY	TIOCGETC get special characters		\fLTIOCGETC\fP \(em get special characters				463
.IE	ENTRY	get special characters ioctl		get special characters \fLioctl\fP \(em \fLTIOCGETC\fP				463
.IE	ENTRY	ioctls for terminals	TIOCSETC	\fLioctl\fP's for terminals	\fLTIOCSETC\fP \(em set special characters			463
.IE	ENTRY	TIOCSETC set special characters		\fLTIOCSETC\fP \(em set special characters				463
.IE	ENTRY	set special characters ioctl		set special characters \fLioctl\fP \(em \fLTIOCSETC\fP				463
.SE PAGINATE NEW-PAGE 464
.IE	ENTRY	ioctls for terminals	TIOCLBIS	\fLioctl\fP's for terminals	\fLTIOCLBIS\fP \(em bit set local mode bits			464
.IE	ENTRY	TIOCLBIS bit set local mode bits		\fLTIOCLBIS\fP \(em bit set local mode bits				464
.IE	ENTRY	bit set local mode bits ioctl		bit set local mode bits \fLioctl\fP \(em \fLTIOCLBIS\fP				464
.IE	ENTRY	ioctls for terminals	TIOCLBIC	\fLioctl\fP's for terminals	\fLTIOCLBIC\fP \(em bit clear local mode bits			464
.IE	ENTRY	TIOCLBIC bit clear local mode bits		\fLTIOCLBIC\fP \(em bit clear local mode bits				464
.IE	ENTRY	bit clear local mode bits ioctl		bit clear local mode bits \fLioctl\fP \(em \fLTIOCLBIC\fP				464
.IE	ENTRY	ioctls for terminals	TIOCLSET	\fLioctl\fP's for terminals	\fLTIOCLSET\fP \(em set local mode bits			464
.IE	ENTRY	TIOCLSET set local mode bits		\fLTIOCLSET\fP \(em set local mode bits				464
.IE	ENTRY	set local mode bits ioctl		set local mode bits \fLioctl\fP \(em \fLTIOCLSET\fP				464
.IE	ENTRY	ioctls for terminals	TIOCLGET	\fLioctl\fP's for terminals	\fLTIOCLGET\fP \(em get local mode bits			464
.IE	ENTRY	TIOCLGET get local mode bits		\fLTIOCLGET\fP \(em get local mode bits				464
.IE	ENTRY	get local mode bits ioctl		get local mode bits \fLioctl\fP \(em \fLTIOCLGET\fP				464
.IE	ENTRY	ioctls for terminals	TIOCSLTC	\fLioctl\fP's for terminals	\fLTIOCSLTC\fP \(em set local special chars			464
.IE	ENTRY	TIOCSLTC set local special chars		\fLTIOCSLTC\fP \(em set local special chars				464
.IE	ENTRY	set local special chars ioctl		set local special chars \fLioctl\fP \(em \fLTIOCSLTC\fP				464
.IE	ENTRY	ioctls for terminals	TIOCGLTC	\fLioctl\fP's for terminals	\fLTIOCGLTC\fP \(em get local special chars			464
.IE	ENTRY	TIOCGLTC get local special chars		\fLTIOCGLTC\fP \(em get local special chars				464
.IE	ENTRY	get local special chars ioctl		get local special chars \fLioctl\fP \(em \fLTIOCGLTC\fP				464
.SE PAGINATE NEW-PAGE 465
.IE	ENTRY	tty device		\fLtty\fP \(em general terminal interface		PAGE	END	465
.IE	ENTRY	terminal interface		terminal interface \(em \fLtty\fP		PAGE	END	465
.SE PAGINATE NEW-PAGE 466
.CE MAN-PAGE 1 UDP(4P) 466
.IE	ENTRY	udp device		\fLudp\fP \(em Internet User Datagram Protocol		PAGE	START	466
.IE	ENTRY	Internet	User Datagram Protocol		User Datagram Protocol \(em \fLudp\fP		PAGE	466
.SE PAGINATE NEW-PAGE 467
.IE	ENTRY	ioctls for sockets	SIOCSHIWAT	\fLioctl\fP's for sockets	\fLSIOCSHIWAT\fP \(em set high water mark			467
.IE	ENTRY	SIOCSHIWAT set high water mark		\fLSIOCSHIWAT\fP \(em set high water mark				467
.IE	ENTRY	set high water mark ioctl		set high water mark \fLioctl\fP \(em \fLSIOCSHIWAT\fP				467
.IE	ENTRY	TCP ioctls	SIOCSHIWAT	TCP \fLioctl\fP's	\fLSIOCSHIWAT\fP \(em set high water mark			467
.IE	ENTRY	ioctls for sockets	SIOCGHIWAT	\fLioctl\fP's for sockets	\fLSIOCGHIWAT\fP \(em get high water mark			467
.IE	ENTRY	SIOCGHIWAT get high water mark		\fLSIOCGHIWAT\fP \(em get high water mark				467
.IE	ENTRY	get high water mark ioctl		get high water mark \fLioctl\fP \(em \fLSIOCGHIWAT\fP				467
.IE	ENTRY	TCP ioctls	SIOCGHIWAT	TCP \fLioctl\fP's	\fLSIOCGHIWAT\fP \(em get high water mark			467
.IE	ENTRY	ioctls for sockets	SIOCSLOWAT	\fLioctl\fP's for sockets	\fLSIOCSLOWAT\fP \(em set low water mark			467
.IE	ENTRY	SIOCSLOWAT set low water mark		\fLSIOCSLOWAT\fP \(em set low water mark				467
.IE	ENTRY	set low water mark ioctl		set low water mark \fLioctl\fP \(em \fLSIOCSLOWAT\fP				467
.IE	ENTRY	TCP ioctls	SIOCSLOWAT	TCP \fLioctl\fP's	\fLSIOCSLOWAT\fP \(em set low water mark			467
.IE	ENTRY	ioctls for sockets	SIOCGLOWAT	\fLioctl\fP's for sockets	\fLSIOCGLOWAT\fP \(em get low water mark			467
.IE	ENTRY	SIOCGLOWAT get low water mark		\fLSIOCGLOWAT\fP \(em get low water mark				467
.IE	ENTRY	get low water mark ioctl		get low water mark \fLioctl\fP \(em \fLSIOCGLOWAT\fP				467
.IE	ENTRY	TCP ioctls	SIOCGLOWAT	TCP \fLioctl\fP's	\fLSIOCGLOWAT\fP \(em get low water mark			467
.IE	ENTRY	udp device		\fLudp\fP \(em Internet User Datagram Protocol		PAGE	END	467
.IE	ENTRY	Internet	User Datagram Protocol		User Datagram Protocol \(em \fLudp\fP		PAGE	467
.SE PAGINATE NEW-PAGE 468
.CE MAN-PAGE 1 VP(4S) 468
.IE	ENTRY	vp device		\fLvp\fP \(em Ikon 10071-5 Versatec parallel printer interface		PAGE	START	468
.IE	ENTRY	printer interface	vp		\fLvp\fP \(em Ikon 10071-5 Versatec parallel printer interface		PAGE	468
.IE	ENTRY	Ikon 10071-5 printer interface		Ikon 10071-5 printer interface \(em \fLvp\fP		PAGE	START	468
.IE	ENTRY	vp device		\fLvp\fP \(em Ikon 10071-5 Versatec parallel printer interface		PAGE	END	468
.IE	ENTRY	printer interface	vp		\fLvp\fP \(em Ikon 10071-5 Versatec parallel printer interface		PAGE	468
.IE	ENTRY	Ikon 10071-5 printer interface		Ikon 10071-5 printer interface \(em \fLvp\fP		PAGE	END	468
.SE PAGINATE NEW-PAGE 469
.CE MAN-PAGE 1 VPC(4S) 469
.IE	ENTRY	vpc device		\fLvpc\fP \(em Systech VPC-2200 Versatec/Centronics interface		PAGE	START	469
.IE	ENTRY	Systech VPC-2200 interface		Systech VPC-2200 interface \(em \fLvpc\fP		PAGE	START	469
.IE	ENTRY	printer interface	vpc		\fLvpc\fP \(em Systech VPC-2200 Versatec/Centronics interface	PAGE	START	469
.IE	ENTRY	vpc device		\fLvpc\fP \(em Systech VPC-2200 Versatec/Centronics interface		PAGE	END	469
.IE	ENTRY	Systech VPC-2200 interface		Systech VPC-2200 interface \(em \fLvpc\fP		PAGE	END	469
.IE	ENTRY	printer interface	vpc		\fLvpc\fP \(em Systech VPC-2200 Versatec/Centronics interface	PAGE	END	469
.SE PAGINATE NEW-PAGE 470
.CE MAN-PAGE 1 WIN(4S) 470
.IE	ENTRY	win device		\fLwin\fP \(em Sun window system		PAGE	START	470
.IE	ENTRY	win device		\fLwin\fP \(em Sun window system		PAGE	END	470
.SE PAGINATE NEW-PAGE 471
.CE MAN-PAGE 1 XT(4S) 471
.IE	ENTRY	xt device		\fLxt\fP \(em Xylogics 472 1/2-inch tape drive		PAGE	START	471
.IE	ENTRY	Xylogics 472 1/2-inch tape drive		Xylogics 472 1/2-inch tape drive \(em \fLxt\fP		PAGE	START	471
.IE	ENTRY	tape drive, 1/2-inch	xt		\fLxt\fP \(em Xylogics 472	PAGE	START	471
.IE	ENTRY	1/2-inch tape drive	xt		\fLxt\fP \(em Xylogics 472	PAGE	START	471
.IE	ENTRY	472 1/2-inch tape drive		472 1/2-inch tape drive \(em \fLxt\fP		PAGE	START	471
.IE	ENTRY	xt device		\fLxt\fP \(em Xylogics 472 1/2-inch tape drive		PAGE	END	471
.IE	ENTRY	Xylogics 472 1/2-inch tape drive		Xylogics 472 1/2-inch tape drive \(em \fLxt\fP		PAGE	END	471
.IE	ENTRY	tape drive, 1/2-inch	xt		\fLxt\fP \(em Xylogics 472	PAGE	END	471
.IE	ENTRY	1/2-inch tape drive	xt		\fLxt\fP \(em Xylogics 472	PAGE	END	471
.IE	ENTRY	472 1/2-inch tape drive		472 1/2-inch tape drive \(em \fLxt\fP		PAGE	END	471
.SE PAGINATE NEW-PAGE 472
.CE MAN-PAGE 1 XY(4S) 472
.IE	ENTRY	xy device		\fLxy\fP \(em Xylogics SMD Disk driver		PAGE	START	472
.IE	ENTRY	Xylogics SMD Disk driver		Xylogics SMD Disk driver \(em \fLxy\fP		PAGE	START	472
.IE	ENTRY	450 SMD Disk driver		450 SMD Disk driver \(em \fLxy\fP		PAGE	START	472
.IE	ENTRY	SMD disk controller	Xylogics 450		\fLxy\fP \(em Xylogics 450	PAGE	START	472
.IE	ENTRY	disk driver	Xylogics		\fLxy\fP \(em Xylogics	PAGE	START	472
.SE PAGINATE NEW-PAGE 473
.IE	ENTRY	xy device		\fLxy\fP \(em Xylogics SMD Disk driver		PAGE	END	473
.IE	ENTRY	Xylogics SMD Disk driver		Xylogics SMD Disk driver \(em \fLxy\fP		PAGE	END	473
.IE	ENTRY	450 SMD Disk driver		450 SMD Disk driver \(em \fLxy\fP		PAGE	END	473
.IE	ENTRY	SMD disk controller	Xylogics 450		\fLxy\fP \(em Xylogics 450	PAGE	END	473
.IE	ENTRY	disk driver	Xylogics		\fLxy\fP \(em Xylogics	PAGE	END	473
.SE PAGINATE NEW-PAGE 474
.CE MAN-PAGE 1 ZS(4S) 474
.IE	ENTRY	zs device		\fLzs\fP \(em zilog 8530 SCC serial comunications driver		PAGE	START	474
.IE	ENTRY	8530 SCC serial comunications driver		8530 SCC serial comunications driver \(em \fLzs\fP		PAGE	START	474
.IE	ENTRY	serial comunications driver	zs		serial comunications driver \(em \fLzs\fP		PAGE	474
.IE	ENTRY	zs device		\fLzs\fP \(em zilog 8530 SCC serial comunications driver		PAGE	END	474
.IE	ENTRY	8530 SCC serial comunications driver		8530 SCC serial comunications driver \(em \fLzs\fP		PAGE	END	474
.IE	ENTRY	serial comunications driver	zs		serial comunications driver \(em \fLzs\fP		PAGE	474
.SE PAGINATE NEW-PAGE 475
475
.CE MAN-PAGE 1 A.OUT(5) 475
.IE	ENTRY	a.out file		\fLa.out\fP \(em assembler and link editor output				475
.IE	ENTRY	assembler output		assembler output \(em \fLa.out\fP				475
.IE	ENTRY	link editor output		link editor output \(em \fLa.out\fP				475
.SE PAGINATE NEW-PAGE 476
.SE PAGINATE NEW-PAGE 477
.SE PAGINATE NEW-PAGE 478
.SE PAGINATE NEW-PAGE 479
.CE MAN-PAGE 1 ACCT(5) 479
.IE	ENTRY	acct file		\fLacct\fP \(em execution accounting file				479
.IE	ENTRY	execution accounting file		execution accounting file \(em \fLacct\fP				479
.IE	ENTRY	accounting file		accounting file \(em \fLacct\fP				479
.SE PAGINATE NEW-PAGE 480
.CE MAN-PAGE 1 ALIASES(5) 480
.IE	ENTRY	aliases file		\fLaliases\fP \(em sendmail aliases file				480
.IE	ENTRY	sendmail aliases file		sendmail aliases file \(em \fLaliases\fP				480
.SE PAGINATE NEW-PAGE 481
.CE MAN-PAGE 1 AR(5) 481
.IE	ENTRY	ar file		\fLar\fP \(em archive file format				481
.IE	ENTRY	archive file format		archive file format \(em \fLar\fP				481
.IE	ENTRY	library file format		library file format \(em \fLar\fP				481
.SE PAGINATE NEW-PAGE 482
.CE MAN-PAGE 1 CORE(5) 482
.IE	ENTRY	core file		\fLcore\fP \(em memory image file format				482
.IE	ENTRY	memory image file format		memory image file format \(em \fLcore\fP				482
.IE	ENTRY	format of memory image file		format of memory image file \(em \fLcore\fP				482
.SE PAGINATE NEW-PAGE 483
.CE MAN-PAGE 1 CPIO(5) 483
.IE	ENTRY	cpio file		\fLcpio\fP \(em cpio archive format				483
.SE PAGINATE NEW-PAGE 484
.CE MAN-PAGE 1 CRONTAB(5) 484
.IE	ENTRY	crontab file		\fLcrontab\fP \(em periodic jobs table				484
.IE	ENTRY	periodic jobs table		periodic jobs table \(em \fLcrontab\fP				484
.IE	ENTRY	timed event jobs table		timed event jobs table \(em \fLcrontab\fP				484
.SE PAGINATE NEW-PAGE 485
.CE MAN-PAGE 1 DIR(5) 485
.IE	ENTRY	dir file		\fLdir\fP \(em directory format				485
.SE PAGINATE NEW-PAGE 486
.SE PAGINATE NEW-PAGE 487
.CE MAN-PAGE 1 DUMP(5) 487
.IE	ENTRY	dump file		\fLdump\fP \(em incremental dump format				487
.IE	ENTRY	incremental dump format		incremental dump format \(em \fLdump\fP				487
.SE PAGINATE NEW-PAGE 488
.SE PAGINATE NEW-PAGE 489
.CE MAN-PAGE 1 ENVIRON(5V) 489
.IE	ENTRY	environ file		\fLenviron\fP \(em user environment				489
.IE	ENTRY	login environment		login environment \(em \fLenviron\fP				489
.SE PAGINATE NEW-PAGE 490
.CE MAN-PAGE 1 ETHERS(5) 490
.SE PAGINATE NEW-PAGE 491
.CE MAN-PAGE 1 EXPORTS(5) 491
.IE	ENTRY	NFS exported file systems		NFS exported file systems \(em \fLexportfs\fP				491
.SE PAGINATE NEW-PAGE 492
.CE MAN-PAGE 1 FCNTL(5) 492
.IE	ENTRY	fcntl file		\fLfcntl\fP \(em file control options				492
.IE	ENTRY	file control options		file control options \(em \fLfcntl\fP				492
.SE PAGINATE NEW-PAGE 493
.CE MAN-PAGE 1 FS(5) 493
.IE	ENTRY	fs file		\fLfs\fP \(em file system format				493
.IE	ENTRY	file system format		file system format \(em \fLfs\fP				493
.SE PAGINATE NEW-PAGE 494
.SE PAGINATE NEW-PAGE 495
.SE PAGINATE NEW-PAGE 496
.CE MAN-PAGE 1 FSPEC(5) 496
.IE	ENTRY	fspec		\fLfspec\fR text file tabstop specifications				496
.IE	ENTRY	tabstops		tabstop specifications in text files \(em \fLfspec\fR				496
.SE PAGINATE NEW-PAGE 497
.SE PAGINATE NEW-PAGE 498
.CE MAN-PAGE 1 FSTAB(5) 498
.IE	ENTRY	fstab file		\fLfstab\fP \(em fileystem static information				498
.IE	ENTRY	fileystem static information		fileystem static information \(em \fLfstab\fP				498
.SE PAGINATE NEW-PAGE 499
.SE PAGINATE NEW-PAGE 500
.CE MAN-PAGE 1 FTPUSERS(5) 500
.IE	ENTRY	ftpusers file		\fLftpusers\fP \(em ftp prohibited users list				500
.SE PAGINATE NEW-PAGE 501
.CE MAN-PAGE 1 GETTYTAB(5) 501
.IE	ENTRY	gettytab file		\fLgettytab\fP \(em terminal configuration data base				501
.IE	ENTRY	terminal	configuration data base		configuration data base \(em \fLgettytab\fP			501
.SE PAGINATE NEW-PAGE 502
.SE PAGINATE NEW-PAGE 503
.SE PAGINATE NEW-PAGE 504
.CE MAN-PAGE 1 GROUP(5) 504
.IE	ENTRY	group file		\fLgroup\fP \(em group file format				504
.SE PAGINATE NEW-PAGE 505
.CE MAN-PAGE 1 HOSTS(5) 505
.IE	ENTRY	hosts file		\fLhosts\fP \(em host name data base				505
.SE PAGINATE NEW-PAGE 506
.CE MAN-PAGE 1 HOSTS.EQUIV(5) 506
.IE	ENTRY	hosts.equiv file		\fLhosts.equiv\fP \(em trusted hosts list				506
.IE	ENTRY	trusted hosts list		trusted hosts list \(em \fLhosts.equiv\fP				506
.SE PAGINATE NEW-PAGE 507
.CE MAN-PAGE 1 KBD(5) 507
.IE	ENTRY	kbd file		\fLkbd\fP \(em keyboard translation tables				507
.IE	ENTRY	keyboard translation tables		keyboard translation tables \(em \fLkbd\fP				507
.SE PAGINATE NEW-PAGE 508
.SE PAGINATE NEW-PAGE 509
.SE PAGINATE NEW-PAGE 510
.SE PAGINATE NEW-PAGE 511
.SE PAGINATE NEW-PAGE 512
.SE PAGINATE NEW-PAGE 513
.SE PAGINATE NEW-PAGE 514
.SE PAGINATE NEW-PAGE 515
.SE PAGINATE NEW-PAGE 516
.SE PAGINATE NEW-PAGE 517
.SE PAGINATE NEW-PAGE 518
.SE PAGINATE NEW-PAGE 519
.SE PAGINATE NEW-PAGE 520
.SE PAGINATE NEW-PAGE 521
.SE PAGINATE NEW-PAGE 522
.SE PAGINATE NEW-PAGE 523
.CE MAN-PAGE 1 MAGIC(5) 523
.SE PAGINATE NEW-PAGE 524
.CE MAN-PAGE 1 MNTENT(5) 524
.IE	ENTRY	mntent file		\fLmntent\fP \(em file system static information				524
.IE	ENTRY	file system	mntent file		\fLmntent\fP \(em static information			524
.IE	ENTRY	static file system information mntent		static file system information \(em \fLmntent\fP				524
.SE PAGINATE NEW-PAGE 525
.SE PAGINATE NEW-PAGE 526
.CE MAN-PAGE 1 MTAB(5) 526
.IE	ENTRY	mtab file		\fLmtab\fP \(em mounted file system table				526
.IE	ENTRY	mounted file system table		mounted file system table \(em \fLmtab\fP				526
.IE	ENTRY	file system	mounted table		mounted table \(em \fLmtab\fP			526
.SE PAGINATE NEW-PAGE 527
.CE MAN-PAGE 1 NETGROUP(5) 527
.IE	ENTRY	netgroup file		\fLnetgroup\fP \(em network groups list				527
.SE PAGINATE NEW-PAGE 528
.CE MAN-PAGE 1 NETRC(5) 528
.IE	ENTRY	berknet information file		berknet information file \(em \fL.netrc\fP				528
.IE	ENTRY	netrc berknet information file		\fL.netrc\fP \(em berknet information file				528
.SE PAGINATE NEW-PAGE 529
.CE MAN-PAGE 1 NETWORKS(5) 529
.IE	ENTRY	networks file		\fLnetworks\fP \(em network name data base				529
.SE PAGINATE NEW-PAGE 530
.CE MAN-PAGE 1 PASSWD(5) 530
.IE	ENTRY	passwd file		\fLpasswd\fP \(em password file				530
.SE PAGINATE NEW-PAGE 531
.SE PAGINATE NEW-PAGE 532
.CE MAN-PAGE 1 PHONES(5) 532
.IE	ENTRY	phones file		\fLphones\fP \(em remote host phone numbers				532
.IE	ENTRY	remote host phone numbers		remote host phone numbers \(em \fLphones\fP				532
.IE	ENTRY	host phone numbers		host phone numbers \(em \fLphones\fP				532
.SE PAGINATE NEW-PAGE 533
.CE MAN-PAGE 1 PLOT(5) 533
.IE	ENTRY	plot file		\fLplot\fP \(em graphics interface files				533
.IE	ENTRY	graphics interface files		graphics interface files \(em \fLplot\fP				533
.SE PAGINATE NEW-PAGE 534
.CE MAN-PAGE 1 PRINTCAP(5) 534
.IE	ENTRY	printcap file		\fLprintcap\fP \(em printer capability data base				534
.SE PAGINATE NEW-PAGE 535
.SE PAGINATE NEW-PAGE 536
.CE MAN-PAGE 1 PROTOCOLS(5) 536
.IE	ENTRY	protocols file		\fLprotocols\fP \(em protocol name data base				536
.SE PAGINATE NEW-PAGE 537
.CE MAN-PAGE 1 RASTERFILE(5) 537
.IE	ENTRY	rasterfile						537
.SE PAGINATE NEW-PAGE 538
.CE MAN-PAGE 1 REMOTE(5) 538
.IE	ENTRY	remote file		\fLremote\fP \(em remote host descriptions				538
.SE PAGINATE NEW-PAGE 539
.SE PAGINATE NEW-PAGE 540
.CE MAN-PAGE 1 RESOLVER(5) 540
.SE PAGINATE NEW-PAGE 541
.CE MAN-PAGE 1 RMTAB(5) 541
.IE	ENTRY	rmtab file		\fLrmtab\fP \(em remote mounted file system table				541
.SE PAGINATE NEW-PAGE 542
.CE MAN-PAGE 1 RPC(5) 542
.IE	ENTRY	rpc program number file		\fLrpc\fP \(em rpc name data base				542
.SE PAGINATE NEW-PAGE 543
.CE MAN-PAGE 1 SCCSFILE(5) 543
.IE	ENTRY	sccsfile file		\fLsccsfile\fP \(em SCCS file format				543
.SE PAGINATE NEW-PAGE 544
.SE PAGINATE NEW-PAGE 545
.SE PAGINATE NEW-PAGE 546
.CE MAN-PAGE 1 SERVERS(5) 546
.IE	ENTRY	servers file		\fLservers\fP \(em inet server database				546
.IE	ENTRY	inet server database		inet server database \(em \fLservers\fP				546
.SE PAGINATE NEW-PAGE 547
.CE MAN-PAGE 1 SERVICES(5) 547
.IE	ENTRY	service name data base		inet server database \(em \fLservices\fP				547
.SE PAGINATE NEW-PAGE 548
.SE PAGINATE NEW-PAGE 549
.CE MAN-PAGE 1 SM(5) 549
.SE PAGINATE NEW-PAGE 550
.CE MAN-PAGE 1 TAR(5) 550
.IE	ENTRY	tar file		\fLtar\fP \(em tape archive file format				550
.SE PAGINATE NEW-PAGE 551
.SE PAGINATE NEW-PAGE 552
.CE MAN-PAGE 1 TERM(5V) 552
.IE	ENTRY	term	file	 " 	\fLterm\fR	\(em	compiled	552
.SE PAGINATE NEW-PAGE 553
.SE PAGINATE NEW-PAGE 554
.CE MAN-PAGE 1 TERMCAP(5) 554
.IE	ENTRY	termcap file		\fLtermcap\fP \(em terminal capability data base				554
.SE PAGINATE NEW-PAGE 555
.SE PAGINATE NEW-PAGE 556
.SE PAGINATE NEW-PAGE 557
.SE PAGINATE NEW-PAGE 558
.SE PAGINATE NEW-PAGE 559
.SE PAGINATE NEW-PAGE 560
.SE PAGINATE NEW-PAGE 561
.SE PAGINATE NEW-PAGE 562
.CE MAN-PAGE 1 TERMINFO(5V) 562
.IE	ENTRY	terminfo file		\fLterminfo\fP \(em System V terminal capability data base				562
.SE PAGINATE NEW-PAGE 563
.SE PAGINATE NEW-PAGE 564
.SE PAGINATE NEW-PAGE 565
.SE PAGINATE NEW-PAGE 566
.SE PAGINATE NEW-PAGE 567
.SE PAGINATE NEW-PAGE 568
.SE PAGINATE NEW-PAGE 569
.SE PAGINATE NEW-PAGE 570
.SE PAGINATE NEW-PAGE 571
.SE PAGINATE NEW-PAGE 572
.SE PAGINATE NEW-PAGE 573
.SE PAGINATE NEW-PAGE 574
.SE PAGINATE NEW-PAGE 575
.CE MAN-PAGE 1 TP(5) 575
.IE	ENTRY	tp file		\fLtp\fP \(em DEC/mag tape formats				575
.SE PAGINATE NEW-PAGE 576
.CE MAN-PAGE 1 TTYS(5) 576
.IE	ENTRY	ttys file		\fLttys\fP \(em terminal initialization data				576
.SE PAGINATE NEW-PAGE 577
.CE MAN-PAGE 1 TTYTYPE(5) 577
.IE	ENTRY	ttytype file		\fLttytype\fP \(em connected terminal types	ttytype.5:			577
.IE	ENTRY	terminal types		terminal types \(em \fLttytype\fP				577
.SE PAGINATE NEW-PAGE 578
.CE MAN-PAGE 1 TYPES(5) 578
.IE	ENTRY	types file		\fLtypes\fP \(em primitive system data types				578
.IE	ENTRY	primitive system data types		primitive system data types \(em \fLtypes\fP				578
.IE	ENTRY	system data types		system data types \(em \fLtypes\fP				578
.IE	ENTRY	data types		data types \(em \fLtypes\fP				578
.SE PAGINATE NEW-PAGE 579
.SE PAGINATE NEW-PAGE 580
.CE MAN-PAGE 1 UTMP(5) 580
.IE	ENTRY	utmp file		\fLutmp\fP \(em login records				580
.IE	ENTRY	wtmp file		\fLwtmp\fP \(em login records				580
.IE	ENTRY	usracct file		\fLusracct\fP \(em login records				580
.IE	ENTRY	lastlog file		\fLlastlog\fP \(em login records				580
.IE	ENTRY	login records	utmp file		\fLutmp\fP file			580
.IE	ENTRY	login records	wtmp file		\fLwtmp\fP file			580
.IE	ENTRY	login records	lastlog file		\fLlastlog\fP file			580
.SE PAGINATE NEW-PAGE 581
.CE MAN-PAGE 1 UUENCODE(5) 581
.IE	ENTRY	uuencode file		\fLuuencode\fP \(em UUCP encoded file format				581
.SE PAGINATE NEW-PAGE 582
.CE MAN-PAGE 1 VFONT(5) 582
.IE	ENTRY	vfont file		\fLvfont\fP \(em font formats				582
.SE PAGINATE NEW-PAGE 583
.CE MAN-PAGE 1 VGRINDEFS(5) 583
.IE	ENTRY	vgrindefs file		\fLvgrindefs\fP \(em vgrind language definitions				583
.SE PAGINATE NEW-PAGE 584
.SE PAGINATE NEW-PAGE 585
.CE MAN-PAGE 1 YPFILES(5) 585
.IE	ENTRY	ypfiles file		\fLypfiles\fP \(em yellowpages database and directory				585
.SE PAGINATE NEW-PAGE 586
587
