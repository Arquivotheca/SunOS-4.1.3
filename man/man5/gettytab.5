'\" t
.\" @(#)gettytab.5 1.1 92/07/30 SMI; from UCB 4.3
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.TH GETTYTAB 5 "20 January 1990"
.SH NAME
gettytab \- terminal configuration data base
.SH SYNOPSIS
.B /etc/gettytab
.SH DESCRIPTION
.IX  "gettytab file"  ""  "\fLgettytab\fP \(em terminal configuration data base"
.IX  terminal  "configuration data base"  ""  "configuration data base \(em \fLgettytab\fP"
.LP
.B gettytab
is a simplified version of the
.BR termcap (5)
data base used to describe terminal lines.
The initial terminal login process
.BR getty (8)
accesses the
.B gettytab
file each time it starts, allowing simpler
reconfiguration of terminal characteristics.
Each entry in the data base is used to describe one
class of terminals.
.LP
There is a default terminal class,
.BR default ,
that is used to set global defaults for
all other classes.  That is, the
.B default
entry is read, then the entry for the class
required is used to override particular settings.
.SH CAPABILITIES
.LP
Refer to
.BR termcap (5)
for a description of the file layout.  The
.I Default
column below lists defaults obtained if there is
no entry in the table obtained, nor one in the special
default table.
.LP
.\" === troff version =====
.if n .ig IG
.TS
c c l l
cfB l l l .
\fIName	Type	Default	Description\fP
.sp .5
ab	bool	false	read a \er first and guess the baud rate from it
ap	bool	false	terminal uses 7 bits, any parity
bd	num	0	backspace delay
bk	str	0377	alternate end of line character (input break)
cb	bool	false	use crt backspace mode
cd	num	0	carriage-return delay
ce	bool	false	use crt erase algorithm
ck	bool	false	use crt kill algorithm
cl	str	\s-1NULL\s0	screen clear sequence
co	bool	false	console - add \s-1NEWLINE\s0 after login prompt
de	num	0	delay before first prompt is printed (seconds)
ds	str	^Y	delayed suspend character
dx	bool	false	set \s-1DECCTLQ\s0
ec	bool	false	leave echo \s-1OFF\s0
ep	bool	false	terminal uses 7 bits, even parity
er	str	^?	erase character
et	str	^D	end of text (\s-1EOF\s0) character
ev	str	\s-1NULL\s0	initial environment
f0	num	unused	tty mode flags to write messages
f1	num	unused	tty mode flags to read login name
f2	num	unused	tty mode flags to leave terminal as
fd	num	0	form-feed (vertical motion) delay
fl	str	^O	output flush character
hc	bool	false	do \s-1NOT\s0 hangup line on last close
he	str	\s-1NULL\s0	hostname editing string
hn	str	hostname	hostname
ht	bool	false	terminal has real tabs
ig	bool	false	ignore garbage characters in login name
im	str	\s-1NULL\s0	initial (banner) message
in	str	^C	interrupt character
is	num	unused	input speed
kl	str	^U	kill character
lc	bool	false	terminal has lower case
lm	str	login:	login prompt
ln	str	^V	\*(lqliteral next\*(rq character
lo	str	/usr/bin/login	program to exec when name obtained
.br
.ne 3
ms	str	\s-1NULL\s0	list of terminal modes to set or clear 
m0	str	\s-1NULL\s0	set modes that apply at the same time as those set by f0
m1	str	\s-1NULL\s0	set modes that apply at the same time as those set by f1
m2	str	\s-1NULL\s0	set modes that apply at the same time as those set by f2
nd	num	0	\s-1NEWLINE\s0 (\s-1LINEFEED\s0) delay
nl	bool	false	terminal has (or might have) a \s-1NEWLINE\s0 character
nx	str	default	next table (for auto speed selection)
op	bool	false	terminal uses 7 bits, odd parity
os	num	unused	output speed
p8	bool	false	terminal uses 8 bits, no parity
pc	str	\\0	pad character
pe	bool	false	use printer (hard copy) erase algorithm
pf	num	0	delay between first prompt and following flush (seconds)
ps	bool	false	line connected to a \s-1MICOM\s0 port selector
qu	str	^\\	quit character
rp	str	^R	line retype character
rw	bool	false	do \s-1NOT\s0 use \s-1RAW\s0 for input, use \s-1CBREAK\s0
sp	num	0	line speed (input and output)
su	str	^Z	suspend character
tc	str	none	table continuation
td	num	0	tab delay
to	num	0	timeout (seconds)
tt	str	\s-1NULL\s0	terminal type (for environment)
ub	bool	false	do unbuffered output (of prompts etc)
uc	bool	false	terminal is known upper case only
we	str	^W	word erase character
xc	bool	false	do \s-1NOT\s0 echo control chars as ^X
xf	str	^S	\s-1XOFF\s0 (stop output) character
xn	str	^Q	\s-1XON\s0 (start output) character
.TE
.IG
.\" ==== end troff version ===
.\ === nroff version ====
.if t .ig IG
.TS
c c l l
cfB l l l .
\fIName	Type	Default	Description\fP
.sp .5
ab	bool	false	read a \er first and guess the 
			baud rate from it
ap	bool	false	terminal uses 7 bits, 
			any parity
bd	num	0	backspace delay
bk	str	0377	alternate end of line 
			character (input break)
cb	bool	false	use crt backspace mode
cd	num	0	carriage-return delay
ce	bool	false	use crt erase algorithm
ck	bool	false	use crt kill algorithm
cl	str	\s-1NULL\s0	screen clear sequence
co	bool	false	console - add \s-1NEWLINE\s0 after 
			login prompt
de	num	0	delay before first prompt is 
			printed (seconds)
ds	str	^Y	delayed suspend character
dx	bool	false	set \s-1DECCTLQ\s0
ec	bool	false	leave echo \s-1OFF\s0
ep	bool	false	terminal uses 7 bits, even
			parity
er	str	^?	erase character
et	str	^D	end of text (\s-1EOF\s0) character
ev	str	\s-1NULL\s0	initial environment
f0	num	unused	tty mode flags to write 
			messages
f1	num	unused	tty mode flags to read login 
			name
f2	num	unused	tty mode flags to leave 
			terminal as
fd	num	0	form-feed (vertical motion) 
			delay
fl	str	^O	output flush character
hc	bool	false	do \s-1NOT\s0 hangup line on 
			last close
he	str	\s-1NULL\s0	hostname editing string
hn	str	hostname	hostname
ht	bool	false	terminal has real tabs
ig	bool	false	ignore garbage characters 
			in login name
im	str	\s-1NULL\s0	initial (banner) message
in	str	^C	interrupt character
is	num	unused	input speed
kl	str	^U	kill character
lc	bool	false	terminal has lower case
lm	str	login:	login prompt
ln	str	^V	\*(lqliteral next\*(rq character
lo	str	/usr/bin/login	program to exec when name 
			obtained
.br
.ne 3
ms	str	\s-1NULL\s0	list of terminal modes
			to set or clear 
m0	str	\s-1NULL\s0	set modes that apply at the same 
			time as those set by \fBf0\fR
m1	str	\s-1NULL\s0	set modes that apply at the same 
			time as those set by \fBf1\fR
m2	str	\s-1NULL\s0	set modes that apply at the same 
			time as those set by \fBf2\fR
nd	num	0	\s-1NEWLINE\s0 (\s-1LINEFEED\s0) delay
nl	bool	false	terminal has (or might have) 
			a \s-1NEWLINE\s0 character
nx	str	default	next table (for auto speed 
			selection)
op	bool	false	terminal uses 7 bits, 
			odd parity
os	num	unused	output speed
p8	bool	false	terminal uses 8 bits, no 
			parity
pc	str	\\0	pad character
pe	bool	false	use printer (hard copy) erase 
			algorithm
pf	num	0	delay between first prompt 
			and following flush (seconds)
ps	bool	false	line connected to a \s-1MICOM\s0 
			port selector
qu	str	^\\	quit character
rp	str	^R	line retype character
rw	bool	false	do \s-1NOT\s0 use \s-1RAW\s0 for input, 
			use \s-1CBREAK\s0
sp	num	0	line speed (input and output)
su	str	^Z	suspend character
tc	str	none	table continuation
td	num	0	tab delay
to	num	0	timeout (seconds)
tt	str	\s-1NULL\s0	terminal type (for environment)
ub	bool	false	do unbuffered output (of 
			prompts etc)
uc	bool	false	terminal is known upper case only
we	str	^W	word erase character
xc	bool	false	do \s-1NOT\s0 echo control chars as ^X
xf	str	^S	\s-1XOFF\s0 (stop output) character
xn	str	^Q	\s-1XON\s0 (start output) character
.TE
.IG
.\" === end nroff version ====
.LP
If no line speed is specified, speed will not be altered from that
which prevails when
.B getty
is entered.  Specifying an input or output
speed overrides line speed for stated direction only. If
.B ab
is specified,
.B getty
will initially read a character from the tty, assumed to be a carriage
return, and will attempt to figure out the baud rate based on what the
character appears as.  It will then look for a table entry for that baud
rate; if the line appears to be a 300 baud line, it will look for an entry
.BR 300-baud ,
if it appears to be a 1200 baud line, it will look for an entry
.BR 1200-baud ,
etc.\|.
.LP
Terminal modes to be used for the output of the message, for input of
the login name, and to leave the terminal set as upon completion, are
derived from the Boolean flags specified.  If the derivation should
prove inadequate, any (or all) of these three may be overridden with one
of the
.BR f0 ,
.BR f1 ", or"
.B f2
numeric specifications, which can be used to specify (usually in octal,
with a leading `0') the exact values of the flags.  Local (new tty)
flags are set in the top 16 bits of this (32 bit) value.
.LP
The
.B ms
field can be used to specify modes to be set and cleared.
These modes are specified as
.BR stty (1V)
modes; any mode supported by
.B stty
may be specified, except for the baud rate which must be specified
with the
.B br
field.
This permits modes not supported by the older
terminal interface described in
.BR ttcompat (4M)
to be set or cleared.
Thus, to set the terminal port to which the
printer is attached to even parity,
.SM TAB
expansion, no
.SM NEWLINE
to
.SM RETURN/LINEFEED
translation, and
.SM RTS/CTS
flow control enabled, do:
.RS
.nf
.B :ms=evenp,-tabs,nl,crtscts:
.fi
.RE
.LP
The
.BR m0 ,
.BR m1 ,
and
.B m2
fields can be used to set modes which only apply concurrently
with those set by
.BR f0 ,
.BR f1 ,
and
.BR f2 ,
respectively.
The modes specified by
.BR ms ,
.BR m0 ,
.BR m1 ,
and 
.B m2
are applied
.I after
the modes specified by other existing capabilities.
.LP
Should
.B getty
receive a
null
character (presumed to indicate a line break) it will
restart using the table indicated by the
.B nx
entry. If there is none, it will re-use its original table.
.LP
Delays are specified in milliseconds, the nearest possible delay
available in the tty driver will be used.
Should greater certainty be desired, delays with
values 0, 1, 2, and 3 are interpreted as choosing
that particular delay algorithm from the driver.
.LP
The
.B cl
screen clear string may be preceded by a (decimal) number of
milliseconds of delay required
(as with 
.BR termcap (5)).
This delay is simulated
by repeated use of the pad character
.BR pc .
.LP
The initial message, and login message,
.B im
and
.B lm
may include the character sequence
.B %h
or
.B %t
to obtain the hostname or tty name respectively.
.RB ( %%
obtains a single
.RB ` % '
character.) The hostname is normally
obtained from the system, but may be set by the
.B hn
table entry.  In either case it may be edited with
.BR he .
The
.B he
string is a sequence of characters, each character that is neither
.RB ` @ '
nor
.RB ` # '
is copied into the final hostname.  A
.RB ` @ '
in the
.B he
string, copies one character from the real
hostname to the final hostname.  A
.RB ` # '
in the
.B he
string, skips the next character of the real hostname.
Surplus
.RB ` @ '
and
.RB ` # '
characters are ignored.
.LP
When
.B getty
execs the login process, given in the
.B lo
string (usually
.BR /usr/bin/login ),
it will have set the environment to
include the terminal type, as indicated by the
.B tt
string (if it exists).  The
.B ev
string, can be used to enter additional data into the environment.  It
is a list of comma separated strings, each of which will presumably be
of the form
.IR name=value .
.LP
If a non-zero timeout is specified, with
.BR to ,
then
.B getty
will exit within the indicated number of seconds, either
having received a login name and passed control to
.IR login ,
or having received an alarm signal, and exited.  This may be useful to
hangup dial in lines.
.LP
Output from
.B getty
is even parity unless
.B op
or
.B p8
is specified.
.B op
may be specified with
.B ap
to allow any parity on input, but generate odd parity output.  Note:
this only applies while
.B getty
is being run, terminal driver limitations
prevent a more complete implementation.
.B getty
does not check parity of input characters in
.SM RAW
mode.
.SH FILES
.PD 0
.TP 20
.B /etc/gettytab
.PD
.SH "SEE ALSO"
.BR termcap (5),
.BR getty (8)
