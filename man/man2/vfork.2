.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\" @(#)vfork.2 1.1 92/07/30 SMI; from UCB 6.2 6/30/85
.TH VFORK 2 "21 January 1990"
.SH NAME
vfork \- spawn new process in a virtual memory efficient way
.SH SYNOPSIS
.nf
.ft B
#include <vfork.h>
.ft R
.fi
.LP
.nf
.ft B
int vfork(\|)
.ft R
.fi
.SH DESCRIPTION
.IX  vfork()  ""  \fLvfork()\fP
.IX  "processes and protection"  vfork()  ""  \fLvfork()\fP
.IX  "spawn process"
.LP
.B vfork(\|)
can be used to create new processes without fully copying the address
space of the old process, which is horrendously inefficient in a paged
environment.  It is useful when the purpose of
.BR fork (2V),
would have been to create a new system context for an
.BR execve (2V).
.B vfork(\|)
differs from
.B fork(\|)
in that the child borrows the parent's memory and thread of
control until a call to
.BR execve (2V),
or an exit (either by a call to
.BR exit (2V) 
or abnormally.)
The parent process is suspended while the child is using its resources.
.LP
.B vfork(\|)
returns 0 in the child's context and (later) the
process
.SM ID
(\s-1PID\s0)
of the child in the parent's context.
.LP
.B vfork(\|)
can normally be used just like
.BR fork .
It does not work, however, to return while running in the child's context
from the procedure which called
.B vfork(\|)
since the eventual return from
.B vfork(\|)
would then return to a no longer existent stack frame.
Be careful, also, to call
.B _exit(\|)
rather than
.B exit(\|)
if you cannot
.IR execve ,
since
.B exit(\|)
will flush and close standard I/O channels, and thereby mess up the
parent processes standard I/O data structures.
(Even with
.B fork(\|)
it is wrong to call
.B exit(\|)
since buffered data would then be flushed twice.)
.LP
On Sun-4 machines, the parent inherits the values of local and incoming
argument registers from the child.  Since this violates the usual
data flow properties of procedure calls, the file
.B <vfork.h>
must be included in programs that are compiled using
global optimization.
.SH RETURN VALUES
.LP
On success,
.B vfork(\|)
returns
0 to the child process and returns
the process
.SM ID
of the child process to the parent process.
On failure,
.B vfork(\|)
returns
\-1 to the parent process,
sets
.B errno
to indicate the error, and no child process is created.
.SH SEE ALSO
.BR execve (2V),
.BR exit (2V),
.BR fork (2V),
.BR ioctl (2),
.BR sigvec (2),
.BR wait (2V)
.SH BUGS
.LP
This system call will be eliminated in a future release.
System implementation changes are making the efficiency gain of
.B vfork(\|)
over
.BR fork (2V)
smaller.  The memory sharing semantics of
.B vfork(\|)
can be obtained through other mechanisms.
.LP
To avoid a possible deadlock situation,
processes that are children in the middle of a
.B vfork(\|)
are never sent
.SB SIGTTOU
or
.SB SIGTTIN
signals; rather, output or
.IR ioctl s
are allowed and input attempts result in an
.SM EOF
indication.
