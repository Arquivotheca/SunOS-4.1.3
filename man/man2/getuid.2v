.\" @(#)getuid.2v 1.1 92/07/30 SMI; from UCB 4.2
.TH GETUID 2V "21 January 1990"
.SH NAME
getuid, geteuid \- get user identity
.SH SYNOPSIS
.nf
.ft B
int getuid(\|)
.ft
.fi
.LP
.nf
.ft B
int geteuid(\|)
.ft
.fi
.SH SYSTEM V SYNOPSIS
.nf
.ft B
#include <sys/types.h>
.ft
.fi
.LP
.nf
.ft B
uid_t getuid(\|)
.ft
.fi
.LP
.nf
.ft B
uid_t geteuid(\|)
.ft
.fi
.IX  getuid()  ""  "\fLgetuid()\fP \(em get user ID"
.IX  "processes and protection"  getuid()  ""  \fLgetuid()\fP
.IX  "user ID"  get
.IX  "real user ID"  "get \(em \fLgetuid()\fR"
.IX  geteuid  ""  "\fLgeteuid()\fP \(em get effective user ID"
.IX  "processes and protection"  geteuid()  ""  \fLgeteuid()\fP
.IX  "effective user ID"  get
.SH DESCRIPTION
.LP
.B getuid(\|)
returns the real user
.SM ID
of the current process,
.B geteuid(\|)
the effective user
.SM ID\s0.
.LP
The real user
.SM ID
identifies the person who is logged in.
The effective user
.SM ID
.\" reword this?
gives the process different permissions during
execution of \*(lqset-user-\s-1ID\s0\*(rq mode processes, which use
.B getuid(\|)
to determine the real-user-id of the process
that invoked them.
.SH "SEE ALSO"
.BR getgid (2V),
.BR setreuid (2)
