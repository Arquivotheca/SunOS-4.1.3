.\" @(#)quotactl.2 1.1 92/07/30 SMI; from UCB 15 April 1985
.TH QUOTACTL 2 "21 January 1990"
.SH NAME
quotactl \- manipulate disk quotas
.SH SYNOPSIS
.nf
.B #include <ufs/quota.h>
.LP
.B int quotactl(cmd, special, uid, addr)
.B int cmd;
.B char \(**special;
.B int uid;
.B caddr_t addr;
.fi
.SH DESCRIPTION
.LP
.IX  "file system"  "quotactl() disk quotas"  ""  "\fLquotactl()\fP \(em disk quotas"
.IX  "quotactl() disk quotas"  ""  "\fLquotactl()\fP \(em disk quotas"
.IX  "disk quotas quotactl()"  ""  "disk quotas \(em \fLquotactl()\fP"
.LP
The
.B quotactl(\|)
call manipulates disk quotas.
.I cmd
indicates a command to be applied to the user
.SM ID
.IR uid .
.I special
is a pointer to a null-terminated string containing the path
name of the block special device for the file system being manipulated.
The block special device must be mounted as a
.SM UFS
file system
(see
.BR mount (2V)).
.I addr
is the address of an optional, command specific, data structure
which is copied in or out of the system.  The interpretation of
.I addr
is given with each command below.
.TP 15
.SB Q_QUOTAON
Turn on quotas for a file system.
.I addr
points to the path name of file containing the quotas for the file system.
The quota file must exist; it is normally created with the
.BR quotacheck (8)
program.  This call is restricted to the super-user.
.TP
.SB Q_QUOTAOFF
Turn off quotas for a file system.
.I addr
and
.I uid
are ignored.
This call is restricted to the super-user.
.TP
.SB Q_GETQUOTA
Get disk quota limits and current usage for user
.IR uid .
.I addr
is a pointer to a
.B dqblk
structure (defined in
.BR <ufs/quota.h> ).
Only the super-user may get the quotas of a user other than himself.
.TP
.SB Q_SETQUOTA
Set disk quota limits and current usage for user
.IR uid .
.I addr
is a pointer to a
.B dqblk
structure (defined in
.BR quota.h ).
This call is restricted to the super-user.
.TP
.SB Q_SETQLIM
Set disk quota limits for user
.IR uid .
.I addr
is a pointer to a
.B dqblk
structure (defined in
.BR quota.h ).
This call is restricted to the super-user.
.TP
.SB Q_SYNC
Update the on-disk copy of quota usages for a file system.
If
.I special
is null then all file systems with active quotas are sync'ed.
.I addr
and
.I uid
are ignored.
.SH RETURN VALUES
.LP
.B quotactl(\|)
returns:
.TP
0
on success.
.TP
\-1
on failure and sets
.B errno
to indicate the error.
.SH ERRORS
.TP 15
.SM EFAULT
.I addr
or
.I special
are invalid.
.TP
.SM EINVAL
The kernel has not been compiled with the
.SB QUOTA
option.
.IP
.I cmd
is invalid.
.TP
.SM ENODEV
.I special
is not a mounted
.SM UFS
file system.
.TP
.SM ENOENT
The file specified by
.I special
or
.I addr
does not exist.
.TP
.SM ENOTBLK
.I special
is not a block device.
.TP
.SM EPERM
The call is privileged and the caller was not the super-user.
.TP
.SM ESRCH
No disc quota is found for the indicated user.
.IP
Quotas have not been turned on for this file system.
.TP
.SM EUSERS
The quota table is full.
.LP
If
.I cmd
is
.BR \s-1Q_QUOTAON\s0
.BR quotactl (\)
may set errno to:
.TP 15
.SM EACCES
The quota file pointed to by
.I addr
exists but is not a regular file.
.IP
The quota file pointed to by
.I addr
exists but is not on the
file system pointed to by
.IR special .
.TP
.SM EBUSY
.SB Q_QUOTAON
attempted while another
.SB Q_QUOTAON
or
.SB Q_QUOTAOFF
is in progress.
.SH "SEE ALSO"
.BR quota (1),
.BR getrlimit (2),
.BR mount (2V),
.BR quotacheck (8),
.BR quotaon (8)
.SH BUGS
.LP
There should be some way to integrate this call with the resource
limit interface provided by
.B setrlimit(\|)
and
.BR getrlimit (2).
.LP
Incompatible with Melbourne quotas.
