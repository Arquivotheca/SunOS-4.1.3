.\" @(#)getpeername.2 1.1 92/07/30 SMI; from UCB 4.3
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.TH GETPEERNAME 2 "21 January 1990"
.SH NAME
getpeername \- get name of connected peer
.SH SYNOPSIS
.nf
.LP
.ft B
int getpeername(s, name, namelen)
int s;
struct sockaddr \(**name;
int \(**namelen;
.fi
.IX  getpeername()  ""  "\fLgetpeername()\fP \(em get name of connected peer"
.IX  "socket operations"  getpeername()  ""  \fLgetpeername()\fP
.IX  "peer name, get \(em \fLgetpeername()\fR"
.IX  "connected peer, get name of"
.SH DESCRIPTION
.LP
.B getpeername(\|)
returns the name of the peer connected to socket
.IR s .
The
.B int
pointed to by the
.I namelen
parameter should be initialized to indicate
the amount of space pointed to by
.IR name .
On return it contains the actual size of the name
returned (in bytes).
The name is truncated if the buffer provided is too small.
.SH DIAGNOSTICS
A 0 is returned if the call succeeds, \-1 if it fails.
.SH ERRORS
.TP 15
.SM EBADF
The argument
.I s
is not a valid descriptor.
.TP
.SM EFAULT
The
.I name
parameter points to memory not in a valid part of the
process address space.
.TP
.SM ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.TP
.SM ENOTCONN
The socket is not connected.
.TP
.SM ENOTSOCK
The argument
.I s
is a file, not a socket.
.SH "SEE ALSO"
.BR accept (2),
.BR bind (2),
.BR getsockname (2),
.BR socket (2)
