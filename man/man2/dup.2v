.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\" @(#)dup.2v 1.1 92/07/30 SMI; from UCB 6.3 5/13/86
.TH DUP 2V "21 January 1990"
.SH NAME
dup, dup2 \- duplicate a descriptor
.SH SYNOPSIS
.nf
.ft B
int dup(fd)
int fd;
.LP
.ft B
int dup2(fd1, fd2)
int fd1, fd2;
.fi
.IX  dup()  ""  \fLdup()\fP
.IX  "descriptors"  dup()  ""  \fLdup()\fP
.IX  dup2()  ""  \fLdup2()\fP
.IX  "descriptors"  dup2()  ""  \fLdup2()\fP
.IX  "duplicate descriptor"
.SH DESCRIPTION
.LP
.B dup(\|)
duplicates an existing object descriptor.
The argument
.I fd
is a small non-negative integer index in
the per-process descriptor table.  The value must be less
than the size of the table, which is returned by
.BR getdtablesize (2).
The new descriptor returned by the call
is the lowest numbered descriptor that is
not currently in use by the process.
.LP
With
.BR dup2(\|) ,
.I fd2
specifies the desired value of the new descriptor.
If descriptor
.I fd2
is already in use, it is first deallocated as if it were closed by
.BR close (2V).
.LP
The new descriptor has the following in common with the original:
.TP 3
\(bu
It refers to the same object that the old descriptor referred to.
.TP 3
\(bu
It uses the same seek pointer as the old descriptor.
(that is, both file descriptors share one seek pointer).
.TP 3
\(bu
It has the same access mode (read, write or read/write) as the old descriptor.
.LP
Thus if
.I fd2
and
.I fd1
are duplicate references to an open file,
.BR read (2V),
.BR write (2V),
and
.BR lseek (2V)
calls all move a single seek pointer into the file,
and append mode, non-blocking I/O and asynchronous I/O options
are shared between the references.
If a separate seek pointer into the file is desired, a different
object reference to the file must be obtained by issuing an
additional
.BR open (2V)
call.
The close-on-exec flag on the new file descriptor is unset.
.LP
The new file descriptor
is set to remain open across
.B exec
system calls
(see
.BR fcntl (2V).
.SH RETURN VALUES
.LP
.B dup(\|)
and
.B dup2(\|)
return
a new descriptor
on success.
On failure,
they return
\-1
and set
.B errno
to indicate the error.
.SH ERRORS
.TP 15
.SM EBADF
.I fd1
or
.I fd2
is not a valid active
descriptor.
.TP
.SM EMFILE
Too many descriptors are active.
.SH "SEE ALSO"
.BR accept (2),
.BR close (2V),
.BR fcntl (2V),
.BR getdtablesize (2),
.BR lseek (2V),
.BR open (2V),
.BR pipe (2V),
.BR read (2V),
.BR socket (2),
.BR socketpair (2),
.BR write (2V)
