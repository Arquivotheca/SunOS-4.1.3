.\" @(#)ldd.1 1.1 92/07/30
.TH LDD 1 "12 November 1987"
.SH NAME
ldd \- list dynamic dependencies
.SH SYNOPSIS
.B ldd
.I filename
.B .\|.\|.
.SH DESCRIPTION
.IX "ldd command" "" "\fLldd\fP \(em list dynamic dependencies"
.IX "ldd command" "" "\fLldd\fP \(em list shared libraries"
.IX display "dynamic dependencies \(em \fLldd\fP"
.IX "shared libraries" "display users of \(em \fLldd\fP"
For each
.I filename ,
.B ldd
lists the dynamically loaded objects on which that 
.I filename
depends, if any.  If the dynamic dependency is a ``library'' (a so-called 
``shared library''), then both the canonical form of the library name and
version and the actual pathname used to access the library are listed.
For example, if a given
.I filename
uses a shared C library version 4, which has the name
.B /usr/lib/libc.so.4.9
(where 9 is the most recent revision to interface version number 4)
then
.B ldd
.I filename
will report:
.sp 1
.nf
.ft B
filename:
	-lc.4 => /usr/lib/libc.so.4.9
.ft P
.fi
.sp 1
For each
.I filename
which is 
not an executable program, or else does not require any dynamic objects
for its execution, 
.B ldd
will issue an appropriate diagnostic.
.LP
It should be noted that although all
dynamically linked programs depend on the
file
.B /usr/lib/ld.so ,
.B ldd
will never report this dependency.
.SH "SEE ALSO"
.BR ld (1)
