.\" @(#)bar.1	1.1 92/07/30 SMI;
.TH BAR 1 "19 February 1988"
.SH NAME
bar \- create tape archives, and add or extract files
.SH SYNOPSIS
.B bar
[
.B \-
]
.B crxtu
[
.B 014578feovwbXlFmhpBisHSUZRTIN
]
.if n .ti +5n
[
.I bar-file
] [
.I blocksize
]
[
.I exclude-file
]
.if t .ti +0.5i
[
.I string
]
.if n .ti +5n
[
.I target_directory
]
[
.I user_id
]
[
.I include-file
]
.if n .ti +5n
.I filename1
\&.\|.\|.
.if t .ti +.5i
[
.B \-C
.I dir filename
\&.\|.\|.
]\|.\|.\|.
.SH DESCRIPTION
.IX "bar command" "" "\fLbar\fP command\fP"
.IX "tape archives" "bar" "" "\fLbar\fP command"
.IX "archive tapes" tar "" "\fLtar\fP"
.LP
.B bar
archives and extracts multiple files onto a single
.BR bar ,
file archive, called a
.IR bar-file .
It is quite similar to
.BR tar (5),
but it has additional function modifiers, can
read and write multiple volumes, and writes and reads a format
that is incompatible with
.BR tar
(see
.BR bar (5)).
A bar-file is usually a magnetic tape, but it can be any file.
.BR bar 's
actions are controlled by the first argument, the
.IR key ,
a string
of characters containing exactly one function letter from the set
.BR rxtuc ,
and one or more of the optional function
modifiers
listed below.
Other
arguments to
.B bar
are file or directory names that specify which
files to archive or extract.
In all cases, the appearance of a
directory name refers recursively to the files and subdirectories
of that directory.
.SH "FUNCTION LETTERS"
.TP 3
.B c
Create a new
.I bar-file
and write the named files onto it.
.TP
.B r
Write the named files on the end of the
.IR bar-file .
Note: this option
.I "does not work"
with quarter-inch archive tapes.
.TP
.B x
Extract the named files from the
.IR bar-file .
If a named file
matches a directory with contents written onto the tape, this
directory is (recursively) extracted.
The owner, modification time, and mode
are restored (if possible).
If no
.I filename
arguments are given, all files in the archive are extracted.
Note:
if multiple entries specifying the same file are on the tape, the
last one overwrites all earlier versions.
.TP
.B t
List the table of contents of the
.IR bar-file .
.TP
.B u
Add the named files to the
.I bar-file
if they are not there or if they have been modified since they
were last archived.
Note: this option
.I "does not work"
with quarter-inch archive tapes.
.SH "FUNCTION MODIFIERS"
.TP 3
.B 014578
Select an alternate drive on which the tape is mounted.
The numbers
.BR 2 ,
.BR 3 ,
.BR 6 ,
and
.B 9
do not specify valid drives.
The default is
.BR /dev/rmt8 .
.TP
.B f
Use the next argument as the name of the
.IR bar-file .
If
.B f
is omitted, use the device indicated by the
.SB TAPE
environment variable, if set.
Otherwise, use
.B /dev/rmt8
by default.
If
.I bar-file
is given as
.RB ` \- ',
.B bar
writes to the standard output or reads from
the standard input, whichever is appropriate.
Thus,
.B bar
can be used as the head or tail of a filter chain.
.B bar
can also be used
to copy hierarchies with the command:
.IP
.B
example% cd fromdir; bar cf \- . | (cd todir; bar xfBp \-)
.LP
.TP
.B e
If any unexpected errors occur
.B bar
exits immediately with a
positive exit status.
.TP
.B o
Suppress information specifying owner and modes of
directories which
.B bar
normally places in the archive.
Such information makes former versions of
.B bar
generate an
error message like:
.RS
.IP
.BI filename ": cannot create"
.RE
.IP
when they encounter it.
.TP
.B v
Verbose.
Normally
.B bar
does its work silently; the
.B v
option displays the name of each file
.B bar
treats, preceded by the function
letter.
When used with the
.B t
function,
.B v
displays the
.I bar-file
entries in a form similar to
.RB ` "ls \-l '.
.br
.ne 7
.TP
.B w
Wait for user confirmation before taking
the specified action.
If you use
.BR w ,
.B bar
displays the action to be taken followed by the
file name, and then waits for a
.B y
response to proceed.
No action is
taken on the named file if you type
anything other than a line beginning with
.BR y .
.TP
.B b
Use the next argument as the blocking factor for tape records.
The default blocking factor is 20 blocks.
The block size is determined
automatically when reading tapes (key letters
.B x
and
.BR t ).
This determination of the blocking factor
may be fooled when reading from a
pipe or a socket (see the
.B B
key letter below).
The maximum
blocking factor is determined only by the amount of memory available to
.B bar
when it is run.
Larger blocking factors result in
better throughput, longer blocks on nine-track
tapes, and better media utilization.
.TP
.B X
Use the next argument as a file containing a list of named files
(or directories) to be excluded from the
.I bar-file
when using the key letters
.RB ` c ',
.RB ` x ',
or
.RB ` t '.
Multiple
.B X
arguments may be used, with one
.I exclude-file
per argument.
.TP
.B l
Display error messages if all links to
archived files cannot be resolved.
If
.B l
is not used, no error messages are printed.
.TP
.B F
With one
.B F
argument specified, exclude
all directories named
.SM SCCS
from
.IR bar-file .
With two arguments
.BR \s-1FF\s0 ,
exclude all directories named
.SM SCCS\s0,
all files with
.B .o
as their suffix,
and all files named
.BR errs ,
.BR core ,
and
.BR a.out .
.TP
.B m
Do not extract modification times of extracted files.
The modification time
will be the time of extraction.
.TP
.B h
Follow symbolic links as if they were
normal files or directories.
Normally,
.B bar
does not follow symbolic links.
.TP
.B p
Restore the named files to their original modes, ignoring the present
.BR umask (2V).
Setuid and sticky information are also extracted if you are
the super-user.
This option is only useful with the
.B x
key letter.
.TP
.B B
Force
.B bar
to perform multiple reads (if necessary) so as to read exactly enough
bytes to fill a block.
This option exists so that
.B bar
can work across the Ethernet, since pipes and sockets return partial
blocks even when more data is coming.
.TP
.B i
Ignore directory checksum errors.
.TP
.B s
Force the ownership of extracted files to match the
.B bar
process's effective user
.SM ID
and group
.SM ID\s0.
.TP
.B H
The string of up to 128 characters is to be used as a volume
header
.SM ID\s0.
A volume header is written to each volume of the archive when
the
.B c
function letter is specified.
See
.BR bar (5)
for the volume header's format.
.IP
Use of the
.B H
function modifier when creating an archive allows
.B bar
to read volumes out of sequence.
When extracting a file that spans volumes,
.B bar
will identify the tape(s) it needs to extract the entire file.
If the wrong volume is inserted,
.B bar
issues a warning and prompts again
for the correct volume.
.TP
.B S
Place files specified for extraction in this target directory when used
with the
.B x
function letter.
.TP
.B U
Specify the user
.SM ID 
in the volume header when creating archive,
when the
.B H
function modifier is
used.
If the
.B c
function letter is specified and
a volume header exists,
.B bar
will verify that the user ids match before overwriting
.I bar-file
if the
.B N
modifier is specified.
.TP
.B Z
Specify compression.
.B bar
will compress files when used with the
.B c
function letter and will decompress files when used with the
.B x
function letter.
.B bar
will neither compress a compressed file, nor
decompress a decompressed file.
.TP
.B R
Read the volume header and print the information to stdout.
.br
.ne 3
.TP
.B N
See if the user owns the media (uid matches that in the bar header) before
overwriting bar-file with the C key word.
.br
.ne 3
.TP
.B T
When using the
.B x
or
.B t
function letters, terminate the search of the media after
all the files specified are extracted (for
.BR x )
or listed (for
.BR t ).
.br
.ne 7
.TP
.B I
Use the next argument as a file containing a list of named files, one
per line, to be included in the
.B bar
archive.
The include file expects filenames to be followed by a semicolon and newline
character.
.sp
In the case where excluded files (see
.B X
flag) also exist, excluded files take
precedence over all included files.
So, if a file is specified in both the
include and exclude files (or on the command line),
it will be excluded.
.SH OPTIONS
.TP 3
.BR \-C " dir filename"
In a
.B c
.RB ( create )
or
.B r
.RB ( replace )
operation,
.B bar
performs a
.B chdir
(see
.BR csh (1))
to that directory before interpreting filename.
This allows multiple directories not
related by a close common parent to be archived using short
relative path names.
For example, to archive files from
.B /usr/include
and from
.BR /etc ,
one might use:
.IP
.B
example% bar c \-C /usr include \-C /etc  .
.IP
If you get a table of contents from the resulting
.BR bar-file ,
you will see something like:
.RS
.nf
.B include/
.B include/a.out.h
.IB "and all the other files in " "/usr/include .\|.\|./chown"
.IB "and all the other files in " /etc
.fi
.RE
.LP
Note: the
.B \-C
option only applies to
.I one
following directory name and
.I one
following file name.
.SH EXAMPLES
.LP
Here is a simple example using
.B bar
to create an archive of your
home directory on a tape mounted on drive
.BR /dev/rmt0 :
.LP
.RS
.nf
.B example% cd
.B example% bar cvf /dev/rmt0 .
.I messages
.fi
.RE
.LP
The
.B c
option means create the archive; the
.B v
option makes
.B bar
tell you what it's doing as it works;  the
.B f
option
means that you are specifically naming the file onto which the archive
should be placed 
.RB ( /dev/rmt0
in this example).
.LP
Here is another example:
.BR /dev/rmt0 :
.IP
.nf
.ft B
example% cd
example% bar cvfH /dev/rmt0 "\s-1THIS IS MY HEADER\s0"  .
.I "messages"
.ft R
.fi
.LP
As in the first example, the
.B c
option means create the archive; the
.B v
option makes
.B bar
tell you what it's doing as it works;  the
.B f
option
means that you are specifically naming the file onto which the archive
should be placed 
.RB ( /dev/rmt0
in this example).  The
.B H
option says to use the string
\fB"\s-1THIS IS MY HEADER\s0"\fR as the
.SM ID
field in the volume header.
.br
.ne 7
.LP
Now you can read the table of contents from the archive like this:
.IP
.nf
.ft B
example% bar tvf /dev/rmt0
.ta 25n +5n +12
(access  user-id/group-id	size	mod. date	filename)
rw-r--r-- 1677/40 	2123	Nov 7 18:15:1985	./archive/test.c
\&.\|.\|.
example%
.ft
.fi
.br
.ne 5
.LP
You can extract files from the archive like this:
.RS
.nf
.ft B
example% bar xvf /dev/rmt0
.I "messages"
.ft
.fi
.RE
.LP
If there are multiple archive files on a tape, each is separated
from the following one by an
.SM EOF
marker.
.B bar
does not read the
.SM EOF
mark on the tape after it finishes reading an
archive file because
.B bar
looks for a special header to decide
when it has reached the end of the archive.
Now if you try to use
.B bar
to read the next archive file from the tape,
.B bar
does not know enough to skip over the
.SM EOF
mark and tries to read the
.SM EOF
mark as an archive instead.
The result of this is an
error message from
.B bar
to the effect:
.IP
.B bar: blocksize=0
.LP
This means that to read another archive from the tape, you must
skip over the
.SM EOF
marker before starting another
.B bar
command.
You can accomplish this using the
.B mt
command, as shown
in the example below.
Assume that you are reading from
.BR /dev/nrmt0 .
.IP
.nf
.ft B
example% bar xvfp /dev/nrmt0 \fIread first archive from tape\fP
\fImessages\fP
example% mt fsf 1 \fIskip over the end-of-file marker\fP
example% bar xvfp /dev/nrmt0 \fIread second archive from tape\fP
\fImessages\fP
example%
.ft R
.fi
.LP
Finally, here is an example using
.B bar
to transfer files across the Ethernet.
First, here is how to archive files
from the local machine
.RB ( example )
to a tape on a remote system
.RB ( host ):
.IP
.nf
.ft B
example% bar cvfb \-  20 \fIfilenames\fP | rsh host dd of=/dev/rmt0 obs=20b
\fImessages\fP
example%
.ft R
.fi
.LP
In the example above, we are
.I creating
a
.I bar-file
with the
.B c
key letter, asking for
.I verbose
output from
.B bar
with the
.B v
option, specifying the name of the output
.I bar-file
using the
.B f
option (the standard output is where the
.I bar-file
appears, as indicated
by the
.B \-
sign), and specifying the blocksize (20) with the
.B b
option.
If you want to change the blocksize, you must change the blocksize
arguments both on the
.B bar
command
.I and
on the
.B dd
command.
.LP
Now, here is how to use
.B bar
to get files from a tape on the remote system back to the
local system:
.IP
.nf
.ft B
example% rsh \-n host dd if=/dev/rmt0 bs=20b | bar xvBfb \- 20 \fIfilenames\fP
\fImessages\fP
example%
.ft R
.fi
.LP
In the example above, we are
.I extracting
from the
.I bar-file
with the
.B x
key letter, asking for
.I verbose output from
.B bar
with the
.B v
option, telling
.B bar
it is reading from a pipe with the
.B B
option, specifying the name of the input
.I bar-file
using the
.B f
option (the standard input is where the
.I bar-file
appears, as indicated
by the
.RB ` \- '
sign), and specifying the blocksize (20) with the
.B b
option.
.SH FILES
.PD 0
.TP 20
.B /dev/rmt?
half-inch magnetic tape interface
.TP
.B /dev/rar?
quarter-inch magnetic tape interface
.TP
.B /dev/rst?
.SM SCSI
tape interface
.TP
.B /tmp/bar*
.PD
.SH ENVIRONMENT
.TP 10
.SB TAPE
If specified, in the environment, the value of
.SB TAPE
indicates the default tape device.
.\" Sun386i
.SH NOTES
.B bar
will handle multiple volumes gracefully.
If a tape error is
encountered,
.B bar
issues a message on the standard error
requesting a new volume.
The presence of a new volume is confirmed when
.B bar
reads a line beginning with
.B Y
or
.B y
on the standard input; a line beginning with
.B N
or
.B n
aborts the archive; with any other character
.B bar
reissues the prompt.
.\" Sun386i
.SH "SEE ALSO"
.BR cpio (1),
.BR mt (1),
.BR umask (2V),
.BR bar (5),
.BR tar (5),
.BR dump (8),
.BR restore (8)
.SH BUGS
.LP
Neither the
.B r
option nor the
.B u
option can be used with quarter-inch archive tapes, since these tape
drives cannot backspace.
.LP
There is no way to ask for the
.IR n th
occurrence of a file.
.LP
The
.B u
option can be slow.
.LP
There is no way selectively to follow symbolic links.
.LP
When extracting tapes created with the
.B r
or
.B u
options, directory modification times may not be set correctly.
.LP
Files with names longer than 100 characters cannot be processed.
.LP
Filename substitution wildcards do not work for extracting
files from the archive.
To get around this, use a command of
the form:
.IP
.BI "bar xvf.\|.\|. /dev/rst0 `bar tf.\|.\|. /dev/rst0 | grep '" pattern \|'`
.LP
If you specify
.RB ` \- '
as the target file and the archive spans
volumes, the request for a new volume may get lost.
