.\" @(#)old-vc.1 1.1 92/07/30 SMI;
.TH OLD-VC 1 "16 November 1987"
.SH NAME
old-vc \- version control
.SH SYNOPSIS
.B /usr/old/vc
.RB [ " \-a " ]
.RB [ " \-s " ]
.RB [ " \-t " ]
.RB [ " \-c"\c
.IR c " ]"
.RI [ " keyword" = value ].\|.\|.
.SH DESCRIPTION
.IX "vc command" "" "\fLvc\fR command"  
.LP
The
.B vc
command copies lines from the standard input to the
standard output under control of its 
.I arguments
and the
.I "control statements"
encountered in the standard input.
In the process of performing the copy operation, a reference to a
user-declared
.I keyword
is replaced by its character-string
.IR value ,
when appearing in a plain text line or control statement.
.LP
Copying lines from the standard input to the standard output is
conditional, based on tests (in control statements)
of keyword values specified either in control statements, or as
.B vc
command-line arguments.
.SH OPTIONS
.TP
.B \-a
Force replacement of keyword references in
.I all
text lines, and not just in
.B vc
statements.
.TP
.B \-s
Silent.  Suppress warning messages (but not error messages) that are
normally printed on the diagnostic output.
.TP
.B \-t
If a
.SM TAB
character appears on a line, all characters from the beginning of a
line, up to and including the first
.SM TAB,
are ignored for the purpose of detecting a control statement.
If the
.SM TAB
precedes a control statement, the leading text is discarded.
.TP
.BI \-c c
Specify an alternate control character to use instead of 
.RB ` : '.
.SH USAGE
.LP
.B vc
distinguishes between text input lines and version control statement 
lines.  A version control statement (control statement) is a single
line beginning with a control character.  The default control character
is colon 
.RB ( : ), 
except as modified by the
.BI \-c c
option.  Input lines beginning with a backslash 
.RB ( \|\e\| ), 
and followed by a control character, are not control lines and are copied
to the standard output as text with the backslash removed.  Lines
beginning with a backslash, but not followed by a control character,
are copied in their entirety.
.SS Keyword Replacement
.LP
A keyword is composed of 9 or less alphanumeric characters;
the first must be alphabetic.  A value
is any printable 
.SM ASCII 
character or character string.
An unsigned string of digits is treated as a numeric value in
control operations.  Keyword values may not contain any
.SM SPACE
or
.SM TAB
characters.
.LP
Keyword replacement is performed whenever a keyword, surrounded by
control characters, is encountered on a version control statement.
The
.B \-a
option forces replacement of keywords in
.I all
lines of text.
An uninterpreted control character may be included in a value by
preceding it with 
.RB ` \|\e\| '. 
If a literal 
.RB ` \|\e\| '
is desired, then it too must be preceded by a 
.RB ` \|\e\| '.
.SS "Version Control Statements"
.HP
.B : dcl
.IR keyword [, keyword ]
.IP
Declare a keyword.  All keywords must be declared.
.HP
.B : asg
.IB keyword = value
.IP
Assign a value to  a keyword.  An
.B asg
statement overrides any previous assignment for the corresponding
keyword, including those on the
.B vc
command line.
Keywords declared, but not assigned values, have null values.
.br
.ne 10
.HP
.B :if
.RB [ not ]
.I condition
.PD 0
.TP
\&.\|.\|.
.TP
.B :end
.PD
Skip lines of the standard input.  When 
.I condition
is
.SM TRUE\s0 ,
all lines between the
.B if
statement and
the matching
.B end
statement are 
.I copied
to the standard output.
Otherwise, the intervening lines are discarded and ignored,
.I including
intervening control statements.
Intervening
.B if
and 
.B end
control statements are recognized solely for the purpose of
maintaining the proper
.BR if \- end
matching. The
.B not
argument inverts the sense of the condition.  When it is used,
intervening lines are included in the output only when the
conditions is false.
.IP
.I condition
is a logical expression composed of
.I comparisons
and logical operators.
A
.I comparison
consists of two text values (may be keyword references)
separated by a comparison operator.  Each value must be separated
from all operators by at least one
.SM SPACE\s0 .
Numeric strings are treated as unsigned integers for certain
comparisons.  The comparison operators are:
.RS
.RS
.TP
.B =
equal (string)
.PD 0
.TP
.B !=
not equal (string)
.TP
.B >
greater than (numeric)
.TP
.B <
less than (numeric)
.PD
.RE
.LP
For instance, the line:
.IP
.B :if 
.I xxx 
.B != 
.I yyy
.LP
tests to see whether the string 
.RI ` xxx ' 
is not equal to 
.RI ` yyy ', 
which is
true; subsequent intervening lines are therefore included.
.LP
The logical sense of comparisons can be combined using the
logical operators (in order of precedence):
.RS
.TP
.B ( )
logical grouping
.TP
.B &
and
.PD 0
.TP
.B |
or
.PD
.RE
.LP
For instance, the line
.IP
.B :if
.I xxx
.B =
.I yyy
.B |
.I xxx
.BI != " yyy"
.LP
is true because either comparison will make it true, while
.IP
.B :if 
.I xxx 
.B = 
.I yyy 
.B & 
.I xxx 
.B != 
.I yyy
.LP
is false, because in this case, both comparisons must be true.
.RE
.TP
.BI :: text
Force keyword replacement on lines that are copied to the standard
output, independent from the
.B \-a 
option.  The two leading control characters are removed,
and keywords surrounded by control characters in text are replaced
by their value before the line is copied to the
output file.
.TP
.B :on 
.PD 0
.TP
.B :off
Turn on or off keyword replacement on all lines.
.PD
.TP
.BI :ctl " c"
Change the control character to
.IR c .
.TP
.BI :msg " message"
Print
.I message
on the diagnostic output.
.TP
.BI :err " message"
Print the given message, followed by:
.RS
.IP
.SB ERROR\s0: err statement on line .\|.\|. 
.B (915)
.RE
.IP
on the diagnostic output;
.B vc
halts execution, and returns an exit code of 
.BR 1 .
.SH "SEE ALSO"
.BR sccs-help (1)
.SH DIAGNOSTICS
Use
.BR sccs-help (1)
for explanations.

