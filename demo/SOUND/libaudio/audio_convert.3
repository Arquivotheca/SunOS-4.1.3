.\" @(#)audio_convert.3 1.1 92/07/30 SMI
.ds Dc 7/30/92
.TH AUDIO_CONVERT 3 "\*(Dc" "" "Audio Library"
.SH NAME
audio_convert,
audio_d2c,
audio_d2s,
audio_d2l,
audio_c2d,
audio_s2d,
audio_l2d
\- floating-point data conversions
.SH DISCLAIMER
.LP
The manual pages, header files, and object library associated with
.B /usr/demo/SOUND/libaudio.a
are furnished on an AS IS basis as a preliminary interface to several
useful audio data-processing capabilities.  A future release of the
operating system may redefine the syntax or semantics of some of the
functions described herein.
.SH SYNOPSIS
.nf
.B #include <multimedia/libaudio.h>
.LP
.B char audio_d2c(dbl)
.B double dbl;
.LP
.B short audio_d2s(dbl)
.B double dbl;
.LP
.B long audio_d2l(dbl)
.B double dbl;
.LP
.B double audio_c2d(pcm)
.B char pcm;
.LP
.B double audio_s2d(pcm)
.B short pcm;
.LP
.B double audio_l2d(pcm)
.B long pcm;
.fi
.SH DESCRIPTION
These macros are designed to facilitate conversion between
integer and floating-point
.SM PCM
audio data.
.LP
.BR audio_c2d(\|) ,
.BR audio_s2d(\|) ,
and
.B audio_l2d(\|)
convert 8, 16, and 32 bit
.SM PCM
signed integers to floating-point values that range between \-1. and +1.
In order to preserve symmetry around 0, the singular value represented by
the most negative integer (i.e., -128, -32768, -2147483648) is clipped
to \-1.
.LP
.BR audio_d2c(\|) ,
.BR audio_d2s(\|) ,
and
.B audio_d2l(\|)
convert floating-point data to
.SM PCM
signed integers of 8, 16, or 32 bit precision, respectively.
Floating-point values outside the range of \(+-1. are clipped at
full range in the appropriate precision.
.SH SEE ALSO
.BR audio_ulaw2linear (3).
