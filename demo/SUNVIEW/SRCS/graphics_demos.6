.\" @(#)graphics_demos.6 1.1 88/03/04 SMI;
.TH GRAPHICS_DEMOS 6 "4 March 1988"
.SH NAME
graphics_demos, bouncedemo, cframedemo, framedemo, goban, jumpdemo, maze, shaded, show, showmap, spheresdemo, stringart, suncube \- graphics demonstration programs
.SH SYNOPSIS
.B /usr/demo/bouncedemo
.RB [ " \-d \fIdev " ]
.RB [ " \-n\fIx " ]
.RB [ " \-r " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/cframedemo
.RB [ " \-d \fIdev " ]
.RB [ " \-n\fIx " ]
.RB [ " \-r " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/framedemo
.RB [ " \-d \fIdev " ]
.RB [ " \-n\fIx " ]
.RB [ " \-r " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/goban
.I game
.LP
.B /usr/demo/jumpdemo
.RB [ " \-c " ]
.RB [ " \-d \fIdev " ]
.RB [ " \-n\fIx " ]
.RB [ " \-r " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/maze
.LP
.B shaded
.I object
.RB [ " \-d \fIdev " ]
.LP
.B /usr/demo/show
.IR rasterfile " [ " rasterfile " .\|.\|. ]"
.LP
.B /usr/demo/showmap
.RB [ " \-d \fIdev " ]
.RB [ " \-q " ]
.LP
.BR /usr/demo/spheresdemo
.RB [ " \-d \fIdev " ]
.RB [ " \-n\fIx " ]
.RB [ " \-r " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/stringart
.RB [ " \-d \fIdev " ]
.RB [ " \-q " ]
.LP
.B /usr/demo/suncube
.RB [ " \-d \fIdev " ]
.RB [ " \-q " ]
.SH AVAILABILITY
These demos are available with the
.I Demos
software installation option.  Refer to
.TX INSTALL
for information on how to install optional software.
.SH DESCRIPTION
.IX demos graphics_demos
.IX demos bouncedemo "" "\fLbouncedemo\fR \(em bouncing square graphics demo"
.IX bouncedemo "" "\fLbouncedemo\fR \(em bouncing square graphics demo"
.IX demos cframedemo "" "\fLcframedemo\fR \(em graphics demo"
.IX cframedemo "" "\fLcframedemo\fR \(em graphics demo"
.IX demos framedemo "" "\fLframedemo\fR \(em graphics demo"
.IX framedemo "" "\fLframedemo\fR \(em graphics demo"
.IX demos goban "" "\fLgoban\fR \(em go board graphics demo"
.IX goban "" "\fLgoban\fR \(em go board graphics demo"
.IX demos jumpdemo "" "\fLjumpdemo\fR \(em graphics demo"
.IX jumpdemo "" "\fLjumpdemo\fR \(em graphics demo"
.IX demos maze "" "\fLmaze\fR \(em graphics demo"
.IX maze "" "\fLmaze\fR \(em graphics demo"
.IX demos shaded "" "\fLshaded\fR \(em graphics demo"
.IX shaded "" "\fLshaded\fR \(em graphics demo"
.IX demos show "" "\fLshow\fR \(em graphics demo"
.IX show "" "\fLshow\fR \(em graphics demo"
.IX demos showmap "" "\fLshowmap\fR \(em graphics demo"
.IX showmap "" "\fLshowmap\fR \(em graphics demo"
.IX demos spheresdemo "" "\fLspheresdemo\fR \(em graphics demo"
.IX spheresdemo "" "\fLspheresdemo\fR \(em graphics demo"
.IX demos stringart "" "\fLstringart\fR \(em graphics demo"
.IX stringart "" "\fLstringart\fR \(em graphics demo"
.IX demos suncube "" "\fLsuncube\fR \(em graphics demo"
.IX suncube "" "\fLsuncube\fR \(em graphics demo"
.LP
.SS bouncedemo
.B bouncedemo
displays a bouncing square.
.SS cframedemo
.B cframedemo
displays a series of color frames, each of which contains a 256
by 256 image of eight-bit-deep pixels.
.B cframedemo
looks for the frames in the files
.B frame.1
through
.B frame.n
in the current working directory, and displays
them in numerical order.  When run in the directory
.B /usr/demo/globeframes,
.B cframedemo
displays a rotating view of the world.
.SS framedemo
.B framedemo
displays a series of frames, each of which contains a 256 by 256 image
one-bit-deep pixels (that is, the image is a square monochrome bitmap,
with 256 bits on a side).
.B framedemo
looks for the frames in the files
.B frame.1
through
.B frame.n
in the current working directory, and displays
them in numerical order.  A set of sample frames is available
in the directory
.BR /usr/demo/globeframes/* .
.SS \fIInteractive Commands\fR
.LP
If you move the cursor onto the image surface,  you can type certain
commands to affect the rate at which the frames are displayed. The
initial rate is one frame per second:
.TP
.B f
Remove 1/20th of a second from the interval.
.TP
.B F
Remove one second from the interval.
.B Ff
makes the interval as small as possible.
.TP
.B s
Add 1/20th of a second.
.TP
.B S
Add one second.
.SS goban
.B goban
is Japanese for "go board".  It is an automatic board, but
does not play go.  If you invoke it with no
.I game
argument,
.B goban
displays an important historical game written
about by the Nobel Prize winning author, Yasunari Kawabata in
.I "The Master of Go,"
a book which conveys the spirit of this ancient and facinating game.
.LP
Stones are placed on the board by selecting a grid point with
the cursor and pressing the left-button.  As stones are played,
the color to play next alternates between black and white.
The center-button, when pressed in the board area, backs up a move
(undoes it).  The right-button moves
forward through the game's sequence of moves.
.LP
Stepping backward and forward does not alter the game until the
left-button is pressed to place a stone,
at which time a new branch in the
line of play is begun.  You can select branches by clicking the left
button on moves with lettered labels on the board.
.LP
A text subwindow displays any commentary
attached to a move.  You can edit
these comments, which are saved along with the game.
.SS jumpdemo
.B jumpdemo
simulates the famous
.B Star Wars
jump to light-speed-sequence using
vector drawing.  Colored stars are drawn on color surfaces.
.SS maze
.B maze
creates a random maze-pattern and tries a depth-first solution.
If used in lockscreen, remember to run in "nice" mode since this
demo consumes lots of cpu cycles.
.SS Shaded
.B shaded
displays shaded objects.  Objects are located in
.B usr/demo/\s-1DATA\s0
and include an icosahedron, glass, soccer ball, space shuttle,
egg and pyramid.  This demo can take up to 40 seconds to start
up with som objects.  Mouse input is required:
.LP
.SS \fIInteractive Commands\fR
.LP
Click the left- and middle-buttons on the left grid to set the
x-y orientation.  Click the middle-button on the right grid to
set the z orientation.  Click the left-button away from either
grid to open the features menu, from which you can make selections
using the left-button.
.LP
After selecting the desired features, click the left-button away
from all objects to exit the features menu.
.LP
Click the right-button to begin drawing the object.  When the
figure is finished, click the right-button to return to the
grids and menu, or type
.B q
to exit.
.SS show
.B show
display rasterfiles in a window or on a raw screen.
Sample files are contained in the directory
.BR /usr/demo/\s-1COLORPIX\s0 .
Running
.RS
.B "show \s-1COLORPIX\s0/*"
.RE
from
.B /usr/demo
will continuously cycle through the sample images.
.SS spheresdemo
.B spheresdemo
computes a random collection of shaded spheres.
Colored spheres are drawn on color surfaces.
.SS showmap
.B showmap
display 10 map projections continuously until interrupted.
Each map is displayed for about 5 seconds.
The maps are in the directory
.BR /usr/demo/\s-1MAPS\s0 .
.SS stringart
.B stringart
continuously display a different "work of art" every 5 seconds.
A total of 24336 different designs are possible.  On color surfaces
the designs will loop through the colors: red, olive, green, turquoise,
blue, and violet.
.SS suncube
Display a cube with the
.SM SUN
logo mapped to each face.  Will run continuously until interrupted.
On color surfaces the colors of logo segments change gradually.  On
monochrome surfaces the logo segments remain hollow.
.SH OPTIONS
.TP
.B \-c
Rotate the color map to produce a sparkling effect.
.ne 3
.TP
.BI \-d " surface"
Run the demo on a surface other than the window or system console,
for instance:
.RS
.IP
.B bouncedemo -d /dev/cgone0
.RE
.TP
.BI \-n x
Draw
.I x
items, or repeat a sequence
.I x
times.
.TP
.B \-r
Retain the window.  This allows the image to reappear
when uncovered instead of restarting the demo.
.TP
.B \-q
Quick exit.  Useful for running several demos from within a
shell script.
.SH SEE ALSO
.BR gfxtool (1),
.BR gp_demos (6)
